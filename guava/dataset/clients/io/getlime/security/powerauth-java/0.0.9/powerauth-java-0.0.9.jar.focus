io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/getProviderName()
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#javax/crypto/Cipher/doFinal(byte%5B%5D)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#java/lang/Class/getName()
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#javax/crypto/spec/IvParameterSpec/IvParameterSpec(byte%5B%5D)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#javax/crypto/Cipher/getInstance(java.lang.String,java.lang.String)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#javax/crypto/Cipher/init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/nio/ByteBuffer/getInt(int)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/lang/Class/getName()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/convertPublicKeyToBytes(java.security.PublicKey)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/nio/ByteBuffer/wrap(byte%5B%5D)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/security/MessageDigest/digest(byte%5B%5D)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/lang/Math/pow(double,double)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/security/MessageDigest/getInstance(java.lang.String)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/nio/ByteBuffer/getInt(int)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/lang/Class/getName()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/convertPublicKeyToBytes(java.security.PublicKey)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/nio/ByteBuffer/wrap(byte%5B%5D)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/security/MessageDigest/digest(byte%5B%5D)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/lang/Math/pow(double,double)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeDevicePublicKeyFingerprint(java.security.PublicKey)#java/security/MessageDigest/getInstance(java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#java/nio/ByteBuffer/allocate(int)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#java/util/Arrays/copyOf(byte%5B%5D,int)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#io/getlime/security/powerauth/lib/util/AESEncryptionUtils/AESEncryptionUtils()
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#java/lang/Class/getName()
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/convertBytesToSharedSecretKey(byte%5B%5D)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#java/nio/ByteBuffer/putLong(long)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKey(javax.crypto.SecretKey,long)#java/nio/ByteBuffer/array()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/model/ActivationStatusBlobInfo/setValid(boolean)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/model/ActivationStatusBlobInfo/setMaxFailedAttempts(byte)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/model/ActivationStatusBlobInfo/setCounter(long)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#java/nio/ByteBuffer/get(int)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#java/nio/ByteBuffer/getInt(int)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#java/nio/ByteBuffer/getLong(int)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/model/ActivationStatusBlobInfo/setFailedAttempts(byte)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/util/AESEncryptionUtils/AESEncryptionUtils()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#java/lang/Class/getName()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/model/ActivationStatusBlobInfo/setActivationStatus(byte)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/util/AESEncryptionUtils/decrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#java/nio/ByteBuffer/wrap(byte%5B%5D)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/getStatusFromEncryptedBlob(byte%5B%5D,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/model/ActivationStatusBlobInfo/ActivationStatusBlobInfo()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#com/google/common/io/BaseEncoding/encode(byte%5B%5D)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#com/google/common/io/BaseEncoding/base64()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/Class/getName()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/StringBuilder/StringBuilder()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/String/getBytes(java.lang.String)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#io/getlime/security/powerauth/lib/util/HMACHashUtilities/HMACHashUtilities()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/computeApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/StringBuilder/toString()
io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/getProviderName()
io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)#javax/crypto/spec/SecretKeySpec/SecretKeySpec(byte%5B%5D,java.lang.String)
io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)#javax/crypto/Mac/doFinal(byte%5B%5D)
io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)#javax/crypto/Mac/init(java.security.Key)
io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)#javax/crypto/Mac/getInstance(java.lang.String,java.lang.String)
io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)#java/lang/Class/getName()
io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/getProviderName()
io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/security/Signature/initVerify(java.security.PublicKey)
io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/security/Signature/verify(byte%5B%5D)
io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/security/Signature/getInstance(java.lang.String,java.lang.String)
io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/security/Signature/update(byte%5B%5D)
io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/lang/Class/getName()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#com/google/common/io/BaseEncoding/encode(byte%5B%5D)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#io/getlime/security/powerauth/lib/util/SignatureUtils/computeECDSASignature(byte%5B%5D,java.security.PrivateKey)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#com/google/common/io/BaseEncoding/base64()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#java/lang/StringBuilder/append(java.lang.String)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#java/lang/Class/getName()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#java/lang/StringBuilder/StringBuilder()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#java/lang/String/getBytes(java.lang.String)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/computeServerDataSignature(java.lang.String,byte%5B%5D,java.security.PrivateKey)#java/lang/StringBuilder/toString()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#com/google/common/io/BaseEncoding/encode(byte%5B%5D)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#com/google/common/io/BaseEncoding/base64()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/util/Arrays/equals(byte%5B%5D,byte%5B%5D)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/Class/getName()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/StringBuilder/StringBuilder()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/String/getBytes(java.lang.String)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#io/getlime/security/powerauth/lib/util/HMACHashUtilities/HMACHashUtilities()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/validateApplicationSignature(java.lang.String,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D,byte%5B%5D)#java/lang/StringBuilder/toString()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#com/google/common/io/BaseEncoding/encode(byte%5B%5D)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/lang/StringBuilder/append(java.lang.String)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/lang/Class/getName()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/lang/StringBuilder/StringBuilder()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/lang/String/getBytes(java.lang.String)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#java/lang/StringBuilder/toString()
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#io/getlime/security/powerauth/lib/util/SignatureUtils/validateECDSASignature(byte%5B%5D,byte%5B%5D,java.security.PublicKey)
io/getlime/security/powerauth/client/activation/PowerAuthClientActivation/verifyServerDataSignature(java.lang.String,byte%5B%5D,byte%5B%5D,java.security.PublicKey)#com/google/common/io/BaseEncoding/base64()
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#java/security/KeyPairGenerator/initialize(java.security.spec.AlgorithmParameterSpec)
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/getProviderName()
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#java/security/KeyPairGenerator/getInstance(java.lang.String,java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#java/security/KeyPairGenerator/generateKeyPair()
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#java/lang/Class/getName()
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#java/security/spec/ECGenParameterSpec/ECGenParameterSpec(java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/generateKeyPair()#java/lang/Object/getClass()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#java/nio/ByteBuffer/allocate(int)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#java/nio/ByteBuffer/put(byte%5B%5D)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#java/nio/ByteBuffer/put(byte)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/generator/KeyGenerator/KeyGenerator()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/util/AESEncryptionUtils/AESEncryptionUtils()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#java/lang/Class/getName()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#java/nio/ByteBuffer/array()
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/generator/KeyGenerator/generateRandomBytes(int)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#java/nio/ByteBuffer/putInt(int)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#java/nio/ByteBuffer/putLong(long)
io/getlime/security/powerauth/server/activation/PowerAuthServerActivation/encryptedStatusBlob(byte,long,byte,byte,javax.crypto.SecretKey)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/nio/ByteBuffer/allocate(int)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#com/google/common/base/Joiner/on(java.lang.String)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/nio/ByteBuffer/putLong(int,long)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/convertSharedSecretKeyToBytes(javax.crypto.SecretKey)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/nio/ByteBuffer/array()
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#io/getlime/security/powerauth/lib/util/HMACHashUtilities/hash(byte%5B%5D,byte%5B%5D)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/nio/ByteBuffer/wrap(byte%5B%5D)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/lang/Math/pow(double,double)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#io/getlime/security/powerauth/lib/util/HMACHashUtilities/HMACHashUtilities()
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/nio/ByteBuffer/getInt(int)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#com/google/common/base/Joiner/join(java.lang.Object%5B%5D)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/util/List/size()
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/lang/Integer/valueOf(int)
io/getlime/security/powerauth/lib/util/SignatureUtils/computePowerAuthSignature(byte%5B%5D,java.util.List,long)#java/util/List/get(int)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKeyFromPassword(java.lang.String,byte%5B%5D)#javax/crypto/SecretKeyFactory/getInstance(java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKeyFromPassword(java.lang.String,byte%5B%5D)#javax/crypto/spec/SecretKeySpec/SecretKeySpec(byte%5B%5D,java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKeyFromPassword(java.lang.String,byte%5B%5D)#javax/crypto/SecretKey/getEncoded()
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKeyFromPassword(java.lang.String,byte%5B%5D)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKeyFromPassword(java.lang.String,byte%5B%5D)#java/lang/Class/getName()
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKeyFromPassword(java.lang.String,byte%5B%5D)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKeyFromPassword(java.lang.String,byte%5B%5D)#javax/crypto/SecretKeyFactory/generateSecret(java.security.spec.KeySpec)
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKeyFromPassword(java.lang.String,byte%5B%5D)#java/lang/String/toCharArray()
io/getlime/security/powerauth/lib/generator/KeyGenerator/deriveSecretKeyFromPassword(java.lang.String,byte%5B%5D)#javax/crypto/spec/PBEKeySpec/PBEKeySpec(char%5B%5D,byte%5B%5D,int,int)
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/getProviderName()
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#javax/crypto/KeyAgreement/generateSecret()
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#java/lang/Class/getName()
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#java/lang/Object/getClass()
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/convertBytesToSharedSecretKey(byte%5B%5D)
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#javax/crypto/KeyAgreement/getInstance(java.lang.String,java.lang.String)
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#javax/crypto/KeyAgreement/init(java.security.Key)
io/getlime/security/powerauth/lib/generator/KeyGenerator/computeSharedKey(java.security.PrivateKey,java.security.PublicKey)#javax/crypto/KeyAgreement/doPhase(java.security.Key,boolean)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#io/getlime/security/powerauth/lib/provider/CryptoProviderUtil/getProviderName()
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#java/util/logging/Logger/getLogger(java.lang.String)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#javax/crypto/Cipher/doFinal(byte%5B%5D)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#java/lang/Class/getName()
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#javax/crypto/spec/IvParameterSpec/IvParameterSpec(byte%5B%5D)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#io/getlime/security/powerauth/lib/config/PowerAuthConfiguration/getKeyConvertor()
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#javax/crypto/Cipher/getInstance(java.lang.String,java.lang.String)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
io/getlime/security/powerauth/lib/util/AESEncryptionUtils/encrypt(byte%5B%5D,byte%5B%5D,javax.crypto.SecretKey,java.lang.String)#javax/crypto/Cipher/init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)
