com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/Class/forName(java.lang.String)
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class%5B%5D)
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)#java/lang/reflect/Method/setAccessible(boolean)
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/isActionRoot()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/size()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/getPredecessors()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/setGroup(com.github.fge.grappa.transform.base.InstructionGroup)
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getRoot()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/get(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/isVarInitRoot()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/isXLoad()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/getGroup()
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/exceptions/InvalidGrammarException/InvalidGrammarException(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/markGroup(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/iterator()
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#com/github/fge/grappa/transform/base/RuleMethod/isBodyRewritten()
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#com/github/fge/grappa/transform/base/ParserClassNode/getRuleMethods()
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#java/lang/String/equals(java.lang.Object)
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#com/github/fge/grappa/transform/base/RuleMethod/setBodyRewritten()
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#com/github/fge/grappa/transform/base/RuleMethod/dontSkipGeneration()
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#org/objectweb/asm/tree/MethodInsnNode/setOpcode(int)
com/github/fge/grappa/transform/process/SuperCallRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)#com/github/fge/grappa/transform/process/SuperCallRewriter/getSuperMethodName(com.github.fge.grappa.transform.base.RuleMethod,org.objectweb.asm.tree.MethodInsnNode)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getFields()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/size()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getNodes()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/add(java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/get(int)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/analysis/BasicValue/getType()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/iterator()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/isXLoad()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/Type/getDescriptor()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/FieldNode/FieldNode(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/getResultValue()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/getInstruction()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/Integer/intValue()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#com/github/fge/grappa/run/events/MatchFailureEvent/getContext()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/System/nanoTime()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/Long/longValue()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(long)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#com/github/fge/grappa/run/context/MatcherContext/getCurrentIndex()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#com/github/fge/grappa/run/trace/TracingListener/cleanup(java.io.IOException)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#com/github/fge/grappa/run/context/MatcherContext/getLevel()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/setLength(int)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#com/github/fge/grappa/transform/ClassCache/loadClass(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/Integer/intValue()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/Class/getModifiers()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/reflect/Modifier/isPrivate(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#com/github/fge/grappa/misc/AsmUtils/getClassConstructor(java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/reflect/Constructor/getModifiers()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/RuleMethod/hasSkipActionsInPredicatesAnnotation()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/isActionRoot()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/CodeBlock/invokespecial(java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/CodeBlock/dup()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/InsnList/insertBefore(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.InsnList)
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getRoot()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/Type/getInternalName()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/CodeBlock/newCodeBlock()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/CodeBlock/ldc(java.lang.Object)
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getGroupClassType()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/CodeBlock/newobj(java.lang.String)
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#me/qmx/jitescript/util/CodegenUtils/sig(java.lang.Class,java.lang.Class%5B%5D)
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/CodeBlock/invokevirtual(java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/CodeBlock/getInstructionList()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/getInstruction()
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getGroupClassType()
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/InsnList/insertBefore(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/LoadingOpcode/forType(org.objectweb.asm.Type)
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/iterator()
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/Type/getInternalName()
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/getInstruction()
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getFields()
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/InsnNode/InsnNode(int)
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/FieldInsnNode/FieldInsnNode(int,java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/VarInsnNode/VarInsnNode(int,int)
com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getRoot()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)#com/google/common/collect/Range/upperEndpoint()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)#com/google/common/collect/DiscreteDomain/integers()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)#com/google/common/collect/Range/atLeast(java.lang.Comparable)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)#java/lang/Integer/intValue()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)#com/google/common/collect/Range/canonical(com.google.common.collect.DiscreteDomain)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)#com/google/common/collect/Range/closed(java.lang.Comparable,java.lang.Comparable)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)#com/google/common/collect/Range/lowerEndpoint()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)#com/google/common/collect/Range/hasUpperBound()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/google/common/base/Preconditions/checkState(boolean)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/LabelNode/LabelNode()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/invokeinterface(java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/AbstractInsnNode/getOpcode()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/dup()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/InsnList/insertBefore(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.InsnList)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#me/qmx/jitescript/util/CodegenUtils/p(java.lang.Class)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/AbstractInsnNode/getPrevious()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#me/qmx/jitescript/util/CodegenUtils/sig(java.lang.Class,java.lang.Class%5B%5D)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/process/LabellingGenerator/getLabelText(com.github.fge.grappa.transform.base.RuleMethod)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/base/RuleMethod/isSuperMethod()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/getInstructionList()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/newCodeBlock()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/ldc(java.lang.Object)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/label(org.objectweb.asm.tree.LabelNode)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/InsnList/getLast()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/ifnull(org.objectweb.asm.tree.LabelNode)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/reflect/Constructor/getParameterTypes()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/Class/isPrimitive()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#com/github/fge/grappa/exceptions/InvalidGrammarException/InvalidGrammarException(java.lang.String)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/StringBuilder/toString()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/Class/getConstructors()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object%5B%5D)#java/lang/Object/getClass()
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/lang/reflect/Field/setAccessible(boolean)
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/util/List/add(java.lang.Object)
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#com/github/fge/grappa/rules/SkippableAction/skipInPredicates()
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/lang/reflect/Field/isSynthetic()
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/lang/Object/toString()
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#com/github/fge/grappa/matchers/base/AbstractMatcher/AbstractMatcher(java.lang.String)
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/lang/reflect/Field/get(java.lang.Object)
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#com/google/common/collect/Lists/newArrayList()
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/lang/Class/isSynthetic()
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/lang/reflect/Field/getType()
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/util/Objects/requireNonNull(java.lang.Object)
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/lang/Object/getClass()
com/github/fge/grappa/matchers/ActionMatcher/ActionMatcher(com.github.fge.grappa.rules.Action)#java/lang/Class/getDeclaredFields()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#org/objectweb/asm/Type/equals(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#org/objectweb/asm/tree/MethodNode/MethodNode(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#com/github/fge/grappa/transform/base/ParserClassNode/getRuleMethods()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#java/lang/String/equals(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#com/github/fge/grappa/transform/base/ParserClassNode/getConstructors()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#java/util/Map/containsKey(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#org/objectweb/asm/Type/getReturnType(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#com/github/fge/grappa/exceptions/InvalidGrammarException/InvalidGrammarException(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#com/github/fge/grappa/transform/base/ParserClassNode/getParentClass()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#org/objectweb/asm/Type/getType(java.lang.Class)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#java/util/List/add(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/isXLoad()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getGroupClassType()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/InsnList/insert(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getFields()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/InsnList/set(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getNodes()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/VarInsnNode/VarInsnNode(int,int)
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/get(int)
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getInstructions()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/iterator()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/Type/getInternalName()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/getInstruction()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/FieldInsnNode/FieldInsnNode(int,java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#com/google/common/base/Preconditions/checkState(boolean)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/equals(java.lang.Object)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#com/github/fge/grappa/transform/process/ImplicitActionsConverter/getArgumentIndex(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#java/lang/String/equals(java.lang.Object)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/getInternalName()
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#com/github/fge/grappa/transform/base/InstructionGraphNode/getInstruction()
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/getType(java.lang.Class)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#me/qmx/jitescript/util/CodegenUtils/p(java.lang.Class)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/getReturnType(java.lang.String)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/tree/AbstractInsnNode/getType()
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/getArgumentTypes(java.lang.String)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/aload(int)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/anewarray(java.lang.String)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/ldc(java.lang.Object)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/bipush(int)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/aastore()
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/base/RuleMethod/getLocalVarVariables()
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#java/util/List/get(int)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#me/qmx/jitescript/util/CodegenUtils/sig(java.lang.Class,java.lang.Class%5B%5D)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/invokevirtual(java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#java/util/List/size()
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/dup()
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)#me/qmx/jitescript/util/CodegenUtils/p(java.lang.Class)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/google/common/collect/Range/upperEndpoint()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#java/lang/Integer/intValue()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/google/common/collect/Range/isEmpty()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/github/fge/grappa/matchers/delegate/OptionalMatcher/OptionalMatcher(com.github.fge.grappa.rules.Rule)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/github/fge/grappa/matchers/join/ExactMatchesJoinMatcher/ExactMatchesJoinMatcher(com.github.fge.grappa.rules.Rule,com.github.fge.grappa.rules.Rule,int)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/github/fge/grappa/matchers/EmptyMatcher/EmptyMatcher()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/github/fge/grappa/matchers/join/BoundedBothJoinMatcher/BoundedBothJoinMatcher(com.github.fge.grappa.rules.Rule,com.github.fge.grappa.rules.Rule,int,int)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/github/fge/grappa/matchers/join/JoinMatcherBuilder/toClosedRange(com.google.common.collect.Range)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/github/fge/grappa/matchers/join/BoundedDownJoinMatcher/BoundedDownJoinMatcher(com.github.fge.grappa.rules.Rule,com.github.fge.grappa.rules.Rule,int)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/github/fge/grappa/matchers/join/BoundedUpJoinMatcher/BoundedUpJoinMatcher(com.github.fge.grappa.rules.Rule,com.github.fge.grappa.rules.Rule,int)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/google/common/collect/Range/intersection(com.google.common.collect.Range)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#java/lang/StringBuilder/toString()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/google/common/collect/Range/lowerEndpoint()
com/github/fge/grappa/matchers/join/JoinMatcherBuilder/range(com.google.common.collect.Range)#com/google/common/collect/Range/hasUpperBound()
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/util/Map/size()
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String%5B%5D)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/flush()
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/setLength(int)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption%5B%5D)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(long)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/close()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/google/common/hash/HashCode/writeBytesTo(byte%5B%5D,int,int)
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/google/common/io/BaseEncoding/encode(byte%5B%5D)
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/github/fge/grappa/transform/base/InstructionGraphNode/isActionRoot()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/github/fge/grappa/transform/base/InstructionGroup/getFields()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/util/Iterator/next()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/github/fge/grappa/transform/base/InstructionGroup/getRoot()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/google/common/hash/Hasher/hash()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/util/List/iterator()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#org/objectweb/asm/tree/InsnList/accept(org.objectweb.asm.MethodVisitor)
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/github/fge/grappa/transform/base/InstructionGroup/getInstructions()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/google/common/hash/Hasher/putObject(java.lang.Object,com.google.common.hash.Funnel)
com/github/fge/grappa/transform/process/GroupClassGenerator/createGroupClassType(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/setGroupClassType(org.objectweb.asm.Type)
com/github/fge/grappa/transform/process/GroupClassGenerator/createGroupClassType(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/String/substring(int,int)
com/github/fge/grappa/transform/process/GroupClassGenerator/createGroupClassType(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/process/GroupClassGenerator/createGroupClassType(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/GroupClassGenerator/createGroupClassType(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/Type/getObjectType(java.lang.String)
com/github/fge/grappa/transform/process/GroupClassGenerator/createGroupClassType(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/GroupClassGenerator/createGroupClassType(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/String/lastIndexOf(int)
com/github/fge/grappa/transform/process/GroupClassGenerator/createGroupClassType(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/GroupClassGenerator/createGroupClassType(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getName()
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/stack/ValueStack/restoreSnapshot(java.lang.Object)
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/matchers/join/JoinMatcher/enoughCycles(int)
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/matchers/join/JoinMatcher/runAgain(int)
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/getValueStack()
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/setCurrentIndex(int)
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/matchers/join/JoinMatcher/matchCycle(com.github.fge.grappa.run.context.MatcherContext,int)
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/stack/ValueStack/takeSnapshot()
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/matchers/base/Matcher/getSubContext(com.github.fge.grappa.run.context.MatcherContext)
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/getCurrentIndex()
com/github/fge/grappa/matchers/join/JoinMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/runMatcher()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/CodeBlock/aload(int)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/CodeBlock/newCodeBlock()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/InsnNode/InsnNode(int)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/base/InstructionGraphNode/getPredecessors()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/InsnList/insertBefore(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.InsnList)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/base/InstructionGroup/getNodes()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#me/qmx/jitescript/util/CodegenUtils/p(java.lang.Class)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/VarInsnNode/VarInsnNode(int,int)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/List/get(int)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/List/iterator()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/CodeBlock/clear()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/base/InstructionGraphNode/getInstruction()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/CodeBlock/invokeinterface(java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/InsnList/insertBefore(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/List/size()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/CodeBlock/dup()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/InsnList/insert(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.InsnList)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/CodeBlock/astore(int)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/base/InstructionGroup/getInstructions()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#me/qmx/jitescript/util/CodegenUtils/sig(java.lang.Class,java.lang.Class%5B%5D)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/base/InstructionGraphNode/isCallOnContextAware()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#com/github/fge/grappa/transform/CodeBlock/getInstructionList()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/Integer/intValue()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/reflect/Modifier/isPrivate(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/reflect/Field/getModifiers()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/stack/ValueStack/restoreSnapshot(java.lang.Object)
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#java/util/Iterator/hasNext()
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/getParent()
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/ContextAware/setContext(com.github.fge.grappa.run.context.Context)
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#java/util/Iterator/next()
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/getValueStack()
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/getCurrentIndex()
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/inPredicate()
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#java/util/List/iterator()
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/stack/ValueStack/takeSnapshot()
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/setCurrentIndex(int)
com/github/fge/grappa/matchers/ActionMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/rules/Action/run(com.github.fge.grappa.run.context.Context)
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#java/util/ArrayList/ArrayList()
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#org/objectweb/asm/tree/MethodNode/MethodNode(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#java/util/Set/addAll(java.util.Collection)
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#java/util/EnumSet/noneOf(java.lang.Class)
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#com/google/common/collect/Lists/newArrayList()
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#java/util/Set/retainAll(java.util.Collection)
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#java/util/EnumSet/copyOf(java.util.Collection)
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#org/objectweb/asm/Type/getArgumentTypes(java.lang.String)
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#com/github/fge/grappa/transform/base/RuleMethod/isSuperMethod()
com/github/fge/grappa/transform/base/RuleMethod/RuleMethod(java.lang.Class,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D,java.util.Set)#java/util/Set/add(java.lang.Object)
com/github/fge/grappa/misc/AsmUtils/findLoadedClass(java.lang.String,java.lang.ClassLoader)#java/lang/Class/forName(java.lang.String)
com/github/fge/grappa/misc/AsmUtils/findLoadedClass(java.lang.String,java.lang.ClassLoader)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class%5B%5D)
com/github/fge/grappa/misc/AsmUtils/findLoadedClass(java.lang.String,java.lang.ClassLoader)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/misc/AsmUtils/findLoadedClass(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/misc/AsmUtils/findLoadedClass(java.lang.String,java.lang.ClassLoader)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/github/fge/grappa/misc/AsmUtils/findLoadedClass(java.lang.String,java.lang.ClassLoader)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
com/github/fge/grappa/misc/AsmUtils/findLoadedClass(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
com/github/fge/grappa/misc/AsmUtils/findLoadedClass(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/misc/AsmUtils/findLoadedClass(java.lang.String,java.lang.ClassLoader)#java/lang/reflect/Method/setAccessible(boolean)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractInstructions(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/InsnList/add(org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractInstructions(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractInstructions(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractInstructions(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/InsnList/remove(org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractInstructions(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getNodes()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractInstructions(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getRoot()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractInstructions(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGroup/getInstructions()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractInstructions(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/iterator()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractInstructions(com.github.fge.grappa.transform.base.InstructionGroup)#com/github/fge/grappa/transform/base/InstructionGraphNode/getInstruction()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#com/github/fge/grappa/run/events/PreMatchEvent/getContext()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/lang/Long/valueOf(long)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/lang/System/nanoTime()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#com/github/fge/grappa/run/context/MatcherContext/getMatcher()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#com/github/fge/grappa/run/context/MatcherContext/getCurrentIndex()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/lang/Math/min(int,int)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#com/github/fge/grappa/run/trace/MatcherDescriptor/MatcherDescriptor(int,com.github.fge.grappa.matchers.base.Matcher)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#com/github/fge/grappa/run/context/MatcherContext/getLevel()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#com/github/fge/grappa/transform/ClassCache/loadClass(java.lang.String)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/reflect/Field/getName()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/Class/getCanonicalName()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/Class/getDeclaredFields()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/Class/getSuperclass()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/util/Map/values()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/util/Iterator/next()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#com/github/fge/grappa/run/trace/MatcherDescriptor/getType()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#com/github/fge/grappa/run/trace/MatcherDescriptor/getId()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String%5B%5D)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/flush()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#com/github/fge/grappa/run/trace/MatcherDescriptor/getClassName()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/util/Iterator/hasNext()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#com/github/fge/grappa/run/trace/MatcherDescriptor/getName()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/setLength(int)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption%5B%5D)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/close()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#com/github/fge/grappa/run/trace/TracingListener/cleanup(java.io.IOException)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/util/Collection/iterator()
com/github/fge/grappa/matchers/delegate/SequenceMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/stack/ValueStack/restoreSnapshot(java.lang.Object)
com/github/fge/grappa/matchers/delegate/SequenceMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#java/util/Iterator/hasNext()
com/github/fge/grappa/matchers/delegate/SequenceMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#java/util/Iterator/next()
com/github/fge/grappa/matchers/delegate/SequenceMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/getValueStack()
com/github/fge/grappa/matchers/delegate/SequenceMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/run/context/MatcherContext/runMatcher()
com/github/fge/grappa/matchers/delegate/SequenceMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#java/util/List/iterator()
com/github/fge/grappa/matchers/delegate/SequenceMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/matchers/delegate/SequenceMatcher/getChildren()
com/github/fge/grappa/matchers/delegate/SequenceMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/stack/ValueStack/takeSnapshot()
com/github/fge/grappa/matchers/delegate/SequenceMatcher/match(com.github.fge.grappa.run.context.MatcherContext)#com/github/fge/grappa/matchers/base/Matcher/getSubContext(com.github.fge.grappa.run.context.MatcherContext)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/InsnList/add(org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/MethodNode/MethodNode(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/InsnNode/InsnNode(int)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/TypeInsnNode/TypeInsnNode(int,java.lang.String)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/MethodInsnNode/MethodInsnNode(int,java.lang.String,java.lang.String,java.lang.String,boolean)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/Type/getInternalName()
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/Type/getType(java.lang.Class)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/List/add(java.lang.Object)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/dup_x1()
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/newCodeBlock()
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/process/VarFramingGenerator/createVarFieldArray(com.github.fge.grappa.transform.CodeBlock,com.github.fge.grappa.transform.base.RuleMethod)
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/invokespecial(java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/base/RuleMethod/setBodyRewritten()
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/AbstractInsnNode/getOpcode()
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/InsnList/getLast()
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/InsnList/insertBefore(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.InsnList)
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#me/qmx/jitescript/util/CodegenUtils/p(java.lang.Class)
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/AbstractInsnNode/getPrevious()
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/swap()
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/getInstructionList()
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/CodeBlock/newobj(java.lang.String)
com/github/fge/grappa/transform/process/VarFramingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#me/qmx/jitescript/util/CodegenUtils/sig(java.lang.Class,java.lang.Class%5B%5D)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/intValue()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#com/github/fge/grappa/misc/AsmUtils/getClassMethod(java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/reflect/Method/getModifiers()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/reflect/Modifier/isPrivate(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/process/RuleMethodRewriter/initializeFields(com.github.fge.grappa.transform.base.InstructionGroup)
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/base/InstructionGraphNode/isActionRoot()
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/base/RuleMethod/setBodyRewritten()
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/InsnList/remove(org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/base/RuleMethod/getGroups()
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/base/InstructionGroup/getRoot()
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/process/RuleMethodRewriter/createNewGroupClassInstance(com.github.fge.grappa.transform.base.InstructionGroup)
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#me/qmx/jitescript/util/CodegenUtils/sig(java.lang.Class,java.lang.Class%5B%5D)
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#java/util/List/iterator()
com/github/fge/grappa/transform/process/RuleMethodRewriter/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/github/fge/grappa/transform/base/InstructionGraphNode/getInstruction()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/ClassReader/accept(org.objectweb.asm.ClassVisitor,int)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/io/IOException/IOException(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/google/common/io/Closer/register(java.io.Closeable)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Map/values()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/ClassReader/ClassReader(java.io.InputStream)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/String/substring(int)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Collection/iterator()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/RuleMethod/isSuperMethod()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/google/common/io/Closer/create()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/Object/equals(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/Class/getSuperclass()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/ParserClassNode/getParentClass()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/google/common/io/Closer/close()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/RuleMethod/moveFlagsTo(com.github.fge.grappa.transform.base.RuleMethod)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Set/removeAll(java.util.Collection)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Iterator/next()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/ParserClassNode/getRuleMethods()
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#org/objectweb/asm/Type/getType(java.lang.String)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/Thread/currentThread()
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/ClassLoader/loadClass(java.lang.String)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/Thread/getContextClassLoader()
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#com/github/fge/grappa/misc/AsmUtils/getClassForType(org.objectweb.asm.Type)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/String/substring(int)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/String/replace(char,char)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/Object/getClass()
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/Class/getClassLoader()
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/List/add(java.lang.Object)
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/RuleMethod/isGenerationSkipped()
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/process/RuleMethodProcessor/appliesTo(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/process/RuleMethodProcessor/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/ParserTransformer/createRuleMethodProcessors()
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/RuleMethod/hasDontExtend()
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Map/values()
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Iterator/next()
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/ParserClassNode/getRuleMethods()
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/List/iterator()
com/github/fge/grappa/transform/ParserTransformer/runMethodTransformers(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Collection/iterator()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/Integer/intValue()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/System/nanoTime()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/Long/longValue()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(long)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#com/github/fge/grappa/run/context/MatcherContext/getCurrentIndex()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#com/github/fge/grappa/run/context/MatcherContext/getLevel()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#com/github/fge/grappa/run/events/MatchSuccessEvent/getContext()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/setLength(int)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#com/github/fge/grappa/run/trace/TracingListener/cleanup(java.io.IOException)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/Math/min(int,int)
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Iterator/hasNext()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Map/size()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#com/github/fge/grappa/matchers/FirstOfStringsMatcher$Record/FirstOfStringsMatcher$Record(char%5B%5D,com.github.fge.grappa.matchers.FirstOfStringsMatcher$Record%5B%5D,boolean,com.github.fge.grappa.matchers.FirstOfStringsMatcher$1)
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/lang/Character/valueOf(char)
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Set/iterator()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Set/toArray(java.lang.Object%5B%5D)
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Map$Entry/getValue()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/HashSet/HashSet()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Set/size()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Map$Entry/getKey()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Map/isEmpty()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/TreeMap/TreeMap()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Iterator/next()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Map/entrySet()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/lang/Character/charValue()
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#java/util/Set/add(java.lang.Object)
com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)#com/github/fge/grappa/matchers/FirstOfStringsMatcher/createRecord(int,char%5B%5D%5B%5D)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#com/github/fge/grappa/run/trace/TracingListener/copyInputText(java.nio.file.FileSystem)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/io/BufferedWriter/close()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/net/URI/create(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/FileSystem/close()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#com/github/fge/grappa/run/trace/TracingListener/cleanup(java.io.IOException)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String%5B%5D)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/io/BufferedWriter/flush()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/StringBuilder/toString()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/Path/toUri()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/FileSystems/newFileSystem(java.net.URI,java.util.Map)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/Files/move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption%5B%5D)
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/ParserClassNode/getParentClass()
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/ParserClassNode/setClassCode(byte%5B%5D)
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/ParserClassNode/accept(org.objectweb.asm.ClassVisitor)
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/misc/AsmUtils/loadClass(java.lang.String,byte%5B%5D,java.lang.ClassLoader)
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/ClassWriter/ClassWriter(int)
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/String/replace(char,char)
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/Class/getClassLoader()
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/ParserClassNode/getClassCode()
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#com/github/fge/grappa/transform/base/ParserClassNode/setExtendedClass(java.lang.Class)
com/github/fge/grappa/transform/ParserTransformer/defineExtendedParserClass(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/ClassWriter/toByteArray()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/Thread/currentThread()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/util/Objects/requireNonNull(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/Class/getName()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/String/replace(char,char)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/ClassLoader/getSystemClassLoader()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/Class/getClassLoader()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/Thread/getContextClassLoader()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/StringBuilder/toString()
