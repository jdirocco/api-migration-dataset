pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/appendPropertiesToReactorProjects()
pl/project13/maven/git/GitCommitIdMojo/execute()#java/util/Properties/getProperty(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdExecutionException/getMessage()
pl/project13/maven/git/GitCommitIdMojo/execute()#java/util/regex/Matcher/matches()
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/isPomProject(org.apache.maven.project.MavenProject)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/loadBuildVersionAndTimeData(java.util.Properties)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/lookupGitDirectory()
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/log/LoggerBridge/warn(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String,java.lang.Object)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/log/LoggerBridge/setVerbose(boolean)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/CommitIdGenerationMode/valueOf(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/logProperties()
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#java/lang/String/toUpperCase()
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitDescribeConfig/GitDescribeConfig()
pl/project13/maven/git/GitCommitIdMojo/execute()#java/lang/StringBuilder/append(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#java/lang/String/trim()
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/handlePluginFailure(java.lang.Exception)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/loadGitData(java.util.Properties)
pl/project13/maven/git/GitCommitIdMojo/execute()#org/apache/maven/project/MavenProject/getBasedir()
pl/project13/maven/git/GitCommitIdMojo/execute()#org/apache/maven/execution/MavenSession/getExecutionRootDirectory()
pl/project13/maven/git/GitCommitIdMojo/execute()#java/lang/String/equals(java.lang.Object)
pl/project13/maven/git/GitCommitIdMojo/execute()#java/util/Properties/Properties()
pl/project13/maven/git/GitCommitIdMojo/execute()#java/lang/StringBuilder/StringBuilder()
pl/project13/maven/git/GitCommitIdMojo/execute()#org/apache/maven/project/MavenProject/getProperties()
pl/project13/maven/git/GitCommitIdMojo/execute()#java/io/File/getAbsolutePath()
pl/project13/maven/git/GitCommitIdMojo/execute()#java/nio/charset/Charset/defaultCharset()
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/loadBuildHostData(java.util.Properties)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/publishPropertiesInto(org.apache.maven.project.MavenProject)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdExecutionException/GitCommitIdExecutionException(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#java/nio/charset/Charset/forName(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/log/LoggerBridge/error(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/loadShortDescribe(java.util.Properties)
pl/project13/maven/git/GitCommitIdMojo/execute()#org/apache/maven/plugin/MojoExecutionException/MojoExecutionException(java.lang.String,java.lang.Exception)
pl/project13/maven/git/GitCommitIdMojo/execute()#java/util/regex/Pattern/matcher(java.lang.CharSequence)
pl/project13/maven/git/GitCommitIdMojo/execute()#java/lang/StringBuilder/toString()
pl/project13/maven/git/GitCommitIdMojo/execute()#org/apache/maven/execution/MavenSession/getCurrentProject()
pl/project13/maven/git/GitCommitIdMojo/execute()#pl/project13/maven/git/GitCommitIdMojo/directoryExists(java.io.File)
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#org/apache/http/client/utils/URIBuilder/setUserInfo(java.lang.String)
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#java/lang/String/split(java.lang.String)
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#java/net/URI/URI(java.lang.String)
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#java/net/URI/getUserInfo()
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#pl/project13/maven/git/GitCommitIdExecutionException/GitCommitIdExecutionException(java.lang.Throwable)
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#org/apache/http/client/utils/URIBuilder/URIBuilder(java.lang.String)
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#org/apache/http/client/utils/URIBuilder/build()
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#java/net/URI/toString()
pl/project13/maven/git/GitDataProvider/stripCredentialsFromOriginUrl(java.lang.String)#java/util/regex/Matcher/matches()
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#pl/project13/maven/git/GitDescribeConfig/getMatch()
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#java/lang/StringBuilder/append(java.lang.String)
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#java/lang/StringBuilder/append(int)
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#pl/project13/maven/git/GitDescribeConfig/isAlways()
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#pl/project13/maven/git/GitDescribeConfig/getDirty()
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#pl/project13/maven/git/GitDescribeConfig/getTags()
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#java/lang/String/equals(java.lang.Object)
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#java/lang/String/isEmpty()
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#java/lang/StringBuilder/StringBuilder()
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#pl/project13/maven/git/GitDescribeConfig/getAbbrev()
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#pl/project13/maven/git/GitDescribeConfig/getForceLongFormat()
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#pl/project13/maven/git/log/LoggerBridge/warn(java.lang.String)
pl/project13/maven/git/NativeGitProvider/getArgumentsForGitDescribe(pl.project13.maven.git.GitDescribeConfig)#java/lang/StringBuilder/toString()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Properties/putAll(java.util.Map)
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Properties/getProperty(java.lang.String)
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Properties/setProperty(java.lang.String,java.lang.String)
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#pl/project13/maven/git/ReplacementProperty/getPropertyOutputSuffix()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/lang/String/isEmpty()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/lang/StringBuilder/StringBuilder()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#pl/project13/maven/git/PropertiesReplacer/performReplacement(pl.project13.maven.git.ReplacementProperty,java.lang.String)
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Map$Entry/getValue()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/lang/StringBuilder/toString()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Iterator/hasNext()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String)
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Map$Entry/getKey()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Properties/entrySet()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Iterator/next()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/HashMap/HashMap()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#pl/project13/maven/git/ReplacementProperty/getProperty()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Set/iterator()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/List/iterator()
pl/project13/maven/git/PropertiesReplacer/performReplacement(java.util.Properties,java.util.List)#java/util/Map$Entry/setValue(java.lang.Object)
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#java/util/Properties/stringPropertyNames()
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#java/util/Iterator/hasNext()
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#pl/project13/maven/git/log/LoggerBridge/debug(java.lang.String,java.lang.Object,java.lang.Object)
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#java/util/Properties/remove(java.lang.Object)
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#pl/project13/maven/git/PropertiesFilterer/isOurProperty(java.lang.String,java.lang.String)
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#com/google/common/base/Predicates/alwaysFalse()
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#java/util/List/isEmpty()
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#com/google/common/base/Predicates/or(com.google.common.base.Predicate,com.google.common.base.Predicate)
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#java/util/Iterator/next()
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#pl/project13/maven/git/PropertiesFilterer$1/PropertiesFilterer$1(pl.project13.maven.git.PropertiesFilterer)
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#java/lang/Boolean/valueOf(boolean)
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#java/util/Set/iterator()
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#com/google/common/base/Predicate/apply(java.lang.Object)
pl/project13/maven/git/PropertiesFilterer/filterNot(java.util.Properties,java.util.List,java.lang.String)#java/util/List/iterator()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#org/eclipse/jgit/revwalk/RevWalk/parseCommit(org.eclipse.jgit.lib.AnyObjectId)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/Iterator/hasNext()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#org/eclipse/jgit/lib/ObjectId/equals(org.eclipse.jgit.lib.AnyObjectId)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/Set/addAll(java.util.Collection)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/Iterator/next()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/Set/contains(java.lang.Object)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/Set/iterator()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#org/eclipse/jgit/revwalk/RevWalk/close()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#org/eclipse/jgit/revwalk/RevCommit/getParents()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#org/eclipse/jgit/revwalk/RevCommit/getId()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/Queue/add(java.lang.Object)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#org/eclipse/jgit/revwalk/RevWalk/markStart(org.eclipse.jgit.revwalk.RevCommit)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/ArrayDeque/ArrayDeque()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/Queue/size()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#org/eclipse/jgit/revwalk/RevWalk/RevWalk(org.eclipse.jgit.lib.Repository)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/Queue/remove()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/HashSet/HashSet()
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#java/util/Set/add(java.lang.Object)
pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)#pl/project13/jgit/JGitCommon/seeAllParents(org.eclipse.jgit.revwalk.RevWalk,org.eclipse.jgit.revwalk.RevCommit,java.util.Set)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/Process/getInputStream()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/String/split(java.lang.String)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#pl/project13/maven/git/NativeGitProvider$NativeCommandException/NativeGitProvider$NativeCommandException(int,java.lang.String,java.io.File,java.lang.String,java.lang.String)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/ProcessBuilder/start()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/readStderr(java.io.InputStream)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/StringBuilder/StringBuilder()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/Process/exitValue()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/Process/waitFor()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/io/IOException/IOException(java.lang.Throwable)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/StringBuilder/toString()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/ProcessBuilder/directory(java.io.File)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/Process/getErrorStream()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/io/BufferedReader/readLine()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/run(java.io.File,java.lang.String)#java/lang/ProcessBuilder/ProcessBuilder(java.lang.String%5B%5D)
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/api/Status/getModified()
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/api/Status/getConflicting()
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/api/Status/getChanged()
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/api/Git/status()
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/api/StatusCommand/call()
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/api/Status/getMissing()
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/api/Git/wrap(org.eclipse.jgit.lib.Repository)
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#java/util/Set/isEmpty()
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/api/Status/getAdded()
pl/project13/jgit/JGitCommon/isRepositoryInDirtyState(org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/api/Status/getRemoved()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/lang/Process/getInputStream()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/lang/String/split(java.lang.String)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#pl/project13/maven/git/NativeGitProvider$NativeCommandException/NativeGitProvider$NativeCommandException(int,java.lang.String,java.io.File,java.lang.String,java.lang.String)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/lang/ProcessBuilder/start()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/readStderr(java.io.InputStream)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/lang/Process/exitValue()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/lang/Process/waitFor()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/io/IOException/IOException(java.lang.Throwable)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/lang/StringBuilder/toString()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/lang/ProcessBuilder/directory(java.io.File)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/lang/Process/getErrorStream()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/io/BufferedReader/readLine()
pl/project13/maven/git/NativeGitProvider$JavaProcessRunner/runEmpty(java.io.File,java.lang.String)#java/lang/ProcessBuilder/ProcessBuilder(java.lang.String%5B%5D)
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/prepareGitToExtractMoreDetailedRepoInformation()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getClosestTagCommitCount()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#java/lang/StringBuilder/append(java.lang.String)
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getBuildAuthorEmail()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/put(java.util.Properties,java.lang.String,java.lang.String)
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getCommitMessageFull()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/init()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitCommitIdExecutionException/GitCommitIdExecutionException(java.lang.String)
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#java/lang/Boolean/toString(boolean)
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getCommitAuthorEmail()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getCommitTime()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getClosestTagName()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getCommitMessageShort()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getRemoteOriginUrl()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/CommitIdGenerationMode/ordinal()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getCommitAuthorName()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/maybePutGitDescribe(java.util.Properties)
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/validateAbbrevLength(int)
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#java/lang/StringBuilder/StringBuilder()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getBuildAuthorName()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/finalCleanUp()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getCommitId()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/isDirty()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#java/lang/StringBuilder/append(java.lang.Object)
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/determineBranchName(java.util.Map)
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getAbbrevCommitId()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#java/lang/StringBuilder/toString()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#java/lang/System/getenv()
pl/project13/maven/git/GitDataProvider/loadGitData(java.lang.String,java.util.Properties)#pl/project13/maven/git/GitDataProvider/getTags()
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#org/eclipse/jgit/revwalk/RevWalk/iterator()
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#java/util/Iterator/hasNext()
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#java/util/Collections/emptyList()
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#java/util/Map/size()
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#java/util/Iterator/next()
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#org/eclipse/jgit/revwalk/RevWalk/markStart(org.eclipse.jgit.revwalk.RevCommit)
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#org/eclipse/jgit/revwalk/RevCommit/getId()
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#java/util/Map/get(java.lang.Object)
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#java/util/Collections/singletonList(java.lang.Object)
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#org/eclipse/jgit/revwalk/RevWalk/close()
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#java/util/List/get(int)
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#org/eclipse/jgit/revwalk/RevWalk/RevWalk(org.eclipse.jgit.lib.Repository)
pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#org/eclipse/jgit/revwalk/RevWalk/parseCommit(org.eclipse.jgit.lib.AnyObjectId)
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#java/lang/StringBuilder/append(java.lang.String)
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#org/eclipse/jgit/lib/Repository/findRef(java.lang.String)
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#org/eclipse/jgit/lib/Ref/getObjectId()
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#org/eclipse/jgit/revwalk/RevWalk/markStart(org.eclipse.jgit.revwalk.RevCommit)
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#java/lang/StringBuilder/StringBuilder()
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#org/eclipse/jgit/revwalk/RevWalk/RevWalk(org.eclipse.jgit.lib.Repository)
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#org/eclipse/jgit/lib/Repository/resolve(java.lang.String)
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#java/lang/StringBuilder/toString()
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#pl/project13/maven/git/GitCommitIdExecutionException/GitCommitIdExecutionException(java.lang.String)
pl/project13/maven/git/JGitProvider/prepareGitToExtractMoreDetailedRepoInformation()#pl/project13/maven/git/GitCommitIdExecutionException/GitCommitIdExecutionException(java.lang.String,java.lang.Throwable)
pl/project13/jgit/DescribeResult/toString()#java/util/ArrayList/ArrayList(java.util.Collection)
pl/project13/jgit/DescribeResult/toString()#pl/project13/jgit/DescribeResult/prefixedCommitId()
pl/project13/jgit/DescribeResult/toString()#java/lang/StringBuilder/append(java.lang.String)
pl/project13/jgit/DescribeResult/toString()#pl/project13/jgit/DescribeResult/commitsAwayFromTag()
pl/project13/jgit/DescribeResult/toString()#com/google/common/base/Joiner/on(java.lang.String)
pl/project13/jgit/DescribeResult/toString()#java/util/Arrays/asList(java.lang.Object%5B%5D)
pl/project13/jgit/DescribeResult/toString()#com/google/common/base/Joiner/skipNulls()
pl/project13/jgit/DescribeResult/toString()#java/util/Collections/singletonList(java.lang.Object)
pl/project13/jgit/DescribeResult/toString()#pl/project13/jgit/DescribeResult/tag()
pl/project13/jgit/DescribeResult/toString()#pl/project13/jgit/DescribeResult/abbrevZeroHidesCommitsPartOfDescribe()
pl/project13/jgit/DescribeResult/toString()#java/lang/StringBuilder/StringBuilder()
pl/project13/jgit/DescribeResult/toString()#com/google/common/base/Joiner/join(java.lang.Iterable)
pl/project13/jgit/DescribeResult/toString()#java/lang/StringBuilder/toString()
pl/project13/jgit/DescribeResult/toString()#pl/project13/jgit/DescribeResult/dirtyMarker()
pl/project13/jgit/DescribeCommand/call()#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String,java.lang.Object)
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/JGitCommon/findTagObjectIds(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeResult/DescribeResult(org.eclipse.jgit.lib.ObjectReader,org.eclipse.jgit.lib.ObjectId,boolean,com.google.common.base.Optional)
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeCommand/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/JGitCommon/findCommitsUntilSomeTag(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,java.util.Map)
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeCommand/findDirtyState(org.eclipse.jgit.lib.Repository)
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeCommand/hasTags(org.eclipse.jgit.lib.ObjectId,java.util.Map)
pl/project13/jgit/DescribeCommand/call()#org/eclipse/jgit/revwalk/RevCommit/getId()
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeCommand/call()
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeCommand/createDescribeResult(org.eclipse.jgit.lib.ObjectReader,org.eclipse.jgit.lib.ObjectId,boolean,pl.project13.maven.git.util.Pair)
pl/project13/jgit/DescribeCommand/call()#java/util/List/isEmpty()
pl/project13/jgit/DescribeCommand/call()#java/util/Map/get(java.lang.Object)
pl/project13/jgit/DescribeCommand/call()#java/util/Collections/emptyList()
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/JGitCommon/distanceBetween(org.eclipse.jgit.lib.Repository,org.eclipse.jgit.revwalk.RevCommit,org.eclipse.jgit.revwalk.RevCommit)
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeCommand/createMatchPattern()
pl/project13/jgit/DescribeCommand/call()#java/util/Iterator/next()
pl/project13/jgit/DescribeCommand/call()#pl/project13/maven/git/util/Pair/of(java.lang.Object,java.lang.Object)
pl/project13/jgit/DescribeCommand/call()#org/eclipse/jgit/lib/Repository/newObjectReader()
pl/project13/jgit/DescribeCommand/call()#java/lang/Integer/valueOf(int)
pl/project13/jgit/DescribeCommand/call()#java/util/List/get(int)
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeCommand/foundZeroTags(java.util.Map)
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeResult/withCommitIdAbbrev(int)
pl/project13/jgit/DescribeCommand/call()#java/util/List/iterator()
pl/project13/jgit/DescribeCommand/call()#pl/project13/jgit/DescribeResult/DescribeResult(java.lang.String,boolean,com.google.common.base.Optional)
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String,java.lang.Object)
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/revwalk/RevWalk/parseCommit(org.eclipse.jgit.lib.AnyObjectId)
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#java/lang/StringBuilder/append(java.lang.String)
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/revwalk/RevCommit/getName()
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#java/lang/StringBuilder/StringBuilder()
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/revwalk/RevWalk/close()
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/lib/Repository/resolve(java.lang.String)
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/revwalk/RevWalk/RevWalk(org.eclipse.jgit.lib.Repository)
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#java/lang/StringBuilder/toString()
pl/project13/jgit/JGitCommon/findEvalCommitObjectId(java.lang.String,org.eclipse.jgit.lib.Repository)#org/eclipse/jgit/revwalk/RevWalk/dispose()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/util/Properties/equals(java.lang.Object)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String,java.lang.Object,java.lang.Object)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/util/Properties/remove(java.lang.Object)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#com/fasterxml/jackson/databind/ObjectWriter/writeValue(java.io.Writer,java.lang.Object)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#org/apache/maven/project/MavenProject/getName()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#pl/project13/maven/git/util/SortedProperties/SortedProperties()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#pl/project13/maven/git/util/SortedProperties/store(java.io.OutputStream,java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/lang/StringBuilder/StringBuilder()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/util/Properties/clone()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.io.File)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/lang/StringBuilder/toString()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#com/google/common/io/Closeables/close(java.io.Closeable,boolean)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#pl/project13/maven/git/util/SortedProperties/putAll(java.util.Map)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#com/fasterxml/jackson/databind/ObjectMapper/writerWithDefaultPrettyPrinter()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#pl/project13/maven/git/GitCommitIdExecutionException/GitCommitIdExecutionException(java.lang.Throwable)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/io/File/exists()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#pl/project13/maven/git/GitCommitIdMojo/craftPropertiesOutputFile(java.io.File,java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/io/File/getAbsolutePath()
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#com/google/common/io/Files/createParentDirs(java.io.File)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
pl/project13/maven/git/GitCommitIdMojo/maybeGeneratePropertiesFile(java.util.Properties,java.io.File,java.lang.String)#pl/project13/maven/git/GitCommitIdMojo/readProperties(java.io.File)
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#java/util/Properties/stringPropertyNames()
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#java/util/Iterator/hasNext()
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#pl/project13/maven/git/log/LoggerBridge/debug(java.lang.String,java.lang.Object,java.lang.Object)
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#java/util/Properties/remove(java.lang.Object)
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#pl/project13/maven/git/PropertiesFilterer/isOurProperty(java.lang.String,java.lang.String)
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#com/google/common/base/Predicates/alwaysFalse()
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#java/util/List/isEmpty()
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#com/google/common/base/Predicates/or(com.google.common.base.Predicate,com.google.common.base.Predicate)
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#java/util/Iterator/next()
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#pl/project13/maven/git/PropertiesFilterer$2/PropertiesFilterer$2(pl.project13.maven.git.PropertiesFilterer)
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#java/lang/Boolean/valueOf(boolean)
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#java/util/Set/iterator()
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#com/google/common/base/Predicate/apply(java.lang.Object)
pl/project13/maven/git/PropertiesFilterer/filter(java.util.Properties,java.util.List,java.lang.String)#java/util/List/iterator()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#pl/project13/jgit/JGitCommon/isTagId(org.eclipse.jgit.lib.ObjectId)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevObject/getId()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Map$Entry/getKey()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Map/containsKey(java.lang.Object)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/List/add(java.lang.Object)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevWalk/RevWalk(org.eclipse.jgit.lib.Repository)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Map$Entry/getValue()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Map/entrySet()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String,java.lang.Object)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/lib/Ref/getName()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevWalk/parseCommit(org.eclipse.jgit.lib.AnyObjectId)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Collections/emptyMap()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#pl/project13/jgit/dummy/DatedRevTag/DatedRevTag(org.eclipse.jgit.lib.AnyObjectId,java.lang.String)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Iterator/hasNext()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String,java.lang.Object,java.lang.Object)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String,java.lang.Throwable)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/regex/Matcher/matches()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevTag/getTagName()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/api/Git/tagList()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Map/get(java.lang.Object)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevWalk/reset()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/api/ListTagCommand/call()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Iterator/next()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/HashMap/HashMap()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevTag/getObject()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevWalk/markStart(org.eclipse.jgit.revwalk.RevCommit)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/api/Git/wrap(org.eclipse.jgit.lib.Repository)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevWalk/parseTag(org.eclipse.jgit.lib.AnyObjectId)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Set/iterator()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/Collections/singletonList(java.lang.Object)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevWalk/close()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/List/iterator()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/revwalk/RevTag/getTaggerIdent()
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#org/eclipse/jgit/lib/Repository/resolve(java.lang.String)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#pl/project13/jgit/dummy/DatedRevTag/DatedRevTag(org.eclipse.jgit.revwalk.RevTag)
pl/project13/jgit/JGitCommon/getCommitIdsToTags(org.eclipse.jgit.lib.Repository,boolean,java.lang.String)#pl/project13/maven/git/log/LoggerBridge/info(java.lang.String,java.lang.Object%5B%5D)
pl/project13/maven/git/JGitProvider/getGitRepository()#org/eclipse/jgit/storage/file/FileRepositoryBuilder/build()
pl/project13/maven/git/JGitProvider/getGitRepository()#java/lang/StringBuilder/append(java.lang.String)
pl/project13/maven/git/JGitProvider/getGitRepository()#java/lang/StringBuilder/append(java.lang.Object)
pl/project13/maven/git/JGitProvider/getGitRepository()#org/eclipse/jgit/storage/file/FileRepositoryBuilder/setGitDir(java.io.File)
pl/project13/maven/git/JGitProvider/getGitRepository()#java/lang/StringBuilder/toString()
pl/project13/maven/git/JGitProvider/getGitRepository()#org/eclipse/jgit/storage/file/FileRepositoryBuilder/findGitDir()
pl/project13/maven/git/JGitProvider/getGitRepository()#org/eclipse/jgit/storage/file/FileRepositoryBuilder/FileRepositoryBuilder()
pl/project13/maven/git/JGitProvider/getGitRepository()#java/lang/StringBuilder/StringBuilder()
pl/project13/maven/git/JGitProvider/getGitRepository()#org/eclipse/jgit/storage/file/FileRepositoryBuilder/readEnvironment()
pl/project13/maven/git/JGitProvider/getGitRepository()#pl/project13/maven/git/GitCommitIdExecutionException/GitCommitIdExecutionException(java.lang.String)
pl/project13/maven/git/JGitProvider/getGitRepository()#pl/project13/maven/git/GitCommitIdExecutionException/GitCommitIdExecutionException(java.lang.String,java.lang.Throwable)
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/io/BufferedReader/close()
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/io/File/File(java.lang.String)
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/lang/String/equals(java.lang.Object)
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/io/File/isAbsolute()
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/io/FileReader/FileReader(java.io.File)
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/io/File/getParentFile()
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/io/File/File(java.io.File,java.lang.String)
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/lang/String/split(java.lang.String)
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/io/BufferedReader/BufferedReader(java.io.Reader)
pl/project13/maven/git/GitDirLocator/processGitDirFile(java.io.File)#java/io/BufferedReader/readLine()
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#com/google/common/io/Closeables/close(java.io.Closeable,boolean)
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/util/Iterator/hasNext()
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/util/Map$Entry/getKey()
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/util/HashMap/entrySet()
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.Reader,com.fasterxml.jackson.core.type.TypeReference)
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/util/Properties/Properties()
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/util/Set/iterator()
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/util/Map$Entry/getValue()
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/util/Properties/setProperty(java.lang.String,java.lang.String)
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/lang/String/valueOf(java.lang.Object)
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/util/Iterator/next()
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#pl/project13/maven/git/GitCommitIdMojo$1/GitCommitIdMojo$1(pl.project13.maven.git.GitCommitIdMojo)
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
pl/project13/maven/git/GitCommitIdMojo/readJsonProperties(java.io.File)#pl/project13/maven/git/GitCommitIdMojo$CannotReadFileException/GitCommitIdMojo$CannotReadFileException(java.lang.Throwable)
