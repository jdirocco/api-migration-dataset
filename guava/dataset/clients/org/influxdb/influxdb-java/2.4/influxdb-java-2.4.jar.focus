org/influxdb/impl/BatchProcessor/write()#com/google/common/collect/Maps/newHashMap()
org/influxdb/impl/BatchProcessor/write()#java/util/ArrayList/ArrayList(int)
org/influxdb/impl/BatchProcessor/write()#java/util/concurrent/BlockingQueue/drainTo(java.util.Collection)
org/influxdb/impl/BatchProcessor/write()#org/influxdb/dto/BatchPoints$Builder/build()
org/influxdb/impl/BatchProcessor/write()#java/util/Iterator/hasNext()
org/influxdb/impl/BatchProcessor/write()#org/influxdb/dto/BatchPoints/point(org.influxdb.dto.Point)
org/influxdb/impl/BatchProcessor/write()#java/util/concurrent/BlockingQueue/size()
org/influxdb/impl/BatchProcessor/write()#java/util/Map/values()
org/influxdb/impl/BatchProcessor/write()#java/util/Iterator/next()
org/influxdb/impl/BatchProcessor/write()#java/util/concurrent/BlockingQueue/isEmpty()
org/influxdb/impl/BatchProcessor/write()#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
org/influxdb/impl/BatchProcessor/write()#org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)
org/influxdb/impl/BatchProcessor/write()#org/influxdb/dto/BatchPoints$Builder/retentionPolicy(java.lang.String)
org/influxdb/impl/BatchProcessor/write()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/influxdb/impl/BatchProcessor/write()#java/util/Map/get(java.lang.Object)
org/influxdb/impl/BatchProcessor/write()#org/influxdb/dto/BatchPoints/database(java.lang.String)
org/influxdb/impl/BatchProcessor/write()#org/influxdb/impl/BatchProcessor$BatchEntry/getRp()
org/influxdb/impl/BatchProcessor/write()#org/influxdb/impl/BatchProcessor$BatchEntry/getDb()
org/influxdb/impl/BatchProcessor/write()#org/influxdb/impl/BatchProcessor$BatchEntry/getPoint()
org/influxdb/impl/BatchProcessor/write()#java/util/Map/containsKey(java.lang.Object)
org/influxdb/impl/BatchProcessor/write()#java/util/List/iterator()
org/influxdb/impl/BatchProcessor/write()#java/util/Collection/iterator()
org/influxdb/dto/BatchPoints$Builder/build()#org/influxdb/dto/BatchPoints/setConsistency(org.influxdb.InfluxDB$ConsistencyLevel)
org/influxdb/dto/BatchPoints$Builder/build()#org/influxdb/dto/Point/getTags()
org/influxdb/dto/BatchPoints$Builder/build()#org/influxdb/dto/BatchPoints/BatchPoints()
org/influxdb/dto/BatchPoints$Builder/build()#java/util/Iterator/hasNext()
org/influxdb/dto/BatchPoints$Builder/build()#org/influxdb/dto/BatchPoints/setPoints(java.util.List)
org/influxdb/dto/BatchPoints$Builder/build()#java/util/Map/putAll(java.util.Map)
org/influxdb/dto/BatchPoints$Builder/build()#org/influxdb/dto/BatchPoints/setTags(java.util.Map)
org/influxdb/dto/BatchPoints$Builder/build()#java/util/Iterator/next()
org/influxdb/dto/BatchPoints$Builder/build()#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/influxdb/dto/BatchPoints$Builder/build()#org/influxdb/dto/BatchPoints/setDatabase(java.lang.String)
org/influxdb/dto/BatchPoints$Builder/build()#java/util/List/iterator()
org/influxdb/dto/BatchPoints$Builder/build()#org/influxdb/dto/BatchPoints/setRetentionPolicy(java.lang.String)
org/influxdb/dto/BatchPoints$Builder/build()#com/google/common/base/Strings/isNullOrEmpty(java.lang.String)
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#org/influxdb/InfluxDB$ConsistencyLevel/value()
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#java/util/List/size()
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#org/influxdb/dto/BatchPoints/getRetentionPolicy()
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#org/influxdb/dto/BatchPoints/getDatabase()
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#org/influxdb/impl/InfluxDBService/writePoints(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,okhttp3.RequestBody)
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#org/influxdb/impl/TimeUtil/toTimePrecision(java.util.concurrent.TimeUnit)
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#org/influxdb/dto/BatchPoints/getConsistency()
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#org/influxdb/dto/BatchPoints/getPoints()
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#org/influxdb/dto/BatchPoints/lineProtocol()
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#okhttp3/RequestBody/create(okhttp3.MediaType,java.lang.String)
org/influxdb/impl/InfluxDBImpl/write(org.influxdb.dto.BatchPoints)#java/util/concurrent/atomic/AtomicLong/addAndGet(long)
org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)#retrofit2/Call/execute()
org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)#retrofit2/Response/body()
org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)#retrofit2/Response/isSuccessful()
org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)#retrofit2/Response/errorBody()
org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)#okhttp3/ResponseBody/close()
org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)#okhttp3/ResponseBody/string()
org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/influxdb/impl/InfluxDBImpl/ping()#okhttp3/Headers/get(java.lang.String)
org/influxdb/impl/InfluxDBImpl/ping()#java/util/Iterator/hasNext()
org/influxdb/impl/InfluxDBImpl/ping()#org/influxdb/dto/Pong/Pong()
org/influxdb/impl/InfluxDBImpl/ping()#org/influxdb/impl/InfluxDBService/ping()
org/influxdb/impl/InfluxDBImpl/ping()#com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)
org/influxdb/impl/InfluxDBImpl/ping()#retrofit2/Call/execute()
org/influxdb/impl/InfluxDBImpl/ping()#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/influxdb/impl/InfluxDBImpl/ping()#java/util/Set/iterator()
org/influxdb/impl/InfluxDBImpl/ping()#org/influxdb/dto/Pong/setVersion(java.lang.String)
org/influxdb/impl/InfluxDBImpl/ping()#com/google/common/base/Stopwatch/createStarted()
org/influxdb/impl/InfluxDBImpl/ping()#okhttp3/Headers/toMultimap()
org/influxdb/impl/InfluxDBImpl/ping()#org/influxdb/dto/Pong/setResponseTime(long)
org/influxdb/impl/InfluxDBImpl/ping()#retrofit2/Response/headers()
org/influxdb/impl/InfluxDBImpl/ping()#java/lang/String/equalsIgnoreCase(java.lang.String)
org/influxdb/impl/InfluxDBImpl/ping()#java/util/Iterator/next()
org/influxdb/impl/InfluxDBImpl/ping()#java/util/Map/keySet()
org/influxdb/impl/InfluxDBImpl/describeDatabases()#org/influxdb/impl/InfluxDBService/query(java.lang.String,java.lang.String,java.lang.String)
org/influxdb/impl/InfluxDBImpl/describeDatabases()#org/influxdb/dto/QueryResult$Series/getValues()
org/influxdb/impl/InfluxDBImpl/describeDatabases()#java/lang/Object/toString()
org/influxdb/impl/InfluxDBImpl/describeDatabases()#java/util/Iterator/hasNext()
org/influxdb/impl/InfluxDBImpl/describeDatabases()#com/google/common/collect/Lists/newArrayList()
org/influxdb/impl/InfluxDBImpl/describeDatabases()#org/influxdb/dto/QueryResult/getResults()
org/influxdb/impl/InfluxDBImpl/describeDatabases()#java/util/Iterator/next()
org/influxdb/impl/InfluxDBImpl/describeDatabases()#org/influxdb/impl/InfluxDBImpl/execute(retrofit2.Call)
org/influxdb/impl/InfluxDBImpl/describeDatabases()#java/util/List/add(java.lang.Object)
org/influxdb/impl/InfluxDBImpl/describeDatabases()#java/util/List/get(int)
org/influxdb/impl/InfluxDBImpl/describeDatabases()#java/util/List/iterator()
org/influxdb/impl/InfluxDBImpl/describeDatabases()#org/influxdb/dto/QueryResult$Result/getSeries()
org/influxdb/dto/Point$Builder/build()#java/lang/Long/valueOf(long)
org/influxdb/dto/Point$Builder/build()#org/influxdb/dto/Point/Point()
org/influxdb/dto/Point$Builder/build()#java/util/Map/size()
org/influxdb/dto/Point$Builder/build()#org/influxdb/dto/Point/setMeasurement(java.lang.String)
org/influxdb/dto/Point$Builder/build()#java/lang/System/currentTimeMillis()
org/influxdb/dto/Point$Builder/build()#org/influxdb/dto/Point/setTime(java.lang.Long)
org/influxdb/dto/Point$Builder/build()#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/influxdb/dto/Point$Builder/build()#org/influxdb/dto/Point/setFields(java.util.Map)
org/influxdb/dto/Point$Builder/build()#org/influxdb/dto/Point/setTags(java.util.Map)
org/influxdb/dto/Point$Builder/build()#org/influxdb/dto/Point/setPrecision(java.util.concurrent.TimeUnit)
org/influxdb/dto/Point$Builder/build()#com/google/common/base/Strings/isNullOrEmpty(java.lang.String)
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#retrofit2/converter/moshi/MoshiConverterFactory/create()
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#java/util/concurrent/atomic/AtomicLong/AtomicLong()
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#retrofit2/Retrofit$Builder/client(okhttp3.OkHttpClient)
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#okhttp3/OkHttpClient$Builder/addInterceptor(okhttp3.Interceptor)
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#okhttp3/logging/HttpLoggingInterceptor/HttpLoggingInterceptor()
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#retrofit2/Retrofit$Builder/Retrofit$Builder()
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#okhttp3/logging/HttpLoggingInterceptor/setLevel(okhttp3.logging.HttpLoggingInterceptor$Level)
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#retrofit2/Retrofit$Builder/build()
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#retrofit2/Retrofit$Builder/baseUrl(java.lang.String)
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#retrofit2/Retrofit/create(java.lang.Class)
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#java/lang/Object/Object()
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#retrofit2/Retrofit$Builder/addConverterFactory(retrofit2.Converter$Factory)
org/influxdb/impl/InfluxDBImpl/InfluxDBImpl(java.lang.String,java.lang.String,java.lang.String,okhttp3.OkHttpClient$Builder)#okhttp3/OkHttpClient$Builder/build()
org/influxdb/dto/Point/concatenateFields()#java/util/Iterator/hasNext()
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/setMinimumFractionDigits(int)
org/influxdb/dto/Point/concatenateFields()#java/util/Map/size()
org/influxdb/dto/Point/concatenateFields()#java/util/Iterator/next()
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/getInstance(java.util.Locale)
org/influxdb/dto/Point/concatenateFields()#java/lang/StringBuilder/StringBuilder()
org/influxdb/dto/Point/concatenateFields()#java/util/Set/iterator()
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/setMaximumFractionDigits(int)
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/setGroupingUsed(boolean)
org/influxdb/dto/Point/concatenateFields()#java/util/Map/entrySet()
org/influxdb/dto/Point/concatenateFields()#com/google/common/escape/Escaper/escape(java.lang.String)
org/influxdb/dto/Point/concatenateFields()#java/lang/StringBuilder/append(java.lang.String)
org/influxdb/dto/Point/concatenateFields()#java/util/Map$Entry/getKey()
org/influxdb/dto/Point/concatenateFields()#java/lang/StringBuilder/append(java.lang.Object)
org/influxdb/dto/Point/concatenateFields()#java/util/Map$Entry/getValue()
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/format(java.lang.Object)
org/influxdb/dto/Point/concatenatedTags()#java/util/Iterator/hasNext()
org/influxdb/dto/Point/concatenatedTags()#java/util/Iterator/next()
org/influxdb/dto/Point/concatenatedTags()#java/lang/StringBuilder/StringBuilder()
org/influxdb/dto/Point/concatenatedTags()#java/util/Set/iterator()
org/influxdb/dto/Point/concatenatedTags()#java/util/Map$Entry/getValue()
org/influxdb/dto/Point/concatenatedTags()#java/util/Map/entrySet()
org/influxdb/dto/Point/concatenatedTags()#com/google/common/escape/Escaper/escape(java.lang.String)
org/influxdb/dto/Point/concatenatedTags()#java/lang/StringBuilder/append(java.lang.String)
org/influxdb/dto/Point/concatenatedTags()#java/util/Map$Entry/getKey()
