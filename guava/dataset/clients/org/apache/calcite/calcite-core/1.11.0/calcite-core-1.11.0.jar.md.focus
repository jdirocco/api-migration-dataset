org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)
org/apache/calcite/interpreter/SortNode/run()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/core/AggregateCall/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)
org/apache/calcite/util/NlsString/concat(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)
org/apache/calcite/rel/core/Correlate/deriveRowType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)
org/apache/calcite/tools/RelBuilder/fields(int,int)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)
org/apache/calcite/util/Benchmark$Statistician/printDurations()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/rex/RexCall/computeDigest(boolean)
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rex/RexProgramBuilder/addIdentity()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)
org/apache/calcite/util/Util/stringToList(java.lang.String)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)
org/apache/calcite/materialize/TileSuggester/tiles()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/runtime/Resources$Element/deriveKey()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)
org/apache/calcite/rel/RelCollationImpl/toString()
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/rex/RexWindow/computeDigest()
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)
org/apache/calcite/rel/RelRoot/project(boolean)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/util/ImmutableBitSet/powerSet()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)
org/apache/calcite/util/SaffronProperties$Helper/instance()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/util/Util/toURL(java.io.File)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/util/CompositeMap/combinedMap()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)
org/apache/calcite/interpreter/JoinNode/run()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/rel/core/Values/assertRowType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/util/Util/listToString(java.util.List)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)
org/apache/calcite/rex/RexFieldCollation/toString()
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/sql/validate/SqlQualified/translatedNames()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)
