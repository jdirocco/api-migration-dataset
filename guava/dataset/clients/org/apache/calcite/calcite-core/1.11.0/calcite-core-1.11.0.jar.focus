org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/areRowTypesEqual(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/createCastRel(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getExpectedInputRowType(int)
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Object/getClass()
org/apache/calcite/rel/rules/CoerceInputsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SelectScope/getChildren()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorUtil/getEnclosingSelectScope(org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorNamespace/lookupChild(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorScope/findAliases(java.util.Collection)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidUdfNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/Collection/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/SqlValidatorScope$ResolvedImpl()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/only()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlMonikerImpl/SqlMonikerImpl(java.lang.String,org.apache.calcite.sql.validate.SqlMonikerType)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/util/Util/skipLast(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupNameCompletionHints(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/count()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCluster()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getTraitSet()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/addAll(java.lang.Iterable)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/getRightPrec()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlExplain/getFormat()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlExplain$Depth/ordinal()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlExplain/getOperator()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlExplainLevel/ordinal()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/getLeftPrec()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlExplain/getDetailLevel()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlExplainFormat/ordinal()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlExplain/getDepth()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/apache/calcite/sql/SqlExplain/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/newlineAndIndent()
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#java/lang/String/indexOf(java.lang.String,int)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/valueOf(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#java/lang/String/substring(int)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecScale(boolean,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorImpl/access$000(org.apache.calcite.sql.validate.SqlValidatorImpl)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope/resolveColumn(java.lang.String,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorImpl/getTypeFactory()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/subList(int,int)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/type/SqlTypeUtil/addCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/util/Util/skip(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlUtil/makeCall(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolve/rowType()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$Path/steps()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/only()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/field(org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/runtime/CalciteResource/unknownIdentifier(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/getComponent(int,int)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/SqlValidatorScope$ResolvedImpl()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/runtime/CalciteResource/unknownField(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlOperator/validateOperands(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/getComponent(int)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/SqlValidatorImpl$DeriveTypeVisitor/visit(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/count()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/rel/core/RelFactories$ProjectFactory/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/util/mapping/Mapping/getSource(int)
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/util/mapping/Mapping/getMappingType()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/util/mapping/MappingType/isSingleSource()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/util/mapping/Mapping/getTargetCount()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/util/mapping/MappingType/isMandatorySource()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/util/mapping/Mapping/isIdentity()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/RelOptCost/multiplyBy(double)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoRuleMatch/onMatch()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlanner/injectImportanceBoost()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/RelOptUtil/toString(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlExplainLevel)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/RelSubset/buildCheapestPlan(org.apache.calcite.plan.volcano.VolcanoPlanner)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlannerPhase/values()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/RelOptCost/isLe(org.apache.calcite.plan.RelOptCost)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/io/PrintWriter/flush()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/io/StringWriter/StringWriter()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlannerPhase/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/RelOptRule/matches(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlanner/canonize(org.apache.calcite.plan.volcano.RelSubset)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/RuleQueue/phaseCompleted(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/lang/Math/max(int,int)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlanner/clearImportanceBoost()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/RelOptCostFactory/makeHugeCost()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/io/StringWriter/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoRuleMatch/getRule()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/RelOptCost/isInfinite()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlanner/setInitialImportance()
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/XmlOutput/cdata(java.lang.String)
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/subtract(int)
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/XmlOutput/beginBeginTag(java.lang.String)
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getRelTypeName()
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/explain(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/XmlOutput/endTag(java.lang.String)
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/XmlOutput/endBeginTag(java.lang.String)
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/add(int)
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Object/toString()
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/XmlOutput/beginTag(java.lang.String,org.apache.calcite.util.XmlOutput$XMLAttrVector)
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelXmlWriter/explainGeneric(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/XmlOutput/attribute(java.lang.String,java.lang.String)
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexUtil/isCasePredicate(org.apache.calcite.rex.RexCall,int)
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/clone(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule/pushPredicateIntoCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule/substitute(org.apache.calcite.rex.RexCall,int,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/add(int)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/metadata/RelMetadataQuery/getCumulativeCost(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/io/PrintWriter/println(java.lang.Object)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getRelTypeName()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/sql/SqlExplainLevel/ordinal()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/externalize/RelWriterImpl/explainInputs(java.util.List)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/subtract(int)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/spaces(java.lang.StringBuilder)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/metadata/RelMetadataQuery/isVisibleInExplain(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlExplainLevel)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/SqlFunction/getSyntax()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/type/AssignableOperandTypeChecker/AssignableOperandTypeChecker(java.util.List,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/runtime/CalciteResource/invalidArgCount(java.lang.String,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/SqlFunction/getName()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/runtime/CalciteResource/validatorUnknownFunction(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/SqlOperandCountRange/getMin()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/SqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/SqlFunction/getNameAsId()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/SqlFunction/getSqlIdentifier()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)#org/apache/calcite/sql/SqlFunction/getOperandCountRange()
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#org/apache/calcite/sql/validate/SqlValidator/getTypeFactory()
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#org/apache/calcite/sql/validate/SqlValidator/setValidatedNodeType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#org/apache/calcite/sql/validate/SqlValidatorScope/getOperandScope(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#java/util/List/iterator()
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#org/apache/calcite/rel/RelFieldCollation$Direction/monotonicity()
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#org/apache/calcite/rex/RexCallBinding/create(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#java/util/List/isEmpty()
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#java/util/Iterator/next()
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#java/util/List/get(int)
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#java/util/List/iterator()
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#org/apache/calcite/sql/SqlOperator/getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rex/RexCallBinding/getOperandMonotonicity(int)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/Object/toString()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/String/length()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/util/Collections/emptyList()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/util/Iterator/next()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints0(java.lang.String,int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/String/substring(int,int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/String/substring(int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/util/List/iterator()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/Character/isJavaIdentifierPart(char)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String%5B%5D)#java/lang/String/charAt(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIntervalQualifier/getStartUnit()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/avatica/util/TimeUnit/ordinal()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getTypeFactory()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/divide(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeFlag(java.lang.Enum)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#java/math/BigDecimal/divide(java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/mod(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/getFactor(org.apache.calcite.avatica.util.TimeUnit)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeReinterpretCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExtract(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlExtractFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/convertFunction(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlCall)
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#java/util/Deque/contains(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#java/util/List/isEmpty()
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#org/apache/calcite/plan/RelOptRuleOperand/getChildOperands()
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#java/util/Deque/pop()
org/apache/calcite/plan/volcano/RuleQueue/checkDuplicateSubsets(java.util.Deque,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/rules/AggregateStarTableRule$2/AggregateStarTableRule$2(org.apache.calcite.rel.rules.AggregateStarTableRule,int,int,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.materialize.TileKey,java.util.List)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptPlanner/getLattice(org.apache.calcite.plan.RelOptTable)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.util.mapping.Mappings$TargetMapping)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptLattice/getAggregate(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.util.ImmutableBitSet,java.util.List)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/materialize/Lattice/toMeasures(java.util.List)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptUtil/getContext(org.apache.calcite.plan.RelOptCluster)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptTable/getRelOptSchema()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/jdbc/CalciteSchema$TableEntry/getTable()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/plan/RelOptTable/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/rules/AggregateStarTableRule$2/inverse()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/schema/impl/StarTable$StarTableScan/getTable()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Project/getTraitSet()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#com/google/common/collect/ImmutableList/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Aggregate/estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/util/ImmutableBitSet/indexOf(int)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/schema/Table/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/prepare/RelOptTableImpl/create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.jdbc.CalciteSchema$TableEntry,java.lang.Double)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/util/ImmutableBitSet$Builder/cardinality()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Project/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/schema/impl/StarTable$StarTableScan/getCluster()
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/hep/HepPlanner/notifyEquivalence(org.apache.calcite.rel.RelNode,java.lang.Object,boolean)
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)#java/lang/Object/toString()
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/recomputeDigest()
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/hep/HepPlanner/notifyDiscard(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/hep/HepRelVertex/replaceRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexDynamicParam/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/handle(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/java/JavaTypeFactory/getJavaClass(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexDynamicParam/getIndex()
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/linq4j/Enumerable/select(org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/getCatalogReader()
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/linq4j/Enumerable/where(org.apache.calcite.linq4j.function.Predicate1)
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/DelegatingScope/DelegatingScope(org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/CatalogScope$2/CatalogScope$2(org.apache.calcite.sql.validate.CatalogScope)
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/CatalogScope$1/CatalogScope$1(org.apache.calcite.sql.validate.CatalogScope)
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/linq4j/Enumerable/into(java.util.Collection)
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/getAllSchemaObjectNames(java.util.List)
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/sql/validate/CatalogScope/CatalogScope(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/linq4j/Linq4j/asEnumerable(java.util.List)
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/sql/type/BasicSqlType/getPrecision()
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/sql/type/BasicSqlType/getScale()
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/sql/type/SqlTypeName/allowsPrec()
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#java/lang/StringBuilder/append(char)
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/rel/type/RelDataTypeSystem/getDefaultPrecision(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/util/SerializableCharset/getCharset()
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/sql/type/SqlTypeName/getDefaultScale()
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/sql/SqlCollation/getCollationName()
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/sql/type/SqlTypeName/name()
org/apache/calcite/sql/type/BasicSqlType/generateTypeString(java.lang.StringBuilder,boolean)#java/nio/charset/Charset/name()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/String/length()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/String/substring(int,int)
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/toString()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/String/endsWith(java.lang.String)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/newArrayInit(java.lang.reflect.Type,java.lang.Iterable)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexProgramBuilder/getProgram()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateProjects(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/reflect/Method/getName()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/toString(org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexProgramBuilder/addProject(org.apache.calcite.rex.RexNode,java.lang.String)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/JavaTypeFactoryImpl(org.apache.calcite.rel.type.RelDataTypeSystem)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexProgramBuilder/getProjectList()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlMoniker/getType()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/parser/SqlParserPos/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorImpl/getNamespace(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#com/google/common/collect/ImmutableList/subList(int,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/Collection/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/SqlIdentifier/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorImpl/lookupJoinHints(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorImpl/lookupSelectHints(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorUtil/getSchemaObjectMonikers(org.apache.calcite.sql.validate.SqlValidatorCatalogReader,java.util.List,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorNamespace/unwrap(java.lang.Class)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorImpl/getCatalogReader()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/IdentifierNamespace/getId()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/validate/SqlValidatorNamespace/isWrapperFor(java.lang.Class)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/SqlIdentifier/getComponent(int)
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#java/util/Map$Entry/getKey()
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#org/apache/calcite/util/Litmus/succeed()
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#java/util/Iterator/next()
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#java/util/Set/iterator()
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#java/util/Map$Entry/getValue()
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#java/util/List/iterator()
org/apache/calcite/rex/RexLiteral/validConstant(java.lang.Object,org.apache.calcite.util.Litmus)#java/util/Map/entrySet()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericScale()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/Math/max(int,int)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl/getTypeSystem()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericPrecision()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/Math/min(int,int)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeUtil/isExactNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeUtil/isDecimal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createDecimalQuotient(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/getVariablesUsed(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/getVariablesSet(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Set/size()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Set/iterator()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/List/contains(java.lang.Object)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCluster()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getRowType()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/isEmpty()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getColumnMappings()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/iterator()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getInputs()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getElementType()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getCluster()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getCall()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/create(org.apache.calcite.plan.RelOptCluster,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggContext/returnType()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/ifThenElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rowInPartition(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/negate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rowTranslator(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/exitBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/RexImpTable/getDefaultValue(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rexArguments()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/nestBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getCluster()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1000(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveSingleAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/analyzeOperands(java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandPlusMinus(org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandComparison(org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isApproximateNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandDivide(org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(java.util.Collection)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/next()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlOperatorBinding/isOperandNull(int,boolean)
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/runtime/CalciteResource/nullIllegal()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/runtime/CalciteResource/needSameTypeParameter()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandCount()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/lang/Integer/intValue()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/type/SameOperandTypeChecker/getOperandList(int)
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/operand(int)
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/util/List/iterator()
org/apache/calcite/sql/type/SameOperandTypeChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/newValidationError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/isFlattened()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getTable()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getSourceExpressionList()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getCatalogReader()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getUpdateColumnList()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getOperation()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableTableModify/EnumerableTableModify(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare$CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify$Operation,java.util.List,java.util.List,boolean)
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getInput()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getTraitSet()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/ArrayList/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#com/google/common/collect/SortedSetMultimap/keySet()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#com/google/common/collect/SortedSetMultimap/putAll(java.lang.Object,java.lang.Iterable)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#com/google/common/collect/SortedSetMultimap/removeAll(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/rules/LoptJoinTree/LoptJoinTree(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.LoptJoinTree$BinaryTree,org.apache.calcite.rel.rules.LoptJoinTree$BinaryTree)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addAdditionalFilters(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/getChosenSemiJoin(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/rules/LoptJoinTree/getJoinTree()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/rules/LoptJoinTree/getFactorTree()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/rel/rules/LoptJoinTree/LoptJoinTree(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/util/ImmutableIntList/contains(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#java/util/Iterator/next()
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#org/apache/calcite/util/Util/skipLast(java.util.List)
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#org/apache/calcite/jdbc/CalciteSchema/getPath()
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#java/util/List/size()
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#java/util/List/iterator()
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#org/apache/calcite/prepare/CalciteCatalogReader/getSchema(java.lang.Iterable)
org/apache/calcite/prepare/CalciteCatalogReader/getFunctionsFrom(java.util.List)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/getSourceCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/getTargetCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Set/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ReflectUtil$MethodDispatcher/invoke(java.lang.Object%5B%5D)
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/runtime/CalciteResource/typeNotComparable(java.lang.String,java.lang.String)
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/parser/SqlParserPos/toString()
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/newError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/type/SqlSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/operand(int)
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getTypeFactory()
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getScope()
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlNode/getParserPosition()
org/apache/calcite/sql/type/MultisetOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#java/lang/Math/min(double,double)
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)#java/lang/Double/doubleValue()
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql/parser/SqlParser/parseQuery()
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/convertQuery(org.apache.calcite.sql.SqlNode,boolean,boolean)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/build()
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$100(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$300(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$400(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$500(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$600(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$700(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$800(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$900(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql/parser/SqlParser/create(java.lang.String,org.apache.calcite.sql.parser.SqlParser$Config)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/CalciteSqlValidator/CalciteSqlValidator(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.sql.validate.SqlConformance)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql/validate/SqlValidator/validate(org.apache.calcite.sql.SqlNode)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptCluster/create(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/CalciteCatalogReader/withSchemaPath(java.util.List)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/configBuilder()
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql/validate/SqlValidator/setIdentifierExpansion(boolean)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$902(org.apache.calcite.prepare.PlannerImpl,org.apache.calcite.rel.RelRoot)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/SqlToRelConverter(org.apache.calcite.plan.RelOptTable$ViewExpander,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.prepare.Prepare$CatalogReader,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.sql2rel.SqlRexConvertletTable,org.apache.calcite.sql2rel.SqlToRelConverter$Config)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql2rel/RelDecorrelator/decorrelateQuery(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl/access$000(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/flattenTypes(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/withTrimUnusedFields(boolean)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/withConvertTableAccess(boolean)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/PlannerImpl$ViewExpanderImpl(org.apache.calcite.prepare.PlannerImpl)
org/apache/calcite/prepare/PlannerImpl$ViewExpanderImpl/expandView(org.apache.calcite.rel.type.RelDataType,java.lang.String,java.util.List,java.util.List)#org/apache/calcite/rel/RelRoot/withRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/prepare/CalcitePrepareImpl/CalcitePrepareImpl()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/sql/Connection/createStatement()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/tools/Frameworks$PrepareAction/access$000(org.apache.calcite.tools.Frameworks$PrepareAction)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/sql/Statement/unwrap(java.lang.Class)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/config/CalciteConnectionProperty/camelName()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/lang/Object/getClass()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/util/Properties/Properties()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/lang/Class/getName()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/tools/FrameworkConfig/getTypeSystem()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/sql/DriverManager/getConnection(java.lang.String,java.util.Properties)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenInputs(java.util.List,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/RelOptPlanner/getExecutor()
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/getCondition()
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/RelOptCluster/getPlanner()
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/getInput()
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/RexImplicationChecker/RexImplicationChecker(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexExecutorImpl,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/getRowType()
org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/RexImplicationChecker/implies(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/generateAccessor(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/project(java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferArray()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#org/apache/calcite/jdbc/CalciteSchema$FunctionEntry/getFunction()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/List/size()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/Iterator/next()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/List/get(int)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#org/apache/calcite/schema/Schemas/matches(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.schema.Function,java.util.List)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/lang/Math/max(int,int)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeName/allowsPrec()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/shouldRaggedFixedLengthValueUnionBeVariable()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/rel/type/RelDataType/getFamily()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/nio/charset/Charset/contains(java.nio.charset.Charset)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericScale()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isInterval(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isIntType(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/createDoublePrecisionType()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/List/size()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/isJavaType(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isLob(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isDatetime(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isApproximateNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/inCharOrBinaryFamilies(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/nio/charset/Charset/equals(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecScale(boolean,boolean)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericPrecision()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/lang/Math/min(int,int)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isExactNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isDecimal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isBoundedVariableWidth(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/getTypeFactory()
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/getAllSchemaObjectNames(java.util.List)
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorTable/getRowType()
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/getTable(java.util.List)
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlMoniker/getFullyQualifiedNames()
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SchemaNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalUnion/create(java.util.List,boolean)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getChildRels(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalUnion/getRowType()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PruneEmptyRules/access$000(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/empty()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/createCastRel(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/getFieldType(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#java/util/List/get(int)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/ReflectiveVisitDispatcher/invokeVisitor(org.apache.calcite.util.ReflectiveVisitor,java.lang.Object,java.lang.String)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/InterpretableRel/implement(org.apache.calcite.interpreter.InterpretableRel$InterpreterImplementor)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/Interpreter/access$100(org.apache.calcite.interpreter.Interpreter)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/childrenAccept(org.apache.calcite.rel.RelVisitor)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/Object/getClass()
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/interpreter/Interpreter$Compiler/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/InterpretableRel$InterpreterImplementor/InterpretableRel$InterpreterImplementor(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.DataContext)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#org/apache/calcite/sql/SqlOperator/getSignatureTemplate(int)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/Object/toString()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/String/toUpperCase()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/util/List/size()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/text/MessageFormat/format(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/setNewForOldRel(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjections(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,java.util.List,java.util.List,java.lang.String,java.util.List)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/logical/LogicalCalc/getCluster()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexLocalRef/RexLocalRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexProgramBuilder/addCondition(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/logical/LogicalCalc/getProgram()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/logical/LogicalCalc/getInput()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexProgram/getProjectList()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/getNewForOldInput(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/logical/LogicalCalc/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexProgramBuilder/addProject(org.apache.calcite.rex.RexNode,java.lang.String)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexProgramBuilder/registerInput(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/logical/LogicalCalc/getRowType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexProgramBuilder/getProgram()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/RelStructuredTypeFlattener$RewriteRexShuttle(org.apache.calcite.sql2rel.RelStructuredTypeFlattener,org.apache.calcite.sql2rel.RelStructuredTypeFlattener$1)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexLocalRef/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/getNewForOldRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexProgram/getExprList()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/isAlwaysFalse()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/Strong$Policy/ordinal()
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/Strong/policy(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/interpreter/SortNode/run()#org/apache/calcite/interpreter/Source/receive()
org/apache/calcite/interpreter/SortNode/run()#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/interpreter/SortNode/run()#org/apache/calcite/interpreter/SortNode/comparator()
org/apache/calcite/interpreter/SortNode/run()#java/util/List/size()
org/apache/calcite/interpreter/SortNode/run()#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/interpreter/SortNode/run()#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/SortNode/run()#java/util/List/get(int)
org/apache/calcite/interpreter/SortNode/run()#java/math/BigDecimal/intValue()
org/apache/calcite/interpreter/SortNode/run()#org/apache/calcite/interpreter/Sink/send(org.apache.calcite.interpreter.Row)
org/apache/calcite/interpreter/SortNode/run()#java/util/List/isEmpty()
org/apache/calcite/interpreter/SortNode/run()#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/interpreter/SortNode/run()#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/calcite/interpreter/SortNode/run()#org/apache/calcite/interpreter/Sink/end()
org/apache/calcite/interpreter/SortNode/run()#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#org/apache/calcite/sql/validate/SqlValidatorImpl/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/io/PrintWriter/println()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/VolcanoPlanner$6/VolcanoPlanner$6(org.apache.calcite.plan.volcano.VolcanoPlanner)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RelSubset/getRels()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RelSubset/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(double)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RuleQueue/getImportance(org.apache.calcite.plan.volcano.RelSubset)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#com/google/common/collect/Ordering/from(java.util.Comparator)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/RelTraitSet/satisfies(org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/RelNode/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#com/google/common/collect/Ordering/immutableSortedCopy(java.lang.Iterable)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/RelTraitSet/equals(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RelSubset/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RelSubset/getRowType()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/HashMap/HashMap(int)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/List/get(int)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/List/iterator()
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/List/size()
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Map/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/getNamespace(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#org/apache/calcite/runtime/CalciteResource/columnInUsingNotUnique(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#java/util/Collections/frequency(java.util.Collection,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/field(org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#org/apache/calcite/runtime/CalciteResource/columnNotFound(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/type/SqlOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/runtime/CalciteResource/defaultForOptionalParameter()
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/type/SqlOperandTypeChecker/isOptional(int)
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/operands()
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#java/util/List/iterator()
org/apache/calcite/sql/SqlOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getCall()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/SortedMap/keySet()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Set/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#java/util/List/size()
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#org/apache/calcite/util/Util/matches(boolean,java.lang.String,java.lang.String)
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataTypeFieldImpl/RelDataTypeFieldImpl(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#java/util/List/iterator()
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#org/apache/calcite/rel/type/DynamicRecordType/isDynamicStarColName(java.lang.String)
org/apache/calcite/rel/type/RelDataTypeHolder/getFieldOrInsert(java.lang.String,boolean)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlSelect/setSelectList(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/Set/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/expandSelectItem(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.Set,java.util.List,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/getRawSelectScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SelectScope/setExpandedSelectList(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/shouldExpandIdentifiers()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/getSelectScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNodeList/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/rel/core/AggregateCall/toString()#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/AggregateCall/toString()#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/calcite/rel/core/AggregateCall/toString()#java/util/Iterator/next()
org/apache/calcite/rel/core/AggregateCall/toString()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/AggregateCall/toString()#org/apache/calcite/sql/SqlAggFunction/getName()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/RelTraitSet/size()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/registerSubset(org.apache.calcite.plan.volcano.RelSet,org.apache.calcite.plan.volcano.RelSubset)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/addRelToSet(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/registerClass(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/RelOptUtil/getVariablesUsed(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/fixUpInputs(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/RelOptUtil/equal(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#com/google/common/collect/ImmutableList/copyOf(java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/RelTraitSet/getTrait(org.apache.calcite.plan.RelTraitDef)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/util/Util/minus(java.util.Set,java.util.Set)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Deque/peek()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/key(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/RelOptUtil/getVariablesSet(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/Double/valueOf(double)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSet/obliterateRelNode(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RuleQueue/recompute(org.apache.calcite.plan.volcano.RelSubset)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSet/RelSet(int,java.util.Set,java.util.Set)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getDigest()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/RelOptCluster/getPlanner()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/fireRules(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/checkForSatisfiedConverters(org.apache.calcite.plan.volcano.RelSet,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSet(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/isRegistered(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/List/size()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RuleQueue/recompute(org.apache.calcite.plan.volcano.RelSubset,boolean)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Deque/isEmpty()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getVariablesSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/convert/Converter/getInput()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/merge(org.apache.calcite.plan.volcano.RelSet,org.apache.calcite.plan.volcano.RelSet)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/Convention/getInterface()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSubset/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/recomputeDigest()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner$RuleProvenance/VolcanoPlanner$RuleProvenance(org.apache.calcite.plan.RelOptRule,com.google.common.collect.ImmutableList,int)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/util/ArrayList/ArrayList()
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/lang/String/split(java.lang.String)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/util/List/size()
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/lang/Class/cast(java.lang.Object)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#org/apache/calcite/config/CalciteConnectionProperty/wrap(java.util.Properties)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#org/apache/calcite/sql/util/ChainedSqlOperatorTable/of(org.apache.calcite.sql.SqlOperatorTable%5B%5D)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#org/apache/calcite/avatica/ConnectionConfigImpl$PropEnv/getString()
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#org/apache/calcite/config/CalciteConnectionConfigImpl/operatorTable(java.lang.String)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/util/List/toArray(java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#java/util/EnumMap/EnumMap(java.lang.Class)
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#com/google/common/collect/Ordering/from(java.util.Comparator)
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#java/util/HashMap/HashMap()
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#java/util/Set/isEmpty()
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#org/apache/calcite/plan/volcano/VolcanoPlannerPhase/values()
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#org/apache/calcite/plan/volcano/RuleQueue$RelImportanceComparator/RuleQueue$RelImportanceComparator(org.apache.calcite.plan.volcano.RuleQueue,org.apache.calcite.plan.volcano.RuleQueue$1)
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#org/apache/calcite/plan/volcano/VolcanoPlannerPhaseRuleMappingInitializer/initialize(java.util.Map)
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#java/util/HashSet/HashSet()
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#org/apache/calcite/plan/volcano/VolcanoPlanner/getPhaseRuleMappingInitializer()
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#java/lang/Object/Object()
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#org/apache/calcite/plan/volcano/RuleQueue$PhaseMatchList/RuleQueue$PhaseMatchList(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)
org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#org/apache/calcite/linq4j/Ord/zip(java.lang.Object%5B%5D)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/Class/getName()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/java/JavaTypeFactory/getJavaClass(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/sql/SqlIntervalQualifier/getFractionalSecondPrecision(org.apache.calcite.rel.type.RelDataTypeSystem)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/java/JavaTypeFactory/getTypeSystem()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/RexImpTable/optimize2(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/type/RelDataType/getIntervalQualifier()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/sql/type/SqlTypeName/getEndUnit()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#java/lang/Math/pow(double,double)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/lang/Long/valueOf(long)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/List/size()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/List/get(int)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#org/apache/calcite/avatica/Meta$ExecuteBatchResult/Meta$ExecuteBatchResult(long%5B%5D)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/List/iterator()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#com/google/common/primitives/Longs/toArray(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#java/util/List/contains(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/flatten(java.util.List,int,int%5B%5D,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#java/util/List/size()
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#org/apache/calcite/util/Util/matches(boolean,java.lang.String,java.lang.String)
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#java/util/List/get(int)
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#java/util/List/iterator()
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataTypeImpl$Slot/RelDataTypeImpl$Slot(org.apache.calcite.rel.type.RelDataTypeImpl$1)
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexFieldAccess/getType()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexFieldAccess/getReferenceExpr()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/plan/RelOptUtil/eq(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexVisitorImpl/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexFieldAccess/getField()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/util/List/size()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/util/Litmus/succeed()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexChecker/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/util/List/get(int)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/materialize/Lattice$Builder/build()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/materialize/Lattice$Builder/rowCountEstimate(double)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/model/ModelHandler/currentSchema()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/materialize/Lattice$Builder/auto(boolean)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/materialize/Lattice$Builder/statisticProvider(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/model/ModelHandler/populateLattice(org.apache.calcite.model.JsonLattice,org.apache.calcite.materialize.Lattice$Builder)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/jdbc/CalciteSchema/from(org.apache.calcite.schema.SchemaPlus)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/schema/SchemaPlus/isMutable()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#java/lang/Double/doubleValue()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/schema/SchemaPlus/add(java.lang.String,org.apache.calcite.materialize.Lattice)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/materialize/Lattice$Builder/algorithm(boolean)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/model/ModelHandler/currentSchemaName()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/model/JsonLattice/getSql()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonLattice)#org/apache/calcite/materialize/Lattice/builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/externalize/RelJsonWriter/explainInputs(java.util.List)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/externalize/RelJsonWriter/put(java.util.Map,java.lang.String,java.lang.Object)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Integer/toString(int)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/size()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/size()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/JsonBuilder/map()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Object/getClass()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/externalize/RelJson/classToTypeName(java.lang.Class)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/PrintWriter/flush()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/StringWriter/StringWriter()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/equals(java.lang.Object)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptListener$RelChosenEvent/RelOptListener$RelChosenEvent(java.lang.Object,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/RelSubset/access$100()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner$DirectProvenance/VolcanoPlanner$DirectProvenance(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/Class/getName()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptPlanner$CannotPlanException/RelOptPlanner$CannotPlanException(java.lang.String)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/RelSubset/getDescription()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/StringWriter/toString()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/Object/getClass()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptListener/relChosen(org.apache.calcite.plan.RelOptListener$RelChosenEvent)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlInfixOperator/needsSpace()
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/iterator()
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlInfixOperator/getLeftPrec()
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlInfixOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/setNeedWhitespace(boolean)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#org/apache/calcite/util/PartiallyOrderedSet/getDescendants(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/size()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Map/values()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#org/apache/calcite/util/PartiallyOrderedSet$Ordering/lessThan(java.lang.Object,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/get(int)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/contains(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#org/apache/calcite/util/PartiallyOrderedSet/distanceRecurse(java.util.Map,org.apache.calcite.util.PartiallyOrderedSet$Node,int)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#org/apache/calcite/util/PartiallyOrderedSet/getAncestors(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/HashMap/HashMap()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Collection/iterator()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#java/util/List/remove(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#org/apache/calcite/rex/RexUtil$ExprSimplifier/RexUtil$ExprSimplifier(org.apache.calcite.rex.RexBuilder,boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#org/apache/calcite/rex/RexUtil$ExprSimplifier/apply(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/getNamespace(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlSelect/getSelectList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlSelect/getModifierNode(org.apache.calcite.sql.SqlSelectKeyword)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlSelect/isDistinct()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorNamespace/unwrap(java.lang.Class)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/runtime/CalciteResource/selectMissingFrom()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateWhereClause(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getEnclosingNode()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateFrom(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/isCaseSensitive()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateHavingClause(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SelectScope/getChildNames()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/runtime/CalciteResource/fromAliasDuplicate(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/runtime/CalciteResource/sQLFeature_E051_01()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/isStar()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlSelect/getFrom()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNode/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/getFromScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/firstDuplicate(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SelectNamespace/setType(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl$1/SqlValidatorImpl$1(org.apache.calcite.sql.validate.SqlValidatorImpl)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateFeature(org.apache.calcite.runtime.Feature,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelect(org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlConformance/isFromRequired()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/lang/Integer/intValue()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#com/google/common/collect/ImmutableSortedMap/of()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#org/apache/calcite/util/ImmutableBitSet/length()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/lang/Math/max(int,int)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/size()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/values()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#org/apache/calcite/util/ImmutableBitSet$Closure/access$000(org.apache.calcite.util.ImmutableBitSet$Closure)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#org/apache/calcite/util/ImmutableBitSet$Closure/ImmutableBitSet$Closure(java.util.SortedMap)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/lastKey()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/lang/Integer/valueOf(int)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/firstKey()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/Collection/iterator()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/isEmpty()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/TreeMap/TreeMap()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/Iterator/next()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/NlsString/concat(java.util.List)#org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/String/length()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/List/size()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/StringBuilder/StringBuilder(int)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/List/get(int)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/List/iterator()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/util/NlsString/concat(java.util.List)#org/apache/calcite/sql/SqlCollation/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/generateAccessor(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/comparer()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableJoin/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/project(java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferArray()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MaterializedViewJoinRule/getFieldIndex(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#java/util/List/size()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rex/RexNode/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#java/util/TreeMap/TreeMap()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getJoinFilter()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#java/util/List/get(int)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/plan/RelOptUtil/disjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#java/util/List/iterator()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rex/RexUtil/toCnf(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/util/ImmutableBitSet/of(int%5B%5D)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/avatica/util/TimeUnit/ordinal()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/type/SqlOperandTypeChecker$Consistency/values()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/type/SqlTypeFamily/values()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/type/SqlOperandTypeChecker$Consistency/ordinal()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/avatica/util/TimeUnit/values()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/fun/SqlBetweenOperator$Flag/values()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/SqlKind/values()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/type/SqlTypeName/values()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/type/SqlTypeName/ordinal()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/SqlKind/ordinal()
java+initializer:///org/apache/calcite/sql2rel/StandardConvertletTable$16/StandardConvertletTable$16$initializer#org/apache/calcite/sql/fun/SqlBetweenOperator$Flag/ordinal()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/SingleRel/SingleRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelTraitSet/containsIfApplicable(org.apache.calcite.plan.RelTrait)
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/isEmpty()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/rel/core/Sort/Sort(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/math/BigDecimal/scale()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/String/length()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/String/substring(int,int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/math/BigDecimal/signum()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/String/substring(int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/Math/min(int,int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/String/charAt(int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/math/BigDecimal/unscaledValue()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/math/BigInteger/toString()
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeNullLiteral(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/access$400(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable$7/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getValidator()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makePlus(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeDivide(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/powerOfTen(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeCase(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/decodeValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeExactLiteral(long)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericPrecision()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeScaleFactor(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeIsPositive(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/jdbc/CalcitePrepare$Context/getTypeFactory()
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/jdbc/CalcitePrepare$CalciteSignature/CalcitePrepare$CalciteSignature(java.lang.String,java.util.List,java.util.Map,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.avatica.Meta$CursorFactory,java.util.List,long,org.apache.calcite.runtime.Bindable,org.apache.calcite.avatica.Meta$StatementType)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/adapter/java/JavaTypeFactory/builder()
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/sql/SqlUtil/deriveAliasFromOrdinal(int)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/avatica/Meta$CursorFactory/deduce(java.util.List,java.lang.Class)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/prepare/CalcitePrepareImpl$3/CalcitePrepareImpl$3(org.apache.calcite.prepare.CalcitePrepareImpl,java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableSemiJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getInputs()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getCondition()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getConvention()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getInputs()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getVariablesSet()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getTraitSet()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/canJoinOnCondition(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/getOutTrait()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoin/JdbcRules$JdbcJoin(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getConvention()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCluster()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/schema/impl/MaterializedViewTable/create(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,java.util.List,java.util.List,java.lang.String,boolean)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/append(int)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/model/ModelHandler/currentSchema()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/schema/SchemaPlus/isMutable()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/jdbc/CalciteSchema/path(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/jdbc/CalciteSchema/from(org.apache.calcite.schema.SchemaPlus)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/schema/SchemaPlus/getTableNames()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/schema/SchemaPlus/add(java.lang.String,org.apache.calcite.schema.Function)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/util/Set/size()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/model/JsonMaterialization/getSql()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/model/ModelHandler/currentSchemaName()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumJoinFactors()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/intersects(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule$JoinVertex/access$100(org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule$JoinVertex)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/io/PrintWriter/println(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/rebuild()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/io/PrintWriter/println()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/previousClearBit(int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/remove()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.util.mapping.Mappings$TargetMapping)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule$LeafVertex/access$000(org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule$LeafVertex)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule$LeafVertex/MultiJoinOptimizeBushyRule$LeafVertex(int,org.apache.calcite.rel.RelNode,double,int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/merge(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.util.mapping.Mappings$TargetMapping)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumTotalFields()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin$Edge/LoptMultiJoin$Edge(org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule$JoinVertex/access$200(org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule$JoinVertex)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/offsetTarget(org.apache.calcite.util.mapping.Mappings$TargetMapping,int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule$JoinVertex/MultiJoinOptimizeBushyRule$JoinVertex(int,int,int,org.apache.calcite.util.ImmutableBitSet,double,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFactor(int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMdUtil/guessSelectivity(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule$1/MultiJoinOptimizeBushyRule$1(org.apache.calcite.rel.rules.MultiJoinOptimizeBushyRule,java.util.List)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Double/doubleValue()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/removeAll(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/addAll(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/toArray()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/offsetSource(org.apache.calcite.util.mapping.Mappings$TargetMapping,int,int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin/createEdge(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFilters()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/chooseBestEdge(java.util.List,java.util.Comparator)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/of(int%5B%5D)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/runtime/CalciteResource/notSelectDistinctExpr(java.lang.String)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall,boolean,org.apache.calcite.sql.util.SqlBasicVisitor$ArgHandler)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/toString()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/util/SqlBasicVisitor$ArgHandlerImpl/instance()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidatorScope/lookupWindow(java.lang.String)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#java/util/Deque/pop()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWindow/getPartitionList()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlSelect/getSelectList()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWindow/getOrderList()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#java/util/Deque/peek()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/isAggregator()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidatorImpl/expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/AggChecker/isGroupExpr(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/accept(org.apache.calcite.sql.util.SqlVisitor)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/isA(java.util.Set)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNodeList/accept(org.apache.calcite.sql.util.SqlVisitor)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidatorScope/getOperandScope(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidatorImpl/getOriginal(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/AggChecker/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidatorScope/getNode()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/rules/JoinToMultiJoinRule$InputReferenceCounter/JoinToMultiJoinRule$InputReferenceCounter(org.apache.calcite.rel.rules.JoinToMultiJoinRule,int%5B%5D)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map/entrySet()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/util/ImmutableIntList/of(int%5B%5D)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#%5BI/clone()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableSort/access$1100(org.apache.calcite.plan.SubstitutionVisitor$MutableSort)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getVariablesSet()
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,boolean,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/access$600(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/access$1000(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableSort/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableValues/of(org.apache.calcite.rel.core.Values)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getCondition()
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getRight()
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getJoinType()
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/access$800(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableScan/of(org.apache.calcite.rel.core.TableScan)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/access$900(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/of(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableSort/access$1300(org.apache.calcite.plan.SubstitutionVisitor$MutableSort)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getLeft()
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableSort/access$1200(org.apache.calcite.plan.SubstitutionVisitor$MutableSort)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRelType/ordinal()
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/copyMutables(java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableUnion/of(java.util.List,boolean)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/access$700(org.apache.calcite.plan.SubstitutionVisitor$MutableFilter)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/deep()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/math/BigDecimal/BigDecimal(double,java.math.MathContext)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/util/Calendar/add(int,int)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Long/longValue()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/nio/charset/Charset/name()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/math/BigDecimal/stripTrailingZeros()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/util/Calendar/getInstance(java.util.TimeZone)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/math/BigDecimal/BigDecimal(long)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/intValue()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/util/Calendar/setTimeInMillis(long)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Number/doubleValue()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Number/longValue()
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexUtil$FixNullabilityShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#java/util/List/size()
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#org/apache/calcite/util/graph/Graphs/predecessorListOf(org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#java/util/List/get(int)
org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)#java/util/List/iterator()
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/adapter/clone/ColumnLoader/nextPowerOf2(int)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/canBeLong(java.lang.Object)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/adapter/clone/ArrayTable$PrimitiveArray/ArrayTable$PrimitiveArray(int,org.apache.calcite.linq4j.tree.Primitive,org.apache.calcite.linq4j.tree.Primitive)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseFixedRep(int,org.apache.calcite.linq4j.tree.Primitive,long,long)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/adapter/clone/ArrayTable$ObjectArray/ArrayTable$ObjectArray(int)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/linq4j/tree/Primitive/ofBox(java.lang.reflect.Type)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/linq4j/tree/Primitive/of(java.lang.reflect.Type)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/toLong(java.lang.Object)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/adapter/clone/ColumnLoader/log2(int)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/ArrayTable$ObjectDictionary(int,org.apache.calcite.adapter.clone.ArrayTable$Representation)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#org/apache/calcite/linq4j/tree/Primitive/ordinal()
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#java/util/List/size()
org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/chooseRep(int)#java/util/Map/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#org/apache/calcite/sql2rel/SqlToRelConverter/createBlackboard(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.Map,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#org/apache/calcite/sql/validate/ParameterScope/ParameterScope(org.apache.calcite.sql.validate.SqlValidatorImpl,java.util.Map)
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#java/util/Set/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#java/util/Map/entrySet()
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode,java.util.Map)#java/util/HashMap/HashMap()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/operand(int)
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/util/List/size()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/next()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlOperatorBinding/isOperandNull(int,boolean)
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/runtime/CalciteResource/nullIllegal()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/util/List/get(int)
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/runtime/CalciteResource/needSameTypeParameter()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandCount()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/getOperandList(int)
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/lang/Integer/intValue()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#java/util/List/iterator()
org/apache/calcite/sql/type/SameOperandTypeExceptLastOperandChecker/checkOperandTypesImpl(org.apache.calcite.sql.SqlOperatorBinding,boolean,org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/newValidationError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/HashSet/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator/access$1700(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator/access$1100(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalCorrelate)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator/access$1000(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator/access$400(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/plan/RelOptPlanner/getRoot()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator/access$200(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalCorrelate/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.sql.SemiJoinType)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$100(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/HashSet/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalCorrelate/getCorrelationId()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRequiredColumns()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#java/lang/Class/getMethods()
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#com/google/common/collect/ImmutableMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#com/google/common/collect/ImmutableMultimap/builder()
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#com/google/common/collect/ImmutableMultimap$Builder/build()
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#org/apache/calcite/adapter/java/ReflectiveSchema$MethodTableMacro/ReflectiveSchema$MethodTableMacro(org.apache.calcite.adapter.java.ReflectiveSchema,java.lang.reflect.Method)
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#java/lang/reflect/Method/getReturnType()
org/apache/calcite/adapter/java/ReflectiveSchema/getFunctionMultimap()#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/iterator()
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/fun/SqlColumnListConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(java.lang.String,java.lang.String)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#java/lang/Integer/intValue()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/interpreter/Sink/send(org.apache.calcite.interpreter.Row)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/interpreter/AggregateNode/access$600(org.apache.calcite.interpreter.AggregateNode)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#java/util/Map$Entry/getKey()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/util/ImmutableBitSet/get(int)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#java/util/Iterator/next()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/interpreter/Row/getObject(int)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#java/util/Map$Entry/getValue()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/interpreter/Row$RowBuilder/build()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#java/util/Map/entrySet()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/interpreter/Row$RowBuilder/set(int,java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/interpreter/AggregateNode/access$500(org.apache.calcite.interpreter.AggregateNode)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#java/util/Set/iterator()
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/interpreter/Row/newBuilder(int)
org/apache/calcite/interpreter/AggregateNode$Grouping/end(org.apache.calcite.interpreter.Sink)#org/apache/calcite/interpreter/AggregateNode$AccumulatorList/end(org.apache.calcite.interpreter.Row$RowBuilder)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/getColumnReferenceExpansion()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlWindow/isRows()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/orderbyShouldNotContainOver()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNode/accept(org.apache.calcite.sql.util.SqlVisitor)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/overMissingOrderBy()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/rankWithFrame()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/compoundOrderByProhibitsRange()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/resolveWindow(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,boolean)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/setColumnReferenceExpansion(boolean)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/next()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/partitionbyShouldNotContainOver()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlWindow/isAllowPartial()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/funcNeedsOrderBy()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorUtil/containsMonotonic(org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/cannotUseDisallowPartialWithRange()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlOperator/requiresOrder()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlOperator/allowsFraming()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/SqlWindow/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNode/validateExpr(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/sql2rel/RelDecorrelator/removeCorrelationExpr(org.apache.calcite.rex.RexNode,boolean,java.util.Set)
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rel/logical/LogicalProject/getNamedProjects()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,boolean)
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rel/core/Correlate/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rel/core/Correlate/getLeft()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rex/RexInputRef/of2(int,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/runtime/CalciteResource/streamSetOpInconsistentInputs()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/runtime/CalciteResource/cannotStreamValues()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/isA(java.util.Set)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/deduceModality(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlModality/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/clone(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlSelect/SqlSelect(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUpdate/getAlias()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/IdentifierNamespace/IdentifierNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUpdate/getCondition()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUpdate/getTargetTable()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlMerge/SqlMerge(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlInsert,org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/getSelfJoinExprForUpdate(org.apache.calcite.sql.SqlNode,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/add(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorUtil/addAlias(org.apache.calcite.sql.SqlNode,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUpdate/setAlias(org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlBinaryOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/IdentifierNamespace/getRowType()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUpdate/getParserPosition()
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#java/util/List/size()
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rex/RexBuilder/nullableArgs(java.util.List,java.util.List)
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/copy(java.util.List,int)
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/SqlUtil/translateCharacterSetName(java.lang.String)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/allowsNoPrecNoScale()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecNoScale()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createMultisetType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/nio/charset/Charset/forName(java.lang.String)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecScale(boolean,boolean)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/util/Util/unexpected(java.lang.Enum)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/getDefaultCharset()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/get(java.lang.String)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SubQueryRemoveRule$2/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getRowType()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SubQueryRemoveRule$ReplaceSubQueryShuttle/SubQueryRemoveRule$ReplaceSubQueryShuttle(org.apache.calcite.rex.RexSubQuery,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SubQueryRemoveRule/access$100(org.apache.calcite.tools.RelBuilder,int)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil$SubQueryFinder/find(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getVariablesSet()
org/apache/calcite/rel/rules/SubQueryRemoveRule$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/makeMultiply(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#java/math/BigDecimal/pow(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/makeApproxLiteral(java.math.BigDecimal)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/makeDivide(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/scaleDown(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/accessValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/useDoubleMultiplication(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl$SyntheticRecordType/JavaTypeFactoryImpl$SyntheticRecordType(org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.jdbc.JavaTypeFactoryImpl$1)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/lang/StringBuilder/append(int)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl$RecordFieldImpl/JavaTypeFactoryImpl$RecordFieldImpl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType,java.lang.String,java.lang.reflect.Type,boolean,int)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/Iterator/next()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/List/iterator()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/rel/type/RelRecordType/getFieldCount()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/rel/type/RelRecordType/getFieldList()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/register(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/Map/size()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/util/Util/range(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumJoinFactors()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/computeScore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.SemiJoin)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/core/SemiJoin/getRightKeys()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Set/iterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/core/SemiJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/removeJoin(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.core.SemiJoin,int,int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#com/google/common/collect/Ordering/immutableSortedCopy(java.lang.Iterable)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/core/SemiJoin/getLeftKeys()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/keySet()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/removePossibleSemiJoin(java.util.Map,java.lang.Integer,java.lang.Integer)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/core/SemiJoin/getCondition()
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/DateRangeRules$ExtractShuttle(org.apache.calcite.rex.RexBuilder,org.apache.calcite.avatica.util.TimeUnitRange,java.util.Map)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCluster()
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilderFactory/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/eq(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/DateRangeRules/extractTimeUnits(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/DateRangeRules$FilterDateRangeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/target(com.google.common.base.Function,int,int)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getTraitSet()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateFilterTransposeRule$1/AggregateFilterTransposeRule$1(org.apache.calcite.rel.rules.AggregateFilterTransposeRule,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/union(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/SubstitutionVisitor/getRollup(org.apache.calcite.sql.SqlAggFunction)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/indexOf(int)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/withTrimUnusedFields(boolean)
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#java/util/List/isEmpty()
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/prepare/Prepare/getSqlToRelConverter(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.prepare.Prepare$CatalogReader,org.apache.calcite.sql2rel.SqlToRelConverter$Config)
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/sql2rel/SqlToRelConverter/trimUnusedFields(boolean,org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/rel/RelRoot/withRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/prepare/Prepare/getSqlValidator()
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/build()
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#java/util/EnumSet/contains(java.lang.Object)
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/util/TryThreadLocal/get()
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/prepare/Prepare/shouldTrim(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/sql2rel/SqlToRelConverter/configBuilder()
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#java/lang/Boolean/booleanValue()
org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/withExpand(boolean)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/String/charAt(int)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/Integer/toString(int)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/String/length()
org/apache/calcite/rel/core/Correlate/deriveRowType()#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/rel/logical/LogicalJoin/deriveRowType()
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/sql/SemiJoinType/ordinal()
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/rel/core/Correlate/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinRel()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptJoinTree/getJoinTree()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getRightColumnMapping(int,int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/tools/RelBuilder/filter(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/isRightFactorInRemovableSelfJoin(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getOtherSelfJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumJoinFactors()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinFields()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptJoinTree/getTreeOrder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumFieldsInJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getPostJoinFilter()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/List/get(int)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/interpreter/AggregateNode$3/AggregateNode$3(org.apache.calcite.interpreter.AggregateNode,org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,org.apache.calcite.adapter.enumerable.AggImpState,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.ParameterExpression)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/adapter/java/JavaTypeFactory/createJavaType(java.lang.Class)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/interpreter/AggregateNode$1/AggregateNode$1(org.apache.calcite.interpreter.AggregateNode,org.apache.calcite.interpreter.AggregateNode$AccumulatorFactory,org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/adapter/enumerable/AggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/List/size()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/Iterator/next()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/adapter/enumerable/AggImpState/AggImpState(int,org.apache.calcite.rel.core.AggregateCall,boolean)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/List/iterator()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/adapter/java/JavaTypeFactory/builder()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/adapter/enumerable/PhysType/fieldReference(org.apache.calcite.linq4j.tree.Expression,int)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/interpreter/AggregateNode$UdaAccumulatorFactory/AggregateNode$UdaAccumulatorFactory(org.apache.calcite.schema.impl.AggregateFunctionImpl,org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/interpreter/AggregateNode$2/AggregateNode$2(org.apache.calcite.interpreter.AggregateNode,org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/interpreter/AggregateNode$ScalarAccumulatorDef/AggregateNode$ScalarAccumulatorDef(org.apache.calcite.interpreter.Scalar,org.apache.calcite.interpreter.Scalar,org.apache.calcite.interpreter.Scalar,int,int,org.apache.calcite.DataContext,org.apache.calcite.interpreter.AggregateNode$1)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableInterpreter/getInput()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getRootExpression()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableInterpreter/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/close()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#org/apache/calcite/runtime/ResultSetEnumerable$ResultSetEnumerator/ResultSetEnumerable$ResultSetEnumerator(java.sql.ResultSet,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Connection/createStatement()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/setQueryTimeout(int)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Connection/close()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#org/apache/calcite/linq4j/Linq4j/singletonEnumerator(java.lang.Object)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/Integer/valueOf(int)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/getUpdateCount()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/execute(java.lang.String)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#javax/sql/DataSource/getConnection()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/StringBuilder/toString()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/getResultSet()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/util/ArrayList/ArrayList()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#org/apache/calcite/util/ReflectiveVisitDispatcher/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.util.List)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/Object/getClass()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/IdentifierNamespace/IdentifierNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlNode/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorUtil/addAlias(org.apache.calcite.sql.SqlNode,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/JoinNamespace/JoinNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlJoin)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerSubQueries(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/TableScope/TableScope(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerNamespace(org.apache.calcite.sql.validate.SqlValidatorScope,java.lang.String,org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlJoin/getLeft()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/isLateral(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/JoinType/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/shouldExpandIdentifiers()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/JoinScope/JoinScope(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlJoin)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/shouldAllowOverRelation()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/util/Util/unexpected(java.lang.Enum)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlJoin/getCondition()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/TableScope/meetLateral()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlCall/setOperand(int,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/AliasNamespace/AliasNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/TableScope/addChild(org.apache.calcite.sql.validate.SqlValidatorNamespace,java.lang.String,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlJoin/setLeft(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/OverScope/OverScope(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlJoin/getRight()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlJoin/getJoinType()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/deriveAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlJoin/setRight(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/fun/SqlInOperator/anyNullable(java.util.List)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/type/SqlTypeUtil/promoteToRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/ExplicitOperatorBinding/ExplicitOperatorBinding(org.apache.calcite.sql.SqlOperatorBinding,java.util.List)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/setValidatedNodeType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getTypeFactory()
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/runtime/CalciteResource/incompatibleTypesInList()
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/type/ComparableOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/runtime/CalciteResource/incompatibleValueType(java.lang.String)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCallBinding/SqlCallBinding(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlInOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlBinaryOperator/getName()
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlIntervalQualifier/getStartUnit()
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/IntervalSqlType/getIntervalQualifier()
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/avatica/util/TimeUnit/ordinal()
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/IntervalSqlType/isNullable()
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/fun/SqlStdOperatorTable$1/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#java/lang/String/toUpperCase()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#org/apache/calcite/sql/parser/SqlParserUtil$ParsedCollation/getCharset()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#java/lang/String/length()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#org/apache/calcite/sql/parser/SqlParserUtil$ParsedCollation/getLocale()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#java/nio/charset/Charset/name()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#org/apache/calcite/sql/parser/SqlParserUtil$ParsedCollation/getStrength()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#java/util/Locale/toString()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#java/lang/Object/Object()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlCollation/SqlCollation(java.lang.String,org.apache.calcite.sql.SqlCollation$Coercibility)#org/apache/calcite/util/SerializableCharset/forCharset(java.nio.charset.Charset)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/util/List/iterator()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/TreeMap/TreeMap(java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Map/putAll(java.util.Map)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/logical/LogicalJoin/getInput(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/ImmutableSortedMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/sql2rel/RelDecorrelator/decorrelateExpr(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/sql2rel/RelDecorrelator/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.Map,java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/logical/LogicalJoin/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/sql2rel/RelDecorrelator/getInvoke(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/avatica/util/TimeUnit/ordinal()
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlLiteral/symbolValue(java.lang.Class)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getTypeFactory()
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlIntervalType(org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/type/SqlTypeUtil/containsNullable(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIntervalQualifier/SqlIntervalQualifier(org.apache.calcite.avatica.util.TimeUnit,org.apache.calcite.avatica.util.TimeUnit,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/StandardConvertletTable$TimestampDiffConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/util/Map/get(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/util/Map/size()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#org/apache/calcite/linq4j/tree/Expressions/variable(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataType/getValueType()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataType/getKeyType()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/addAll(java.lang.Iterable)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/util/List/iterator()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/sql/SqlUtil/deriveAliasFromOrdinal(int)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/sql/SqlAggFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/lookupOrAdd(java.util.List,java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/getFieldType(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/Aggregate$AggCallBinding/Aggregate$AggCallBinding(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlAggFunction,java.util.List,int,boolean)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rex/RexBuilder/makeNullLiteral(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/util/ImmutableIntList/of(int%5B%5D)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#java/math/BigDecimal/BigDecimal(java.lang.String)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/sql/type/JavaToSqlTypeConversionRules/lookup(java.lang.Class)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$ArrayType/maximumCardinality()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$MapType/getValueType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/ofBox(java.lang.reflect.Type)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive$Flavor/ordinal()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createArrayType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/sql/type/JavaToSqlTypeConversionRules/instance()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createMapType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$ArrayType/getComponentType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/Class/isArray()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$ArrayType/componentIsNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createMultisetType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/Class/getComponentType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createStructType(java.lang.Class)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$MapType/keyIsNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$MapType/valueIsNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createJavaType(java.lang.Class)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/flavor(java.lang.reflect.Type)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$MapType/getKeyType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/Integer/intValue()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getKeyType()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/next()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/iterator()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getValueType()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/util/Util/range(int)
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/addAll(java.lang.Iterable)
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/get(int)
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandCount()
org/apache/calcite/sql/SqlUnnestOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlUtil/deriveAliasFromOrdinal(int)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl$5/RelDataTypeFactoryImpl$5(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,java.util.List,int)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#java/util/List/size()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl/builder()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictive(java.util.List)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/tools/RelBuilder/fields(int,int)#org/apache/calcite/util/Util/range(int)
org/apache/calcite/tools/RelBuilder/fields(int,int)#java/lang/Integer/intValue()
org/apache/calcite/tools/RelBuilder/fields(int,int)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/tools/RelBuilder/fields(int,int)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/tools/RelBuilder/fields(int,int)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/fields(int,int)#org/apache/calcite/tools/RelBuilder/field(int,int,int)
org/apache/calcite/tools/RelBuilder/fields(int,int)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/tools/RelBuilder/fields(int,int)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/fields(int,int)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/fields(int,int)#org/apache/calcite/tools/RelBuilder/peek(int,int)
org/apache/calcite/tools/RelBuilder/fields(int,int)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/tools/RelBuilder/fields(int,int)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/cache/LoadingCache/getUnchecked(java.lang.Object)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/build()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/next()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap/containsKey(java.lang.Object)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/lang/System/currentTimeMillis()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#org/apache/calcite/jdbc/CachingCalciteSchema$Cached/get(long)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitSubSchemaToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/NavigableSet/iterator()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/getAggCallList()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#java/lang/Integer/intValue()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/util/ImmutableBitSet/asList()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/plan/SubstitutionVisitor$MutableRels/createCastRel(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,boolean,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#java/lang/AssertionError/AssertionError(boolean)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/getGroupSet()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/plan/SubstitutionVisitor/getRollup(org.apache.calcite.sql.SqlAggFunction)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/getRowType()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/plan/SubstitutionVisitor$MutableRels/createProject(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/getGroupType()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate,org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/access$800(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ProjectRemoveRule/isTrivial(org.apache.calcite.rel.core.Project)
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getTraitSet()
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ProjectRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/sql/SqlLiteral/getValue()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/runtime/CalciteResource/currentRowFollowingError()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/runtime/CalciteResource/badUpperBoundary()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/sql/SqlWindow/getUpperBound()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/sql/SqlWindow/getLowerBound()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/runtime/CalciteResource/followingBeforePrecedingError()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/runtime/CalciteResource/badLowerBoundary()
org/apache/calcite/sql/SqlWindow/checkSpecialLiterals(org.apache.calcite.sql.SqlWindow,org.apache.calcite.sql.validate.SqlValidator)#org/apache/calcite/runtime/CalciteResource/currentRowPrecedingError()
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/hep/HepRelVertex/HepRelVertex(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getDigest()
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/hep/HepPlanner/onCopy(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Util/equalShallow(java.util.List,java.util.List)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/util/graph/DirectedGraph/addVertex(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)#org/apache/calcite/util/graph/DirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/size()
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/prepare/CalcitePrepareImpl/metaData(org.apache.calcite.adapter.java.JavaTypeFactory,int,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/get(int)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/lang/StringBuilder/append(java.lang.CharSequence)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/materialize/Lattice/use(java.util.List,org.apache.calcite.materialize.Lattice$Node)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/util/ImmutableBitSet/intersects(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/util/List/iterator()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/util/Iterator/next()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/rel/core/TableScan/getTable()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/sql/SqlDialect$DatabaseProduct/getDialect()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/sql/SqlDialect/quoteIdentifier(java.lang.StringBuilder,java.lang.String)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/util/ImmutableBitSet/rebuild()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/sql/SqlDialect/quoteIdentifier(java.lang.StringBuilder,java.util.List)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/sql/SqlAggFunction/getName()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#org/apache/calcite/materialize/Lattice$Column/identifiers()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#org/apache/calcite/jdbc/CalciteSchema$FunctionEntry/getFunction()
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#org/apache/calcite/jdbc/CalciteSchema/find(java.util.NavigableSet,java.lang.String)
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#java/lang/Iterable/iterator()
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#org/apache/calcite/jdbc/CalciteSchema/addImplicitFunctionToBuilder(com.google.common.collect.ImmutableList$Builder)
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#java/util/Collection/iterator()
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#org/apache/calcite/schema/Schema/getFunctions(java.lang.String)
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/jdbc/CalciteSchema/getFunctions(java.lang.String,boolean)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableCorrelate/EnumerableCorrelate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.sql.SemiJoinType)
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getLeft()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getRight()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getCorrelationId()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getRequiredColumns()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/flattenComparison(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/removeDistinct(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/access$400(org.apache.calcite.sql2rel.RelStructuredTypeFlattener)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexShuttle/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(java.util.Collection)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/sql2rel/RelDecorrelator/removeCorrelationExpr(org.apache.calcite.rex.RexNode,boolean,org.apache.calcite.rex.RexInputRef)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalJoin/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalProject/getNamedProjects()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,boolean)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rex/RexInputRef/of2(int,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalJoin/getCluster()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#org/apache/calcite/adapter/enumerable/PhysType/generateCollationKey(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#org/apache/calcite/rex/RexWindowBound/isUnbounded()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression,boolean)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#org/apache/calcite/rel/core/Window$Group/collation()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeName/equals(java.lang.Object)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecNoScale()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/iterator()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/collectOperandTypes()
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/prepare/RelOptTableImpl/create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.schema.Table,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/stream/Delta/getCluster()
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/TableScan/getTable()
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableScan/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/schema/StreamableTable/stream()
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptTable/getRelOptSchema()
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/stream/StreamRules$DeltaTableScanRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#org/apache/calcite/util/mapping/Mapping/getSource(int)
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#org/apache/calcite/tools/RelBuilder/field(int)
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#org/apache/calcite/util/mapping/Mapping/getMappingType()
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#org/apache/calcite/util/mapping/MappingType/isSingleSource()
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#java/lang/AssertionError/AssertionError()
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#org/apache/calcite/util/mapping/Mapping/getTargetCount()
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#org/apache/calcite/util/mapping/MappingType/isMandatorySource()
org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)#org/apache/calcite/util/mapping/Mapping/isIdentity()
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/accessValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isDecimal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$PassThroughExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#org/apache/calcite/sql/SqlCollation/getCharset()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isAny(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/List/size()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/lang/Iterable/iterator()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/nio/charset/Charset/equals(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#org/apache/calcite/util/Pair/adjacents(java.lang.Iterable)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateUsingCol(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateFrom(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/joinRequiresCondition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorUtil/deriveNaturalJoinColumnList(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/crossJoinDisallowsCondition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlJoin/getConditionTypeNode()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/util/Util/unexpected(java.lang.Enum)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlJoin/getCondition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlJoin/getJoinType()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlJoin/isNatural()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateWhereOrOn(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/JoinType/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/getNamespace(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/JoinConditionType/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/util/Util/permAssert(boolean,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlJoin/setOperand(int,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/field(org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlJoin/getConditionType()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataType/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/naturalDisallowsOnOrUsing()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlJoin/getRight()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/naturalOrUsingColumnNotCompatible(java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateJoin(org.apache.calcite.sql.SqlJoin,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlJoin/getLeft()
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#org/apache/calcite/plan/RelOptRule/flattenOperands(org.apache.calcite.plan.RelOptRuleOperand)
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#org/apache/calcite/plan/RelOptRule/assignSolveOrder()
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#org/apache/calcite/plan/RelOptRule/guessDescription(java.lang.String)
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#java/lang/Class/getName()
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#java/lang/Object/getClass()
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#java/lang/String/matches(java.lang.String)
org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory,java.lang.String)#java/lang/Object/Object()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorUtil/getTargetField(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/runtime/CalciteResource/unknownTargetColumn(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/runtime/CalciteResource/duplicateTargetColumn(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorTable/getRowType()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlUtil/deriveAliasFromOrdinal(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexProgramBuilder/getProgram()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/addAll(java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCondition(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/java/JavaTypeFactory/builder()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/RexToLixTranslator$InputGetterImpl(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexProgramBuilder/addCondition(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/sql/type/SqlTypeFamily/getTypeNames()
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#java/lang/String/length()
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/rex/RexLiteral/valueMatchesType(java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName,boolean)
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/avatica/util/ByteString/length()
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/Iterator/next()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/List/contains(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/List/iterator()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getInput(int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/entrySet()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings$TargetMapping/inverse()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.util.mapping.Mappings$TargetMapping,java.lang.Iterable)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/union(boolean,int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/isEmpty()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getRowType()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/convert(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getCluster()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/MultiJoin(org.apache.calcite.plan.RelOptCluster,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,java.util.List,java.util.List,java.util.List,com.google.common.collect.ImmutableMap,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getJoinTypes()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/BitSet/BitSet(int)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getRowType()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getOuterJoinConditions()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getInputs()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/lang/Integer/intValue()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/isFullOuterJoin()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/BitSet/set(int)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getJoinFieldRefCountsMap()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getPostJoinFilter()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getJoinFilter()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggContext/returnType()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/ifThenElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/ParameterExpression/getType()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/hasRows()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/currentBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/accumulator()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementNotNullResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/exitBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/size()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/RexImpTable/getDefaultValue(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/nestBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#org/apache/calcite/util/Util/discard(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#java/util/List/remove(int)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/metadata/RelMdCollation/comparator(org.apache.calcite.rel.RelFieldCollation)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#com/google/common/collect/Ordering/compound(java.util.Comparator)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/RelFieldCollation/RelFieldCollation(int)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#com/google/common/collect/Ordering/isOrdered(java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#java/util/List/isEmpty()
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#java/util/List/clear()
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/values(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/RelCollations/of(java.util.List)
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/util/mapping/Mappings$TargetMapping/inverse()
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptUtil/getContext(org.apache.calcite.plan.RelOptCluster)
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/core/TableScan/getTable()
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/core/TableScan/getCluster()
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/util/mapping/Mappings/asList(org.apache.calcite.util.mapping.Mappings$TargetMapping)
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptTable/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/util/mapping/Mappings/createShiftMapping(int,int%5B%5D)
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/plan/RelOptMaterialization$1/visit(org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/rex/RexLiteral/isNullLiteral(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/decomposeDisjunction(org.apache.calcite.rex.RexNode,java.util.List)
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/rex/RexLiteral/booleanValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/isAlwaysFalse()
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#java/io/File/File(java.lang.String)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#org/apache/calcite/model/ModelHandler$ExtraOperand/ordinal()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#org/apache/calcite/model/ModelHandler$ExtraOperand/values()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#java/io/File/getParentFile()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap$Builder/putAll(java.util.Map)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/Class/getMethods()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Method/getModifiers()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Method/getReturnType()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#org/apache/calcite/runtime/Resources/zero(java.lang.Class)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/StringBuilder/toString()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/util/EnumSet/contains(java.lang.Object)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/InvocationTargetException/getCause()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/Object/getClass()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferArray()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Set/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/addAll(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getSystemFieldList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/plan/RelOptUtil$InputFinder/RelOptUtil$InputFinder(java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/getSourceCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/emptySet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/semiJoin(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/get(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getInputs()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataTypeImpl/extra(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/getTargetCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/create(org.apache.calcite.util.mapping.MappingType,int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/isIdentity()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/get(int)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#org/apache/calcite/materialize/Lattice$3/Lattice$3(org.apache.calcite.materialize.Lattice)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#java/lang/Double/valueOf(double)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/subList(int,int)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/contains(java.lang.Object)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#java/util/List/add(java.lang.Object)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#org/apache/calcite/sql/validate/SqlValidatorUtil/uniquify(java.util.List,boolean)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#org/apache/calcite/materialize/Lattice$4/Lattice$4(org.apache.calcite.materialize.Lattice)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#java/util/Iterator/next()
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#java/lang/Double/doubleValue()
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/base/Preconditions/checkArgument(boolean)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#java/lang/AssertionError/AssertionError()
org/apache/calcite/materialize/Lattice/Lattice(org.apache.calcite.jdbc.CalciteSchema,com.google.common.collect.ImmutableList,boolean,boolean,long,org.apache.calcite.materialize.LatticeStatisticProvider,java.lang.Double,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)#java/lang/Object/Object()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/util/List/size()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/rex/RexProgramBuilder/access$100(org.apache.calcite.rex.RexProgramBuilder)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/AssertionError/AssertionError(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/rex/RexProgramBuilder/access$300(org.apache.calcite.rex.RexProgramBuilder,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/plan/RelOptUtil/eq(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/util/List/get(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/rex/RexLocalRef/getType()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/deriveAlias(org.apache.calcite.sql.SqlNode,java.util.Collection,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/extraSelectItems(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.List,java.util.Collection,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql/validate/SqlValidator/expandStar(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/replaceSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/access$1000(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/setRoot(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql/SqlSelect/getSelectList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql/validate/SqlValidator/expandOrderExpr(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorUtil/uniquify(java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql/SqlNode/getMonotonicity(org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/TreeSet/TreeSet()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/prepare/Prepare$CatalogReader/isCaseSensitive()
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/mapping/Mappings/create(org.apache.calcite.util.mapping.MappingType,int,int)
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexNode/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/mapping/Mappings$TargetMapping/set(int,int)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#org/apache/calcite/rel/RelWriter/item(java.lang.String,java.lang.Object)
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#java/util/List/size()
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#java/util/List/get(int)
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#org/apache/calcite/rex/RexProgram/countTrivial(java.util.List)
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgram/collectExplainTerms(java.lang.String,org.apache.calcite.rel.RelWriter,org.apache.calcite.sql.SqlExplainLevel)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/plan/RelOptUtil/equal(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#java/util/Iterator/hasNext()
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/RelNode/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/AbstractRelNode/getInputs()
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#java/util/List/size()
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#java/util/Iterator/next()
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/AbstractRelNode/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#java/util/List/iterator()
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/plan/RelOptPlanner/ensureRegistered(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/RelNode/recomputeDigest()
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/AbstractRelNode/getTraitSet()
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/util/Util/equalShallow(java.util.List,java.util.List)
org/apache/calcite/rel/AbstractRelNode/onRegister(org.apache.calcite.plan.RelOptPlanner)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/isFlattened()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getInput()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModify/JdbcRules$JdbcTableModify(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare$CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify$Operation,java.util.List,java.util.List,boolean)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getTable()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getSourceExpressionList()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getCatalogReader()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getUpdateColumnList()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getOperation()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getCluster()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcTableModificationRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getTraitSet()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#org/apache/calcite/schema/SchemaPlus/add(java.lang.String,org.apache.calcite.schema.Function)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#org/apache/calcite/model/ModelHandler/currentMutableSchema(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#org/apache/calcite/model/JsonView/getSql()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#org/apache/calcite/model/ModelHandler/currentSchemaPath()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#org/apache/calcite/schema/impl/ViewTable/viewMacro(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.util.List,java.lang.Boolean)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/util/Litmus/succeed()
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#java/util/Iterator/next()
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#java/util/List/iterator()
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Boolean/booleanValue()
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexChecker/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableLimit/getInput()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableLimit/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rex/RexLiteral/intValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableMultimap/values()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/setLength(int)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/argList(java.lang.StringBuilder,java.lang.reflect.Method)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/indexOf(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/Class/getSimpleName()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Set/size()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getReturnType()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/Class/getName()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/linq4j/tree/ClassDeclaration/ClassDeclaration(int,java.lang.String,java.lang.reflect.Type,java.util.List,java.util.List)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getName()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(char)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableCollection/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/paramList(java.lang.StringBuilder,java.lang.reflect.Method)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/Multimap/asMap()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/Object/getClass()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/io/PrintStream/println(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/List/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Collection/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/LinkedHashMultimap/create()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Map/entrySet()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/lang/Class/getSuperclass()
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/io/IOException/IOException(java.lang.String)
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#org/apache/calcite/runtime/Resources$ShadowResourceBundle/openPropertiesFile(java.lang.Class)
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#org/apache/calcite/runtime/Resources$MyPropertyResourceBundle/Resources$MyPropertyResourceBundle(java.io.InputStream)
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/util/ResourceBundle/ResourceBundle()
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/io/InputStream/close()
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#org/apache/calcite/runtime/Resources$MyPropertyResourceBundle/setParentTrojan(java.util.ResourceBundle)
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/lang/StringBuilder/toString()
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/runtime/Resources$ShadowResourceBundle/Resources$ShadowResourceBundle()#java/lang/Object/getClass()
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolved/emptyPath()
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorScope$Path/add(org.apache.calcite.rel.type.RelDataType,int,org.apache.calcite.rel.type.StructKind)
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/subList(int,int)
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/size()
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/ListScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/matches(java.lang.String,java.lang.String)
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/iterator()
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/DelegatingScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolved/count()
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/Iterator/next()
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolved/found(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope$Path)
org/apache/calcite/sql/validate/ListScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/get(int)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(long)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/lang/Object/toString()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/ZonelessTimestamp/ZonelessTimestamp()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/runtime/Resources$StringProp/get()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/rex/RexLiteral/valueMatchesType(java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName,boolean)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/avatica/util/ByteString/toString(int)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/rex/RexLiteral/printDatetime(java.io.PrintWriter,org.apache.calcite.util.ZonelessDatetime,java.lang.Comparable)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/NlsString/asSql(boolean,boolean)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(boolean)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/ZonelessTime/ZonelessTime()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/ZonelessDate/ZonelessDate()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/rex/RexLiteral$1/RexLiteral$1(java.util.List)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(char)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(java.lang.Object)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/SaffronProperties/defaultCharset()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/math/BigDecimal/longValue()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/NlsString/getCharsetName()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/Util/printJavaString(java.io.PrintWriter,java.lang.String,boolean)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertQueryRecursive(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupGroupExpr(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/util/Util/permAssert(boolean,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getSubQuery(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/fun/SqlInOperator/isNotIn()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/SingleRel/getInput()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/access$1400(org.apache.calcite.sql2rel.SqlToRelConverter,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/StandardConvertletTable/castToValidatedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rex.RexNode,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertExtendedExpression(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidator/expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/accept(org.apache.calcite.sql.util.SqlVisitor)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/isConvertedSubq(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Config/isExpand()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexSubQuery/exists(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#com/google/common/base/Supplier/get()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/trimUnusedFields(org.apache.calcite.rel.RelRoot)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/trace/CalciteTimingTracer/traceTime(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/ImmutableIntList/identity(int)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/RelRoot/RelRoot(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlKind,java.util.List,org.apache.calcite.rel.RelCollation)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/init(java.lang.Class)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl/access$100(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/RelRoot/withRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepare_(com.google.common.base.Supplier,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/flattenTypes(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggContext/aggregation()
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/arguments()
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/unbox(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/accAdvance(org.apache.calcite.adapter.enumerable.AggAddContext,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/apache/calcite/plan/hep/HepPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/Iterable/iterator()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/append(char)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/apache/calcite/util/graph/BreadthFirstIterator/of(org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/apache/calcite/plan/hep/HepPlanner/assertNoCycles()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/toString()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#org/apache/calcite/util/graph/DirectedGraph/edgeSet()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/List/size()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Map/values()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#org/apache/calcite/util/graph/Graphs$FrozenGraph/Graphs$FrozenGraph(org.apache.calcite.util.graph.DefaultDirectedGraph,java.util.Map)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#org/apache/calcite/util/graph/DefaultDirectedGraph/source(org.apache.calcite.util.graph.DefaultEdge)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#org/apache/calcite/util/graph/DefaultDirectedGraph/target(org.apache.calcite.util.graph.DefaultEdge)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Iterator/next()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/HashMap/HashMap()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Map/keySet()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#org/apache/calcite/runtime/ConsList/of(java.lang.Object,java.util.List)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Set/iterator()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/List/iterator()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Collection/iterator()
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/toString(java.util.List,java.lang.String,boolean)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/classDecl(int,java.lang.String,java.lang.reflect.Type,java.util.List,java.util.List)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/newArrayBounds(java.lang.reflect.Type,int,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/arrayIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#java/lang/reflect/Method/getName()
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#java/lang/Integer/valueOf(int)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Values/getTuples()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Values/getRowType()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMdSize/typeValueSize(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable$MethodNameImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/avatica/util/TimeUnitRange/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/call(java.util.List,java.lang.reflect.Type,org.apache.calcite.avatica.util.TimeUnit)
org/apache/calcite/adapter/enumerable/RexImpTable$FloorImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/NumberUtil/getMinUnscaled(int)
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#java/math/BigInteger/longValue()
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/SqlTypeUtil/getMinValue(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#java/lang/String/split(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#java/util/Locale/Locale(java.lang.String,java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#java/util/StringTokenizer/nextToken()
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#java/nio/charset/Charset/forName(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#org/apache/calcite/util/SaffronProperties/defaultCollationStrength()
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#org/apache/calcite/runtime/CalciteResource/illegalLocaleFormat(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#java/util/Locale/Locale(java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#java/util/Locale/Locale(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#org/apache/calcite/runtime/Resources$ExInst/ex()
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#org/apache/calcite/runtime/Resources$StringProp/get()
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#java/util/StringTokenizer/countTokens()
org/apache/calcite/sql/parser/SqlParserUtil/parseCollation(java.lang.String)#org/apache/calcite/sql/parser/SqlParserUtil$ParsedCollation/SqlParserUtil$ParsedCollation(java.nio.charset.Charset,java.util.Locale,java.lang.String)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/collapseExpandedIsNotDistinctFromExpr(org.apache.calcite.rex.RexCall,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rex.RexBuilder,int,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptPlanner/getExecutor()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptCluster/getPlanner()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RexImplicationChecker/RexImplicationChecker(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexExecutorImpl,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RexImplicationChecker/implies(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/FunctionExpression/compile()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/util/Collections/emptyList()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl$JavaType/getJavaClass()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.BlockStatement,java.lang.Iterable)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Object/getClass()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/FunctionExpression$Invokable/dynamicInvoke(java.lang.Object%5B%5D)
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(java.lang.String,java.lang.String)
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/fun/SqlMultisetValueConstructor/getName()
org/apache/calcite/sql/fun/SqlMultisetValueConstructor/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/iterator()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#java/util/Calendar/clone()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#org/apache/calcite/rel/rules/DateRangeRules/access$400()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#org/apache/calcite/rel/rules/DateRangeRules/access$500()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#java/util/Calendar/set(int,int)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#java/util/Calendar/add(int,int)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#java/util/Calendar/compareTo(java.util.Calendar)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#java/util/Calendar/get(int)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)#com/google/common/collect/Range/contains(java.lang.Comparable)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/setDebuggingInformation(boolean,boolean,boolean)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/createInstance(java.io.Reader)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/ICompilerFactory/newClassBodyEvaluator()
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/setClassName(java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/setImplementedInterfaces(java.lang.Class%5B%5D)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/CompilerFactoryFactory/getDefaultCompilerFactory()
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/Class/getClassLoader()
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/setParentClassLoader(java.lang.ClassLoader)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/metadata/RelMetadataQuery/collations(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/clear()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/entrySet()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelFieldCollation/RelFieldCollation(int,org.apache.calcite.rel.RelFieldCollation$Direction)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/SortedSet/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelFieldCollation/copy(int)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rex/RexCallBinding/create(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/LinkedListMultimap/create()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Collection/isEmpty()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelCollations/of(java.util.List)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelFieldCollation$Direction/of(org.apache.calcite.sql.validate.SqlMonotonicity)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/sql/validate/SqlMonotonicity/ordinal()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/TreeSet/TreeSet()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/sql/SqlOperator/getMonotonicity(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/core/Filter/getTraitSet()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/hep/HepPlanner/setRoot(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/core/Filter/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptUtil/areRowTypesEqual(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/core/TableScan/getRowType()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/volcano/VolcanoPlanner/getMaterializations()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/hep/HepPlanner/HepPlanner(org.apache.calcite.plan.hep.HepProgram,org.apache.calcite.plan.Context)
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/hep/HepPlanner/findBestExp()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptPlanner/getContext()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/MaterializedViewSubstitutionVisitor/MaterializedViewSubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#java/util/List/iterator()
org/apache/calcite/rel/rules/MaterializedViewFilterScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/MaterializedViewSubstitutionVisitor/go(org.apache.calcite.rel.RelNode)
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/isAlwaysFalse()
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/addOr(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#java/lang/Math/min(double,double)
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#java/math/BigInteger/doubleValue()
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#java/math/BigInteger/valueOf(long)
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#java/util/Iterator/next()
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#org/apache/calcite/materialize/Lattice/getFactRowCount()
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#org/apache/calcite/materialize/LatticeStatisticProvider/cardinality(org.apache.calcite.materialize.Lattice,org.apache.calcite.materialize.Lattice$Column)
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#java/math/BigInteger/multiply(java.math.BigInteger)
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#java/lang/Math/pow(double,double)
org/apache/calcite/materialize/Lattice/getRowCount(java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/simplifyIsNotNull(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/op(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/negate()
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexUtil/simplifyIs2(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/compose(org.apache.calcite.rex.RexBuilder,java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/Maps/newTreeMap()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/Object/Object()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference$EquivalenceFinder/RelMdPredicates$JoinConditionBasedPredicateInference$EquivalenceFinder(org.apache.calcite.rel.metadata.RelMdPredicates$JoinConditionBasedPredicateInference)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/BitSets/of(int%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/BitSets/closure(java.util.SortedMap)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference$1/RelMdPredicates$JoinConditionBasedPredicateInference$1(org.apache.calcite.rel.metadata.RelMdPredicates$JoinConditionBasedPredicateInference,org.apache.calcite.rel.metadata.RelMdPredicates$JoinConditionBasedPredicateInference$EquivalenceFinder)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/mapping/Mappings/createShiftMapping(int,int%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getSystemFieldList()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getInput(int)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/RelMdPredicates$JoinConditionBasedPredicateInference(org.apache.calcite.rel.core.Join,boolean,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/ProcessBuilder/redirectErrorStream(boolean)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/io/OutputStream/flush()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/io/OutputStream/write(int)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/io/InputStream/read()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/io/InputStream/close()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream,int)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/Process/exitValue()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/Process/waitFor()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/Process/getInputStream()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/io/Reader/read()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#org/slf4j/Logger/info(java.lang.String)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/ProcessBuilder/start()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/ProcessBuilder/command()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream,int)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/io/Writer/write(int)
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/io/Writer/flush()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/runAppProcess(java.lang.ProcessBuilder,org.slf4j.Logger,java.io.Reader,java.io.Writer)#java/lang/Process/getOutputStream()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope$Path/steps()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/SqlValidatorScope$ResolvedImpl()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/util/ImmutableBitSet/union(java.lang.Iterable)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/ListScope/getChildren()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolve/rowType()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupTuple(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorUtil/lookupGroupExpr(java.util.List,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope/getValidator()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidator/expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/only()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/field(org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidator/getCatalogReader()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/count()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupExpr(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,org.apache.calcite.sql.SqlNode)#org/apache/calcite/util/ImmutableBitSet/of(int%5B%5D)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/core/CorrelationId/CorrelationId(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/List/get(int)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/Number/longValue()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/Integer/intValue()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeNullLiteral(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/RelInput/getCluster()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/Number/doubleValue()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeApproxLiteral(java.math.BigDecimal)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeCorrel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.CorrelationId)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/math/BigDecimal/valueOf(double)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/util/Util/enumVal(java.lang.Class,java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toOp(java.lang.String,java.util.Map)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toRexList(org.apache.calcite.rel.RelInput,java.util.List)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/RelInput/getInputs()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/deriveReturnType(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,java.lang.String,boolean)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/List/iterator()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/rel/RelFieldCollation$Direction/values()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/rel/RelFieldCollation$NullDirection/ordinal()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/rel/RelFieldCollation$NullDirection/values()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/rel/RelFieldCollation$Direction/ordinal()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/sql/SqlKind/values()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/plan/RelOptUtil$Logic/values()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/sql/SqlKind/ordinal()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/sql/JoinType/ordinal()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/sql/JoinConditionType/values()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/sql/JoinConditionType/ordinal()
java+initializer:///org/apache/calcite/sql2rel/SqlToRelConverter$5/SqlToRelConverter$5$initializer#org/apache/calcite/sql/JoinType/values()
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#java/nio/CharBuffer/wrap(java.lang.CharSequence)
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#org/apache/calcite/runtime/Resources$ExInst/ex()
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#java/nio/charset/UnsupportedCharsetException/UnsupportedCharsetException(java.lang.String)
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#org/apache/calcite/runtime/CalciteResource/charsetEncoding(java.lang.String,java.lang.String)
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#java/nio/charset/Charset/forName(java.lang.String)
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#java/nio/charset/Charset/newEncoder()
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#java/nio/charset/CharsetEncoder/encode(java.nio.CharBuffer)
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#java/lang/String/toUpperCase()
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#org/apache/calcite/sql/SqlUtil/translateCharacterSetName(java.lang.String)
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)#java/lang/Object/Object()
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/size()
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCostFactory/makeCost(double,double,double)
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/sql/SqlAggFunction/getName()
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptPlanner/getCostFactory()
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/doubleValue()
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rel/core/Aggregate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateRemoveRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/fields(java.util.List)
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/asList()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/runtime/SqlFunctions/isTrue(java.lang.Boolean)
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelTraitSet/simplify()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/AggregateRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/type/SqlSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/type/CompositeOperandTypeChecker$Composition/ordinal()
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/getRules()
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlCallBinding/newValidationSignatureError()
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/util/Util/unexpected(java.lang.Enum)
org/apache/calcite/sql/type/CompositeSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNode/equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNodeList/add(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlLiteral/createExactNumeric(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlCall/setOperand(int,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/getInnerSelect(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlOperator/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlSelect/getSelectList()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/getSelfJoinExprForUpdate(org.apache.calcite.sql.SqlNode,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlSelect/setFetch(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlUnresolvedFunction/getFunctionType()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/lang/Integer/toString(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNodeList/getList()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlSelect/SqlSelect(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNodeList/set(int,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/createSourceSelectForDelete(org.apache.calcite.sql.SqlDelete)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/createSourceSelectForUpdate(org.apache.calcite.sql.SqlUpdate)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlUpdate/setSourceSelect(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlUnresolvedFunction/getNameAsId()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/linq4j/Ord/zip(java.lang.Iterable)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlIdentifier/star(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/isAggregate(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlDelete/setSourceSelect(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlUtil/stripAs(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/lang/Iterable/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlSelect/setOrderBy(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNodeList/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlSelect/getOrderList()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlSelect/setOffset(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlUpdate/getTargetTable()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNodeList/clone(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlBasicCall/setOperator(org.apache.calcite.sql.SqlOperator)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Iterator/remove()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#org/apache/calcite/util/graph/DirectedGraph/vertexSet()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/iterator()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/HashSet/HashSet()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/size()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/isEmpty()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#org/apache/calcite/plan/hep/HepPlanner/notifyDiscard(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Map$Entry/getValue()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Map/entrySet()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#org/apache/calcite/util/graph/DirectedGraph/removeAllVertices(java.util.Collection)
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/getAdjustments()
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/locateAllRefs()
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/getInputs()
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilderFactory/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema)
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/getTraitSet()
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)
org/apache/calcite/rel/rules/ProjectSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/addAll(java.lang.Iterable)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinRel()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/getJoinTree()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getFactorsRefByJoinFilter(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/List/listIterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/needsAdjustment(org.apache.calcite.rel.rules.LoptMultiJoin,int%5B%5D,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/ListIterator/remove()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinFields()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/ListIterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/getTreeOrder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumTotalFields()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/ListIterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/List/iterator()
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/util/graph/DefaultDirectedGraph/target(org.apache.calcite.util.graph.DefaultEdge)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/List/size()
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Set/iterator()
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/List/remove(int)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Set/remove(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/util/Util/range(int)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/util/mapping/Mapping/getTarget(int)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexCorrelVariable/getType()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/util/mapping/Mapping/getSourceCount()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexBuilder/makeCorrel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.CorrelationId)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexFieldAccess/getField()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/util/mapping/Mapping/getTargetCount()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/util/mapping/Mapping/getSource(int)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelFieldTrimmer/access$000(org.apache.calcite.sql2rel.RelFieldTrimmer)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/tools/RelBuilder/getTypeFactory()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexFieldAccess/getReferenceExpr()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/core/CorrelationId/equals(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer$2/handle(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$ExecuteResult/Meta$ExecuteResult(java.util.List)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/jdbc/CalcitePrepare$Query/of(java.lang.String)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$MetaResultSet/create(java.lang.String,int,boolean,org.apache.calcite.avatica.Meta$Signature,org.apache.calcite.avatica.Meta$Frame)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$PrepareCallback/getMonitor()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/server/CalciteServerStatement/setSignature(org.apache.calcite.avatica.Meta$Signature)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/server/CalciteServerStatement/createPrepareContext()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$PrepareCallback/execute()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$PrepareCallback/assign(org.apache.calcite.avatica.Meta$Signature,org.apache.calcite.avatica.Meta$Frame,long)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/jdbc/CalciteMetaImpl/getConnection()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$PrepareCallback/clear()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/jdbc/CalciteConnectionImpl/parseQuery(org.apache.calcite.jdbc.CalcitePrepare$Query,org.apache.calcite.jdbc.CalcitePrepare$Context,long)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/server/CalciteServer/getStatement(org.apache.calcite.avatica.Meta$StatementHandle)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorImpl/setOriginal(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getEnclosingNode()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlQualified/create(org.apache.calcite.sql.validate.SqlValidatorScope,int,org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/isStar()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Comparator/compare(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/List/iterator()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolve/rowType()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/DelegatingScope$1/DelegatingScope$1(org.apache.calcite.sql.validate.DelegatingScope)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/emptyPath()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/add(int,java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$Path/steps()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rel/type/StructKind/ordinal()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map$Entry/getKey()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/runtime/CalciteResource/tableNameNotFound(java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rel/type/RelDataType/getStructKind()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.util.List,org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/setName(int,java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/skipLast(int)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map/size()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/runtime/CalciteResource/columnNotFound(java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/runtime/CalciteResource/columnNotFoundInTable(java.lang.String,java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/next()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/only()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/field(org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorUtil/getAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Set/iterator()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/runtime/CalciteResource/columnAmbiguous(java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/getComponent(int,int)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/List/get(int)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map$Entry/getValue()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/SqlValidatorScope$ResolvedImpl()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/DelegatingScope/findQualifyingTableName(java.lang.String,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/clear()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/DelegatingScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map/entrySet()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/DelegatingScope/hasAmbiguousUnresolvedStar(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeField,java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/DelegatingScope/findQualifyingTables(java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/count()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/getParserPosition()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope$Path/stepCount()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/io/PrintWriter/println()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#org/apache/calcite/rex/RexProgram/toString()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/io/StringWriter/StringWriter()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/io/StringWriter/toString()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getTypeFactory()
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/nio/charset/Charset/equals(java.lang.Object)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCollation/getCoercibilityDyadicOperator(org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/nio/charset/Charset/name()
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/runtime/CalciteResource/incompatibleCharset(java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/sql/SqlBinaryOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlBinaryOperator/getName()
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#org/apache/calcite/sql/type/SqlTypeUtil/isApproximateNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericPrecision()
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/scaleUp(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/makeMultiply(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)#org/apache/calcite/rel/rules/ReduceDecimalsRule$RexExpander/makeApproxScaleFactor(int)
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,boolean)
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createProjectWithAdditionalExprs(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/PhysType/fieldReference(org.apache.calcite.linq4j.tree.Expression,int,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/PhysType/getRowType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#org/apache/calcite/linq4j/tree/ConstantExpression/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rel/core/Calc/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rel/core/Calc/getInput()
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexProgram/getInputRowType()
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexShuttle/apply(java.util.List)
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexProgram/getOutputRowType()
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexProgram/getProjectList()
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexProgram/RexProgram(org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexShuttle/apply(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Calc/accept(org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexProgram/getExprList()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getNode()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/only()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolve/rowType()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/Map$Entry/getKey()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/skipLast(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/addToSelectList(java.util.List,java.util.Set,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.util.List,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/addOrExpandField(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/isStar()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/runtime/CalciteResource/unknownIdentifier(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/isDynamicStruct()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SelectScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/getNamespace(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/plus(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/Map$Entry/getValue()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/runtime/CalciteResource/starRequiresRecordType()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/SqlValidatorScope$ResolvedImpl()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/count()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/metadata/RelMetadataQuery/areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,boolean)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/cardinality()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeTransforms$5/toVar(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/type/SqlTypeTransforms$5/transformType(org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/rel/type/RelDataType/getField(java.lang.String,boolean,boolean)
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorUtil/createTypeFromProjection(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/util/List/iterator()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#org/apache/calcite/util/Util/discard(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#org/apache/calcite/jdbc/CalciteMetaImpl/getConnection()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#org/apache/calcite/server/CalciteServer/getStatement(org.apache.calcite.avatica.Meta$StatementHandle)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#org/apache/calcite/avatica/Meta$ExecuteBatchResult/Meta$ExecuteBatchResult(long%5B%5D)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#org/apache/calcite/jdbc/CalciteMetaImpl$15/CalciteMetaImpl$15(org.apache.calcite.jdbc.CalciteMetaImpl,org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/List/iterator()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecuteBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#com/google/common/primitives/Longs/toArray(java.util.Collection)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ArrayTable$Column/permute(int%5B%5D)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader$5/ColumnLoader$5(org.apache.calcite.adapter.clone.ColumnLoader,org.apache.calcite.linq4j.Ord)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/Set/size()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader/wrap(org.apache.calcite.avatica.ColumnMetaData$Rep,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/freeze(int,int%5B%5D)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/List/size()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader$Kev/access$100(org.apache.calcite.adapter.clone.ColumnLoader$Kev)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/List/toArray(java.lang.Object%5B%5D)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader$Kev/ColumnLoader$Kev(int,java.lang.Comparable)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/Arrays/sort(java.lang.Object%5B%5D)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader/isIdentity(int%5B%5D)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader$4/ColumnLoader$4(org.apache.calcite.adapter.clone.ColumnLoader,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/Iterator/next()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/Map/keySet()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/add(java.lang.Comparable)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/ColumnLoader$ValueSet(java.lang.Class)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/List/get(int)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/List/iterator()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/of(int,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/range(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getIndicatorCount()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertMonopole(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/containsDistinctCall()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/addAnd(com.google.common.collect.ImmutableList$Builder,java.util.Set,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getName()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/lang/Object/getClass()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#org/apache/calcite/schema/Statistics/of(double,java.util.List,java.util.List)
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#java/util/Iterator/hasNext()
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#org/apache/calcite/adapter/clone/ArrayTable$Content/access$200(org.apache.calcite.adapter.clone.ArrayTable$Content)
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#org/apache/calcite/adapter/clone/ArrayTable$Content/access$100(org.apache.calcite.adapter.clone.ArrayTable$Content)
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#com/google/common/base/Supplier/get()
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#java/util/List/iterator()
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#org/apache/calcite/util/ImmutableBitSet/of(int%5B%5D)
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#java/util/Iterator/next()
org/apache/calcite/adapter/clone/ArrayTable/getStatistic()#org/apache/calcite/adapter/clone/ArrayTable$Content/access$000(org.apache.calcite.adapter.clone.ArrayTable$Content)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#com/google/common/base/Throwables/propagateIfPossible(java.lang.Throwable)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/rel/metadata/NullSentinel/mask(java.lang.Object)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/rel/metadata/CachingRelMetadataProvider/access$000(org.apache.calcite.rel.metadata.CachingRelMetadataProvider)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/rel/metadata/CachingRelMetadataProvider/access$100(org.apache.calcite.rel.metadata.CachingRelMetadataProvider)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/reflect/InvocationTargetException/getCause()
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/rel/metadata/Metadata/rel()
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CacheEntry/CachingRelMetadataProvider$CacheEntry(org.apache.calcite.rel.metadata.CachingRelMetadataProvider$1)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/plan/RelOptPlanner/getRelMetadataTimestamp(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/CachingRelMetadataProvider$CachingInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/getRightPrec()
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/util/Pair/zip(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlUpdate/getSourceExpressionList()
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlUpdate/getOperator()
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlUpdate/getTargetColumnList()
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameType,java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/Iterable/iterator()
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlUpdate/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/getLeftPrec()
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/Collections/emptyMap()
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/HashMap/HashMap(java.util.Map)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/Collections/unmodifiableMap(java.util.Map)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/Map/putAll(java.util.Map)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/List/size()
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/Map/isEmpty()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/util/NlsString/getCollation()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/util/NlsString/getCharset()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#java/nio/charset/Charset/name()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/rex/RexLiteral/RexLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/RelSet/postEquivalenceEvent(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptCluster/getPlanner()
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/iterator()
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTrait/getTraitDef()
org/apache/calcite/plan/volcano/RelSet/addInternal(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/verifyTypeEquivalence(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/emptySet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/rebuild()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelCollation)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rex/RexLiteral/intValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Sort/getInput()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/isIdentity()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Sort/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Sort,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/getProgram()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinProjectTransposeRule/getProjectChild(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,boolean)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/addCondition(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/addIdentity()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getProjectList()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinProjectTransposeRule/hasRightChild(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/validate/SqlValidatorUtil/deriveJoinRowType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/create(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Collections/emptyList()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/mergePrograms(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinProjectTransposeRule/hasLeftChild(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/convert(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinProjectTransposeRule/getRightChild(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/expandLocalRef(org.apache.calcite.rex.RexLocalRef)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameType,java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String,boolean)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/type/SqlTypeName/allowsScale()
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/type/SqlTypeName/allowsPrec()
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/String/substring(int)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/type/SqlTypeName/get(java.lang.String)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/print(int)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/identifier(java.lang.String)
org/apache/calcite/sql/SqlDataTypeSpec/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$DnfHelper/or(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/flattenOr(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$DnfHelper/and(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/access$300()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil/disjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/flattenAnd(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/util/Util/skip(java.util.List)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/util/Map/put(java.lang.Object,java.lang.Object)
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/lang/Object/equals(java.lang.Object)
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/lang/Class/getDeclaredMethods()
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/lang/Class/isPrimitive()
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/util/HashMap/HashMap()
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/lang/reflect/Method/getReturnType()
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/lang/reflect/Method/getName()
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/lang/Class/desiredAssertionStatus()
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/lang/reflect/Method/getParameterTypes()
java+initializer:///org/apache/calcite/util/ReflectUtil/ReflectUtil$initializer#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#com/google/common/collect/Multimap/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#com/google/common/collect/SetMultimap/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#org/apache/calcite/plan/AbstractRelOptPlanner/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/IdentityHashMap/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#org/apache/calcite/plan/volcano/RuleQueue/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/List/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/Map/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#org/apache/calcite/rel/RelFieldCollation/RelFieldCollation(int,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#java/util/List/size()
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#org/apache/calcite/rel/RelFieldCollation$Direction/defaultNullDirection()
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/sql/SqlLiteral/createBoolean(boolean,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/result(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Result,org.apache.calcite.rel.rel2sql.SqlImplementor$Result)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/asFrom()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/sql/SqlJoin/SqlJoin(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/joinType(org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/sql/JoinConditionType/symbol(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/visitChild(int,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/qualifiedContext()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/sql/JoinType/symbol(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#org/apache/calcite/rex/RexProgram/toString()
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#java/util/List/size()
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#java/util/List/get(int)
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexProgram/projectsIdentity(boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/plan/RelOptUtil/checkProjAndChildInputs(org.apache.calcite.rel.core.Project,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getTraitSet()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/containsCorrelation(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getTraitSet()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCluster()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/isNullabilityCast(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/pushPastProject(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.Project)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexOver/containsOver(java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/FilterProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/add(int)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Object/toString()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/XmlOutput/beginBeginTag(java.lang.String)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getRelTypeName()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/subtract(int)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/XmlOutput/attribute(java.lang.String,java.lang.String)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/explain(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/XmlOutput/endBeginTag(java.lang.String)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#java/util/TreeMap/TreeMap(java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInput(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$300(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.Map,java.util.SortedMap)
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/InvalidRelException/InvalidRelException(java.lang.String)
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable/get(org.apache.calcite.sql.SqlAggFunction,boolean)
org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/interpreter/Bindables$BindableAggregate/getConvention()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getInput(int)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getJoinFieldRefCountsMap()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/rules/JoinToMultiJoinRule/canCombine(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getProjFields()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableIntList/toIntArray()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/linq4j/function/Function1/apply(java.lang.Object)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Arrays/asList(java.lang.Object%5B%5D)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/deriveFieldName(org.apache.calcite.rex.RexNode,int)#java/util/List/get(int)
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/item(java.lang.String,java.lang.Object)
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/core/Window$Group/toString()
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Window/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/SingleRel/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rel/rel2sql/SqlImplementor/reverseOperatorDirection(org.apache.calcite.sql.SqlOperator)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/sql/SqlOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#java/util/List/size()
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#java/util/List/iterator()
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/implementor()
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rel/rel2sql/SqlImplementor/joinContext(org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#java/util/List/get(int)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/field(int)
org/apache/calcite/rel/rel2sql/SqlImplementor/convertConditionToSqlNode(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,int)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/toUpperCase()
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/length()
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/substring(int,int)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/endsWith(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#org/apache/calcite/avatica/util/Casing/ordinal()
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/toLowerCase()
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableSort/access$1100(org.apache.calcite.plan.SubstitutionVisitor$MutableSort)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getVariablesSet()
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/access$700(org.apache.calcite.plan.SubstitutionVisitor$MutableFilter)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/access$1000(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/rel/logical/LogicalAggregate/create(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getRight()
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/rel/logical/LogicalSort/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getJoinType()
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/access$800(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/rel/logical/LogicalFilter/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/access$900(org.apache.calcite.plan.SubstitutionVisitor$MutableAggregate)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableSort/access$1300(org.apache.calcite.plan.SubstitutionVisitor$MutableSort)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getLeft()
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableSort/access$1200(org.apache.calcite.plan.SubstitutionVisitor$MutableSort)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRelType/ordinal()
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/rel/logical/LogicalUnion/create(java.util.List,boolean)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/access$600(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/deep()
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/getCondition()
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/fromMutables(java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/rel/logical/LogicalProject/create(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getLeftKeys()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRightKeys()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRight()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableIntList/copyOf(java.lang.Iterable)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/String/length()
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/math/BigInteger/BigInteger(java.lang.String,int)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/math/BigInteger/toByteArray()
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/setCorrelates(org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/forAggregation(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat,boolean)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/getElementType()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/getCall()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/isQueryable()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/getCluster()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/Bindables$BindableAggregate/Bindables$BindableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getTraitSet()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getInput()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSets()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder$AggCallImpl/access$600(org.apache.calcite.tools.RelBuilder$AggCallImpl)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder$AggCallImpl/access$500(org.apache.calcite.tools.RelBuilder$AggCallImpl)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder$AggCallImpl/access$300(org.apache.calcite.tools.RelBuilder$AggCallImpl)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/util/ImmutableBitSet/asList()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/Iterable/iterator()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/SortedSet/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/Integer/intValue()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/Ordering/isStrictlyOrdered(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.tools.RelBuilder$1)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder$AggCallImpl/access$400(org.apache.calcite.tools.RelBuilder$AggCallImpl)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/registerExpression(java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder$AggCallImpl/access$200(org.apache.calcite.tools.RelBuilder$AggCallImpl)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/subList(int,int)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/size()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder$Field/RelBuilder$Field(com.google.common.collect.ImmutableSet,org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/util/ImmutableBitSet/of(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/registerExpressions(java.util.List,java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/type/RelDataTypeFieldImpl/RelDataTypeFieldImpl(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/core/RelFactories$AggregateFactory/createAggregate(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/Deque/pop()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/AssertionError/AssertionError()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder$AggCallImpl2/access$700(org.apache.calcite.tools.RelBuilder$AggCallImpl2)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/PhysType/getJavaFieldType(int)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/equal(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/PhysType/fieldReference(org.apache.calcite.linq4j.tree.Expression,int,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOn(int)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/PhysType/getRowType()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/PhysType/makeNullable(boolean)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/get(int)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/jdbc/CalciteSchema$LatticeEntry/getStarTable()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/prepare/Prepare$Materialization/access$000(org.apache.calcite.prepare.Prepare$Materialization)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptCluster/getPlanner()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/jdbc/CalciteSchema$TableEntry/getTable()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptLattice/RelOptLattice(org.apache.calcite.materialize.Lattice,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptPlanner/setExecutor(org.apache.calcite.plan.RelOptPlanner$Executor)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/rel/RelRoot/project(boolean)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptPlanner/addMaterialization(org.apache.calcite.plan.RelOptMaterialization)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/jdbc/CalcitePrepare$Context/getDataContext()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/jdbc/CalciteSchema$LatticeEntry/getLattice()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/prepare/Prepare/getDesiredRootTraitSet(org.apache.calcite.rel.RelRoot)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptPlanner/addLattice(org.apache.calcite.plan.RelOptLattice)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/jdbc/CalcitePrepare$Context/getTypeFactory()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/tools/Program/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/toString(org.apache.calcite.rel.RelNode,org.apache.calcite.sql.SqlExplainLevel)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptMaterialization/RelOptMaterialization(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/rex/RexExecutorImpl/RexExecutorImpl(org.apache.calcite.DataContext)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/prepare/Prepare/getProgram()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/schema/Table/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/prepare/RelOptTableImpl/create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.jdbc.CalciteSchema$TableEntry,java.lang.Double)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptPlanner/setRoot(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/rel/RelRoot/withRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/Range/hasLowerBound()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/TreeRangeSet/create()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/next(java.util.Calendar,org.apache.calcite.avatica.util.TimeUnitRange,int,com.google.common.collect.Range,boolean)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/ImmutableRangeSet/complement()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/baz(org.apache.calcite.avatica.util.TimeUnitRange,org.apache.calcite.sql.SqlKind,java.util.Calendar)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Set/iterator()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Calendar/getInstance(java.util.TimeZone)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/Range/lowerEndpoint()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/math/BigDecimal/intValue()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Calendar/set(int,int,int)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Calendar/clone()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/toRex(org.apache.calcite.rex.RexNode,com.google.common.collect.Range)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/RangeSet/removeAll(com.google.common.collect.RangeSet)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/RangeSet/complement()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/ImmutableRangeSet/copyOf(com.google.common.collect.RangeSet)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/RangeSet/asRanges()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#org/apache/calcite/avatica/util/TimeUnitRange/ordinal()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#org/apache/calcite/rex/RexUtil/composeDisjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/TimeZone/getTimeZone(java.lang.String)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Iterator/next()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Calendar/clear()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/RangeSet/add(com.google.common.collect.Range)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/ImmutableRangeSet/of()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/foo(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/sql/type/SqlTypeName/isYearMonth()
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/sql/SqlIntervalQualifier/combineFractionalSecondPrecisionPreservingDefault(org.apache.calcite.rel.type.RelDataTypeSystem,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createSqlIntervalType(org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/avatica/util/TimeUnit/ordinal()
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/sql/type/SqlTypeName/getEndUnit()
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl/getTypeSystem()
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/sql/SqlIntervalQualifier/getStartPrecisionPreservingDefault()
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/sql/type/SqlTypeName/getStartUnit()
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/sql/SqlIntervalQualifier/SqlIntervalQualifier(org.apache.calcite.avatica.util.TimeUnit,int,org.apache.calcite.avatica.util.TimeUnit,int,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/type/IntervalSqlType/combine(org.apache.calcite.rel.type.RelDataTypeFactoryImpl,org.apache.calcite.sql.type.IntervalSqlType)#org/apache/calcite/sql/SqlIntervalQualifier/combineStartPrecisionPreservingDefault(org.apache.calcite.rel.type.RelDataTypeSystem,org.apache.calcite.sql.SqlIntervalQualifier,org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/sql/SqlSelect/getSelectList()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/rel/type/RelRecordType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#java/util/Set/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/setValidatedNodeTypeImpl(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/deriveAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/runtime/CalciteResource/onlyScalarSubQueryAllowed()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/getWhereScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/handleScalarSubQuery(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlSelect,java.util.List,java.util.Set,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableModify/getOperation()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getJavaFieldType(int)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Types/toClass(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/TableModify$Operation/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/fieldReference(org.apache.calcite.linq4j.tree.Expression,int,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableScan/deduceFormat(org.apache.calcite.plan.RelOptTable)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableModify/getInput()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableModify/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableModify/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/greaterThanOrEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression,boolean)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/plan/RelOptTable/getExpression(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rex/RexLiteral/isNullLiteral(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/avatica/util/Spaces/padRight(java.lang.String,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/util/NlsString/getCollation()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/sql/type/SqlTypeUtil/hasScale(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/util/NlsString/getCharsetName()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rex/RexBuilder/makeCharLiteral(org.apache.calcite.util.NlsString)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rex/RexNode/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/util/NumberUtil/rescaleBigDecimal(java.math.BigDecimal,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/sql2rel/SqlNodeToRexConverter/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)#org/apache/calcite/sql/type/SqlTypeUtil/isExactNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/semiJoin(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/ordinal()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinInfo/rightSet()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableIntList/iterator()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinInfo/isEqui()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/peek(int,int)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/intersects(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/asList()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/analyzeCondition()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/createEquiJoinCondition(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableIntList/copyOf(java.lang.Iterable)
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/HashSet/HashSet()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Deque/pop()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Deque/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/io/PrintWriter/println(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#org/apache/calcite/plan/volcano/RelSubset/getRelList()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#org/apache/calcite/avatica/util/Spaces/append(java.io.PrintWriter,int)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/List/get(int)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/createArrayType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/adapter/jdbc/JdbcSchema/parseTypeString(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/allowsNoPrecNoScale()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecNoScale()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#java/lang/String/length()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecScale(boolean,boolean)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/getNameForJdbcType(int)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/clone(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMetadataQuery/getAverageColumnSizesNotNull(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#org/apache/calcite/plan/RelOptRuleOperand/getMatchedClass()
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#org/apache/calcite/rel/convert/TraitMatchingRule/any()
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#org/apache/calcite/rel/convert/TraitMatchingRule/operand(java.lang.Class,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand%5B%5D)
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#org/apache/calcite/rel/convert/TraitMatchingRule/operand(java.lang.Class,org.apache.calcite.plan.RelOptRuleOperandChildren)
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#org/apache/calcite/plan/RelOptRule/RelOptRule(org.apache.calcite.plan.RelOptRuleOperand,java.lang.String)
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/convert/TraitMatchingRule/TraitMatchingRule(org.apache.calcite.rel.convert.ConverterRule)#org/apache/calcite/rel/convert/ConverterRule/getOperand()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/util/JsonBuilder/list()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/util/JsonBuilder/toJsonString(java.lang.Object)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/jdbc/CalciteConnectionImpl/getProperties()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/model/JsonSchema$Type/ordinal()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/util/JsonBuilder/JsonBuilder()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/config/CalciteConnectionConfig/model()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/util/JsonBuilder/map()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/config/CalciteConnectionConfig/schemaFactory(java.lang.Class,java.lang.Object)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Set/iterator()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/String/substring(int)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/jdbc/CalciteConnectionImpl/config()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Map/entrySet()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/util/Util/toMap(java.util.Properties)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Map$Entry/getKey()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/String/length()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/config/CalciteConnectionConfig/schemaType()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Iterator/next()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/config/CalciteConnectionConfig/schema()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/Class/getName()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/Object/getClass()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/item(java.lang.String,java.lang.Object)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/getDetailLevel()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/SingleRel/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/nest()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCorrelate/getCorrelVariable()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/sql/SemiJoinType/toLinq4j()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/sql/SemiJoinType/returnsJustFirstInput()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/registerCorrelVariable(java.lang.String,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/unbox(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCorrelate/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/clearCorrelVariable(java.lang.String)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/lang/Class/getMethods()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#com/google/common/collect/ImmutableMultimap/copyOf(com.google.common.collect.Multimap)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/access$100(java.lang.reflect.Method,java.lang.reflect.Method)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/util/Collection/iterator()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/lang/Object/Object()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/lang/Object/getClass()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#com/google/common/collect/Multimap/entries()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/ReflectiveRelMetadataProvider$Space(com.google.common.collect.Multimap)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/sql/parser/SqlParserUtil/intervalToMillis(java.lang.String,org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/avatica/util/DateTimeUtils/parseDateFormat(java.lang.String,java.lang.String,java.util.TimeZone)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/avatica/util/ByteString/ByteString(byte%5B%5D)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/sql/parser/SqlParserUtil/intervalToMonths(java.lang.String,org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/math/BigDecimal/BigDecimal(java.lang.String)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/avatica/util/DateTimeUtils/parsePrecisionDateTimeLiteral(java.lang.String,java.lang.String,java.util.TimeZone)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/util/ConversionUtil/toBoolean(java.lang.String)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/util/ConversionUtil/toByteArrayFromString(java.lang.String,int)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/rel/type/RelDataType/getIntervalQualifier()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/rex/RexLiteral/getCalendarFormat(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/avatica/util/DateTimeUtils$PrecisionTime/getCalendar()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/nio/charset/Charset/name()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/rex/RexLiteral/RexLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/Boolean/booleanValue()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter$2/SqlToRelConverter$2(org.apache.calcite.sql2rel.SqlToRelConverter,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlBasicCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter/ensureSqlType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlBasicCall/getOperator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/rex/RexUtil/composeDisjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/sql/SqlBasicCall/operandCount()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/get(int)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rel/core/Project/getNamedProjects()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/createProjectExprs(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,int,org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableIntList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeNullLiteral(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/analyzeCondition()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#java/util/Deque/peek()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/tools/RelBuilder$Field/getValue()
org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/linq4j/tree/Primitive/ordinal()
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/sql/type/SqlTypeFamily/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/linq4j/tree/Primitive/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/sql/SqlKind/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/sql/type/SqlTypeName/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/sql/type/SqlTypeName/ordinal()
java+initializer:///org/apache/calcite/adapter/enumerable/RexToLixTranslator$1/RexToLixTranslator$1$initializer#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/getVariablesUsed(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Object/toString()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMdUtil/areColumnsDefinitelyUniqueWhenNullsFiltered(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupCount()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1100(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalCorrelate)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/size()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/removeCorrelationExpr(org.apache.calcite.rex.RexNode,boolean,org.apache.calcite.rex.RexInputRef)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1000(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMdUtil/areColumnsDefinitelyUnique(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/splitCorrelatedFilterCondition(org.apache.calcite.rel.logical.LogicalFilter,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$200(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1600(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.logical.LogicalCorrelate)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$300(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/removeCorrelationExpr(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/adaptTo(org.apache.calcite.rel.RelNode,java.util.List,int,int,int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/create(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1400(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1200()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1300(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/getRoot()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getInput()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCorrelate/getCluster()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/AggContext/returnType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/ParameterExpression/getType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/EnumerableWindow$3/EnumerableWindow$3(org.apache.calcite.adapter.enumerable.EnumerableWindow,org.apache.calcite.adapter.enumerable.AggImpState,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.EnumerableRel$Result)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/impl/WinAggResetContextImpl/WinAggResetContextImpl(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/String/substring(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/AggImplementor/getStateType(org.apache.calcite.adapter.enumerable.AggContext)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/PhysType/getJavaFieldType(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/adapter/enumerable/AggImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/util/Util/toJavaId(java.lang.String,int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/String/length()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/of(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/sql/SqlAggFunction/getName()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#com/google/common/collect/ImmutableList/of()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#org/apache/calcite/jdbc/CalciteSchema$FunctionEntry/getFunction()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#org/apache/calcite/schema/TableMacro/apply(java.util.List)
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Map$Entry/getKey()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/List/isEmpty()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#com/google/common/collect/ImmutableSortedMap$Builder/build()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#org/apache/calcite/util/Compatible/navigableMap(com.google.common.collect.ImmutableSortedMap)
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#org/apache/calcite/schema/Function/getParameters()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Set/iterator()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#com/google/common/collect/ImmutableSortedMap$Builder/ImmutableSortedMap$Builder(java.util.Comparator)
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/lang/AssertionError/AssertionError()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#org/apache/calcite/jdbc/CalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#com/google/common/collect/ImmutableSortedMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Map$Entry/getValue()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/NavigableMap/entrySet()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rex/RexWindow/getUpperBound()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rex/RexWindow/getLowerBound()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rex/RexOver/getOperands()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/sql/SqlWindow/create(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/sql/SqlAggFunction/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/sql/SqlLiteral/createBoolean(boolean,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rex/RexOver/getWindow()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexFieldCollation)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rex/RexWindow/isRows()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rex/RexOver/getAggOperator()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/sql/SqlBinaryOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexUtil/types(java.util.List)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexLocalRef/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexUtil/containNoNonTrivialAggs(java.util.List,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/Iterator/next()
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/List/get(int)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/List/iterator()
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexLocalRef/getType()
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexUtil/containNoForwardRefs(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexProgram$Checker/RexProgram$Checker(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rel.RelNode$Context,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/List/size()
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Litmus/succeed()
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/sql/type/SqlTypeUtil/inBooleanFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#java/lang/String/length()
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#java/io/File/File(java.lang.String)
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.File,java.lang.Class)
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#java/lang/String/substring(int)
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean)
org/apache/calcite/model/ModelHandler/ModelHandler(org.apache.calcite.jdbc.CalciteConnection,java.lang.String)#java/lang/Object/Object()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/isAny(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/getFamily()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/isInterval(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/IntervalSqlType/getIntervalQualifier()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/SqlIntervalQualifier/isSingleDatetimeField()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/List/get(int)
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/isExactNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/SqlTypeAssignmentRules/canCastFrom(org.apache.calcite.sql.type.SqlTypeName,org.apache.calcite.sql.type.SqlTypeName,boolean)
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/SqlTypeAssignmentRules/instance()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner/fixUpInputs(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getDigest()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner/merge(org.apache.calcite.plan.volcano.RelSet,org.apache.calcite.plan.volcano.RelSet)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner/key(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/IdentityHashMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/equals(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/RuleQueue/recompute(org.apache.calcite.plan.volcano.RelSubset,boolean)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/RelSubset/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/recomputeDigest()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/List/remove(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/tools/Frameworks$PrepareAction/apply(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema,org.apache.calcite.schema.SchemaPlus,org.apache.calcite.server.CalciteServerStatement)
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/jdbc/CalcitePrepare$Context/getTypeFactory()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/jdbc/CalcitePrepare$Context/getRootSchema()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/tools/FrameworkConfig/getCostFactory()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/tools/Frameworks$PrepareAction/getConfig()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/jdbc/CalcitePrepare$Context/config()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/prepare/CalcitePrepareImpl/createCluster(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/jdbc/CalciteSchema/plus()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/jdbc/CalciteSchema/path(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/server/CalciteServerStatement/createPrepareContext()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/config/CalciteConnectionConfig/caseSensitive()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/tools/FrameworkConfig/getDefaultSchema()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/jdbc/CalciteSchema/from(org.apache.calcite.schema.SchemaPlus)
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/prepare/CalciteCatalogReader/CalciteCatalogReader(org.apache.calcite.jdbc.CalciteSchema,boolean,java.util.List,org.apache.calcite.adapter.java.JavaTypeFactory)
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/tools/FrameworkConfig/getContext()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/jdbc/CalciteSchema/root()
org/apache/calcite/prepare/CalcitePrepareImpl/perform(org.apache.calcite.server.CalciteServerStatement,org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/rex/RexBuilder/RexBuilder(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/sql/type/SqlTypeName/getJdbcOrdinal()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/sql/type/SqlTypeName/allowsScale()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/avatica/MetaImpl$MetaColumn/MetaImpl$MetaColumn(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,int,java.lang.Integer,int,java.lang.String)
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/sql/type/SqlTypeName/allowsPrec()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#java/lang/Integer/valueOf(int)
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataType/getFullTypeString()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/jdbc/CalciteMetaImpl$14/apply(org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/setNullable(java.util.Map)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expressions/foldOr(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/setNullable(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/adapter/enumerable/RexImpTable/optimize(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expressions/box(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/adapter/enumerable/RexImpTable/implementCall(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.NotNullImplementor,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expressions/foldAnd(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/HashMap/HashMap()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/isNullable(org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#org/apache/calcite/rel/core/RelFactories$SetOpFactory/createSetOp(org.apache.calcite.sql.SqlKind,java.util.List,boolean)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/util/LinkedList/LinkedList()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexUtil/isNull(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexLiteral/toString()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexUtil/casePairs(org.apache.calcite.rex.RexBuilder,java.util.List)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexUtil/isCasePredicate(org.apache.calcite.rex.RexCall,int)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexBuilder/makeAbstractCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/util/Pair/getKey()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexNode/isAlwaysFalse()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/util/Pair/getValue()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/Set/size()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexUtil/composeDisjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/List/size()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexCall/clone(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexUtil/andNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.Iterable)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexUtil/simplifyCase(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall,boolean)#java/util/List/get(int)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/AbstractCollection/removeAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Set/removeAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Set/iterator()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Map$Entry/getValue()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#org/apache/calcite/util/CompatibleGuava11$Values/map()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Map/keySet()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Map/entrySet()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/lang/Object/toString()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/Iterator/hasNext()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/lang/Double/valueOf(double)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/List/subList(int,int)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/List/size()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/List/get(int)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/List/iterator()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/lang/Math/sqrt(double)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/Iterator/next()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/lang/Long/longValue()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/Collections/sort(java.util.List)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/makeCastBooleanToExact(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/type/SqlTypeName/getEndUnit()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#java/math/BigDecimal/multiply(java.math.BigDecimal)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/runtime/SqlFunctions/round(long,long)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexLiteral/getTypeName()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#java/util/Calendar/setTimeInMillis(long)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/isInterval(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#java/math/BigDecimal/divide(java.math.BigDecimal,int,int)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/baseUnit(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/makeAbstractCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/makeCastIntervalToExact(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexLiteral/getType()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/makeCastExactToBoolean(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#java/util/Calendar/getTimeInMillis()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/avatica/util/DateTimeUtils/powerX(long,long)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/isExactNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.tools.RelBuilder$1)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rel/type/RelDataTypeFieldImpl/RelDataTypeFieldImpl(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Deque/pop()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/tools/RelBuilder/inferAlias(java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Deque/peek()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rex/RexUtil/isIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rex/RexUtil/simplifyPreservingType(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/tools/RelBuilder/getTypeFactory()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/size()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/tools/RelBuilder$Field/RelBuilder$Field(com.google.common.collect.ImmutableSet,org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rel/core/RelFactories$ProjectFactory/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/tools/RelBuilder/getRexBuilder()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/lang/Iterable/iterator()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rel/type/RelDataTypeSystem/isSchemaCaseSensitive()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/sql/validate/SqlValidatorUtil$Suggester/apply(java.lang.String,int,int)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/equals(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/addJoinKey(java.util.List,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/op(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlOperator)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/length()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/intersects(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/sql/SqlKind/reverse()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/union(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/nextSetBit(int)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/collapseExpandedIsNotDistinctFromExpr(org.apache.calcite.rex.RexCall,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/AggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getInput()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferCustom()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getGroupCount()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/impl/AggResultContextImpl/AggResultContextImpl(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/comparer()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/EnumerableAggregate$2(org.apache.calcite.adapter.enumerable.EnumerableAggregate,org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.AggImpState,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.ParameterExpression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.PseudoField)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/AggImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getFormat()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/fieldReference(org.apache.calcite.linq4j.tree.Expression,int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/Util/toJavaId(java.lang.String,int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/String/length()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/AggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/ImmutableBitSet/asList()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/jdbc/JavaTypeFactoryImpl$SyntheticRecordType/getRecordFields()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/java/JavaTypeFactory/createSyntheticType(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getIndicatorCount()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/String/substring(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate$1/EnumerableAggregate$1(org.apache.calcite.adapter.enumerable.EnumerableAggregate,org.apache.calcite.adapter.enumerable.AggImpState,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/AggImpState/AggImpState(int,org.apache.calcite.rel.core.AggregateCall,boolean)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/sql/SqlAggFunction/getName()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/convertTo(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getGroupType()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/AggImplementor/getStateType(org.apache.calcite.adapter.enumerable.AggContext)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/rex/RexCall/computeDigest(boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexCall/computeDigest(boolean)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rex/RexCall/computeDigest(boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/calcite/rex/RexCall/computeDigest(boolean)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rex/RexCall/computeDigest(boolean)#org/apache/calcite/rel/type/RelDataType/getFullTypeString()
org/apache/calcite/rex/RexCall/computeDigest(boolean)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/rex/RexCall/computeDigest(boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexCall/computeDigest(boolean)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rex/RexCall/computeDigest(boolean)#org/apache/calcite/sql/SqlOperator/getSyntax()
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericScale()
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/Math/max(int,int)
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericPrecision()
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/Math/min(int,int)
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeUtil/isExactNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeUtil/isDecimal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)
org/apache/calcite/sql/type/ReturnTypes$8/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/util/NumberUtil/multiply(java.lang.Double,java.lang.Double)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/metadata/RelMdUtil/setLeftRightBitmaps(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.util.ImmutableBitSet$Builder,org.apache.calcite.util.ImmutableBitSet$Builder,int)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/metadata/RelMdUtil/numDistinctVals(java.lang.Double,java.lang.Double)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/metadata/RelMetadataQuery/getDistinctRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#java/lang/Math/max(double,double)
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdUtil/getJoinDistinctRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#org/apache/calcite/util/mapping/Mapping/getSourceCount()
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/util/List/size()
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#org/apache/calcite/util/mapping/Mapping/getTargetCount()
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/util/List/get(int)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#org/apache/calcite/util/mapping/Mapping/getSource(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/getArgType(org.apache.calcite.rex.RexCall,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isDecimal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastArgAsTypeExpander/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator/identityMap(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.Map,java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Util/equalShallow(java.util.List,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableSortedMap/of()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableSortedMap/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/replaceInput(int,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator/getInvoke(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/avatica/Helper/wrap(java.lang.String,java.lang.Exception)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/jdbc/CalcitePrepare$SparkHandler/enabled()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/EnumerableRelImplementor(org.apache.calcite.rex.RexBuilder,java.util.Map)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/jdbc/CalcitePrepare$SparkHandler/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/toString(java.util.List,java.lang.String,boolean)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexUtil/isDeterministic(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/remove(int)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexUtil/negate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#com/google/common/collect/Multimap/keySet()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Collections/disjoint(java.util.Collection,java.util.Collection)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#com/google/common/collect/ArrayListMultimap/create()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexUtil/strings(java.util.List)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexUtil/simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/isAlwaysFalse()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Set/containsAll(java.util.Collection)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexUtil/isReferenceOrAccess(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexUtil/invert(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/HashSet/HashSet()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/remove(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyAnd2ForUnknownAsFalse(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/ListIterator/remove()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/ListIterator/hasNext()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/List/remove(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer$LucidDbSpecialOperators/isLcsRidColumnId(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/metadata/RelColumnOrigin/getOriginTable()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/ListIterator/next()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/List/listIterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/metadata/RelMetadataQuery/getColumnOrigin(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/metadata/RelColumnOrigin/getOriginColumnOrdinal()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getOuterJoinCond(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/util/ImmutableBitSet/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumFieldsInJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/metadata/RelMdUtil/areColumnsDefinitelyUniqueWhenNullsFiltered(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFieldRefCounts(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumJoinFactors()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/findRef(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/setJoinKey(org.apache.calcite.util.ImmutableBitSet$Builder,org.apache.calcite.util.ImmutableBitSet$Builder,int,int,int,int,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/addRemovableOuterJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/plan/RelOptUtil/decomposeConjunction(org.apache.calcite.rex.RexNode,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getProjFields(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/clear()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/isNullGenerating(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinStart(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/util/ImmutableBitSet$Builder/cardinality()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMdUtil/areColumnsDefinitelyUnique(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/union(boolean,int)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.util.List)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidator/getTypeFactory()
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/nio/charset/Charset/equals(java.lang.Object)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlCollation/getCoercibilityDyadicOperator(org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/nio/charset/Charset/name()
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/runtime/CalciteResource/incompatibleCharset(java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/sql/SqlBinaryOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlBinaryOperator/getName()
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/util/Pair/zip(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexUtil/simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexProgramBuilder/addProject(int,java.lang.String)
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#java/util/Iterator/next()
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#java/lang/Iterable/iterator()
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexProgramBuilder/addCondition(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#java/util/List/iterator()
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexProgramBuilder$RegisterMidputShuttle/RexProgramBuilder$RegisterMidputShuttle(org.apache.calcite.rex.RexProgramBuilder,boolean,java.util.List)
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.lang.Iterable,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,boolean)#org/apache/calcite/rex/RexProgram$ExpansionShuttle/RexProgram$ExpansionShuttle(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getInputs()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/getEquiCondition(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/getRemaining(org.apache.calcite.rex.RexBuilder)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableJoin/EnumerableJoin(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/EnumerableThetaJoin(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getVariablesSet()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/isEqui()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/of(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getConvention()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableFilter/EnumerableFilter(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Types$RecordField/getType()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/constructorDecl(int,java.lang.reflect.Type,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/not(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.PseudoField)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/foldAnd(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Types$RecordField/nullable()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/fieldDecl(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Types$RecordField/getModifiers()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/Collections/emptyList()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/classDecl(int,java.lang.String,java.lang.reflect.Type,java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/typeIs(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/equal(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Types$RecordField/getName()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl$SyntheticRecordType/getRecordFields()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/RuntimeException/getCause()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl$SyntheticRecordType/getName()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/catch_(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/block(org.apache.calcite.linq4j.tree.Statement%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter$CalendarPolicy/ordinal()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/getInput()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/schema/Schemas/unwrap(org.apache.calcite.linq4j.tree.Expression,java.lang.Class)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/getTimeZoneExpression(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/newArrayBounds(java.lang.reflect.Type,int,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/tryCatch(org.apache.calcite.linq4j.tree.Statement,org.apache.calcite.linq4j.tree.CatchBlock%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter$CalendarPolicy/of(org.apache.calcite.sql.SqlDialect)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/arrayIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder(boolean)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/throw_(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/getRowType()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateSql(org.apache.calcite.sql.SqlDialect)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcRel/getConvention()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/SqlOperator/constructArgNameList(org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#org/apache/calcite/sql/SqlUtil/bestMatch(java.util.List,int,org.apache.calcite.rel.type.RelDataTypePrecedenceList)
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#org/apache/calcite/rel/type/RelDataType/getPrecedenceList()
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#com/google/common/collect/Iterables/filter(java.lang.Iterable,com.google.common.base.Predicate)
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#org/apache/calcite/sql/SqlUtil$5/SqlUtil$5(org.apache.calcite.linq4j.Ord,org.apache.calcite.rel.type.RelDataTypePrecedenceList,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#com/google/common/collect/Iterators/filter(java.util.Iterator,java.lang.Class)
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#com/google/common/collect/Lists/newArrayList(java.util.Iterator)
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlUtil/filterRoutinesByTypePrecedence(org.apache.calcite.sql.SqlSyntax,java.util.Iterator,java.util.List)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#java/util/List/size()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#java/util/Iterator/next()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#java/util/List/clear()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#java/util/List/iterator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#org/apache/calcite/sql2rel/SqlRexContext/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#org/apache/calcite/rex/RexUtil/types(java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)#org/apache/calcite/rex/RexBuilder/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinFields()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinRel()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumTotalFields()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/areSelfJoinKeysUnique(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinStart(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#org/codehaus/janino/JavaSourceClassLoader/generateBytecodes(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Map/values()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Set/iterator()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/io/FileOutputStream/write(byte%5B%5D)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Map$Entry/getValue()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Collection/iterator()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/io/FileOutputStream/close()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Map/entrySet()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Map$Entry/getKey()
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Short/valueOf(short)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Byte/valueOf(byte)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#org/apache/calcite/linq4j/tree/Primitive/ordinal()
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Character/valueOf(char)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/List/equals(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/util/Util/skip(java.util.List,int)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/fix(java.util.List,int,int)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$Side/of(org.apache.calcite.util.ImmutableBitSet,int)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexCall/clone(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$Side/ordinal()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/getNamespace(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/runtime/CalciteResource/aliasListDuplicate(java.lang.String)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/AliasNamespace/getString(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/contains(java.lang.Object)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/skip(java.util.List,int)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/runtime/CalciteResource/aliasListDegree(int,java.lang.String,int)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowTypeSansSystemColumns()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/getTypeFactory()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/parser/SqlParserPos/sum(java.util.List)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List,java.util.List)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/AliasNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/rel/core/Sort/getInput()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/collation(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection,java.util.List)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/List/isEmpty()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/replaceTop(org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/lang/Iterable/iterator()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/rel/core/RelFactories$SortFactory/createSort(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/List/size()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/empty()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/rel/RelCollations/of(java.util.List)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/lang/Integer/valueOf(int)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/lang/AssertionError/AssertionError()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/negate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/divide(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getValueType()
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/fun/SqlItemOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/decodeValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CaseExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isDecimal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/AbstractRelNode/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/item(java.lang.String,java.lang.Object)
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/input(java.lang.String,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/TableFunctionScan/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/plan/RelOptUtil/findTables(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/graph/DefaultDirectedGraph/create()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Set/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/graph/TopologicalOrderIterator/of(org.apache.calcite.util.graph.DirectedGraph)
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/plan/volcano/VolcanoPlanner/usesTable(org.apache.calcite.plan.RelOptTable,java.util.Set,org.apache.calcite.util.graph.Graphs$FrozenGraph)
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/graph/DirectedGraph/addVertex(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/graph/DirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexTransformer/isTransformable(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexTransformer/isBoolean(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/add(java.lang.Object)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/get(int)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/size()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/clone(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexTransformer/isNullable(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/equals(java.lang.Object)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/lang/Boolean/booleanValue()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMdUtil/areColumnsDefinitelyUnique(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinInfo/leftSet()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinInfo/rightSet()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinInfo/of(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/SortJoinTransposeRule/matches(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#com/google/common/collect/ImmutableMap/entrySet()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rel/rules/ReduceExpressionsRule$RexReplacer/mutate(java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/iterator()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/plan/RelOptPlanner$Executor/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/plan/RelOptPlanner/getExecutor()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rel/rules/ReduceExpressionsRule/findReducibleExps(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,com.google.common.collect.ImmutableMap,java.util.List,java.util.List,java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#com/google/common/collect/ImmutableMap/isEmpty()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/plan/RelOptCluster/getPlanner()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rel/rules/ReduceExpressionsRule$CaseShuttle/mutate(java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rex/RexUtil/strings(java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rel/rules/ReduceExpressionsRule$CaseShuttle/ReduceExpressionsRule$CaseShuttle()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rel/rules/ReduceExpressionsRule$RexReplacer/ReduceExpressionsRule$RexReplacer(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/get(int)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#java/util/Arrays/toString(java.lang.Object%5B%5D)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptListener$RuleAttemptedEvent/RelOptListener$RuleAttemptedEvent(java.lang.Object,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptRuleCall,boolean)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/AbstractRelOptPlanner/isRuleExcluded(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/MulticastRelOptListener/ruleAttempted(org.apache.calcite.plan.RelOptListener$RuleAttemptedEvent)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getRule()
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/AbstractRelOptPlanner/checkCancel()
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRule/matches(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/AbstractRelOptPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/field(int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableSet/first()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.util.List)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/navigableKeySet()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/size()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/adaptTo(org.apache.calcite.rel.RelNode,java.util.List,int,int,int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/keySet()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/isEmpty()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/TreeMap/TreeMap()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/clear(int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/containsKey(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/containsKey(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/remove(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/comparer()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableUnion/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/of(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIntervalQualifier/getStartUnit()
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIntervalLiteral/getValue()
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/math/BigDecimal/subtract(java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeReinterpretCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIntervalLiteral$IntervalValue/getIntervalQualifier()
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/convertFunction(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertFloorCeil(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/lang/Integer/intValue()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/Iterator/next()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/Set/isEmpty()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/Set/iterator()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/List/get(int)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/TableScan/getCluster()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/TableScan/getRowType()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rex/RexBuilder/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/io/PrintWriter/write(java.lang.String)
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/plan/RelTrait/toString()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/plan/RelTraitSet/iterator()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/AbstractRelNode/getRelTypeName()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/RelOptRule/matches(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/rel/convert/ConverterRule/isGuaranteed()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/isEmpty()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/toArray(java.lang.Object%5B%5D)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/iterator()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/hep/HepRuleCall/getResults()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/hep/HepPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/RelOptRule/getOperand()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/rel/convert/ConverterRule/getOutTrait()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/hep/HepPlanner/doesConverterApply(org.apache.calcite.rel.convert.ConverterRule,org.apache.calcite.plan.hep.HepRelVertex)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/size()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/hep/HepPlanner/getVertexParents(org.apache.calcite.plan.hep.HepRelVertex)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/HashMap/HashMap()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/hep/HepRuleCall/HepRuleCall(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode%5B%5D,java.util.Map,java.util.List)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/AggregateNode$AccumulatorList/send(org.apache.calcite.interpreter.Row)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/lang/Integer/intValue()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Map/get(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Iterator/next()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/Row/getObject(int)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/Row$RowBuilder/build()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/AggregateNode$AccumulatorList/AggregateNode$AccumulatorList(org.apache.calcite.interpreter.AggregateNode,org.apache.calcite.interpreter.AggregateNode$1)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/AggregateNode$AccumulatorList/add(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/AggregateNode/access$400(org.apache.calcite.interpreter.AggregateNode)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/Row/newBuilder(int)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/AggregateNode$AccumulatorFactory/get()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/Row$RowBuilder/set(int,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/apache/calcite/plan/volcano/VolcanoRuleMatch/recomputeDigest()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#com/google/common/collect/Multimap/remove(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/append(double)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/List/remove(int)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/apache/calcite/plan/volcano/RuleQueue/dump()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/apache/calcite/plan/volcano/RuleQueue/skipMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/List/isEmpty()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/apache/calcite/plan/volcano/VolcanoRuleMatch/computeImportance()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Comparator/compare(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/adapter/enumerable/AggResetContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/adapter/enumerable/RexImpTable/getDefaultValue(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/adapter/enumerable/AggResetContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$UnifyResult/access$300(org.apache.calcite.plan.SubstitutionVisitor$UnifyResult)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$MutableRels/equalType(java.lang.String,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,java.lang.String,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.util.Litmus)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$Holder/deep()
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor/fromMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$UnifyResult/access$200(org.apache.calcite.plan.SubstitutionVisitor$UnifyResult)
org/apache/calcite/plan/SubstitutionVisitor/go0(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/deep()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/sql2rel/RelDecorrelator/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.Map,java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/sql2rel/RelDecorrelator/decorrelateExpr(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$300(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rex/RexInputRef/of2(int,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/TreeMap/TreeMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/sql2rel/RelDecorrelator/getInvoke(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,boolean)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/ImmutableSortedMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#org/apache/calcite/rex/RexUtil/canAssignFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/lang/Class/cast(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#org/apache/calcite/rex/RexUtil/isConstant(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#org/apache/calcite/sql/SqlFunction/getName()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#org/apache/calcite/sql/SqlFunction/getFunctionType()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#org/apache/calcite/sql/util/ReflectiveSqlOperatorTable$Key/ReflectiveSqlOperatorTable$Key(java.lang.String,org.apache.calcite.sql.SqlSyntax)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/register(org.apache.calcite.sql.SqlOperator)#org/apache/calcite/sql/SqlOperator/getSyntax()
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameTypeEnum)
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(java.lang.String,java.lang.String)
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/Iterable/iterator()
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/linq4j/Ord/zip(java.lang.Iterable)
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlOperator/getLeftPrec()
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlExtendOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/setNeedWhitespace(boolean)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/java/JavaTypeFactory/builder()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/java/JavaTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/JavaRowFormat/optimize(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/java/JavaTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/get(int)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#java/util/Map/get(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#java/sql/Connection/close()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#java/sql/DatabaseMetaData/getDatabaseProductName()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#java/sql/DatabaseMetaData/getDatabaseProductVersion()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#javax/sql/DataSource/getConnection()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(javax.sql.DataSource)#java/sql/Connection/getMetaData()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexUtil/simplifyOrs(org.apache.calcite.rex.RexBuilder,java.util.List)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/entrySet()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/values()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptPredicateList/of(org.apache.calcite.rex.RexBuilder,java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getCluster()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rex/RexProgram/getProjectList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/rel2sql/SqlImplementor$Builder/result()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/core/Calc/getProgram()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/isStar(org.apache.calcite.rex.RexProgram)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/core/Calc/getRowType()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/rel2sql/SqlImplementor$Builder/setWhere(org.apache.calcite.sql.SqlNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/visitChild(int,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/core/Calc/getInput()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#java/util/List/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Calc)#org/apache/calcite/rel/rel2sql/SqlImplementor$Builder/setSelect(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/math/BigDecimal/intValue()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/sql/Date/Date(long)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/VisitorDataContext/removeCast(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/Character/valueOf(char)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/math/BigDecimal/doubleValue()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Calendar/getTimeInMillis()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/trace/CalciteLogger/warn(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/Double/valueOf(double)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/Long/valueOf(long)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/String/charAt(int)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/math/BigDecimal/longValue()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/trace/CalciteLogger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/sql/Date/valueOf(java.lang.String)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/Short/valueOf(short)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/Float/valueOf(float)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/math/BigDecimal/floatValue()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/math/BigDecimal/shortValue()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getValue2()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/lang/Object/getClass()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/math/BigDecimal/byteValue()
org/apache/calcite/plan/VisitorDataContext/getValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/CollectScope/CollectScope(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/OrderByScope/OrderByScope(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlSelect/isDistinct()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl$InsertNamespace/SqlValidatorImpl$InsertNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlInsert,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/createSelectNamespace(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlSelect/setFrom(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerSubQueries(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/AggFinder/findAgg(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlSelect/getFrom()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl$UpdateNamespace/SqlValidatorImpl$UpdateNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/UnnestNamespace/UnnestNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl$DeleteNamespace/SqlValidatorImpl$DeleteNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlDelete,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerFrom(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,org.apache.calcite.sql.SqlNodeList,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlInsert/getSource()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/TableConstructorNamespace/TableConstructorNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlSelect/getSelectList()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl$MergeNamespace/SqlValidatorImpl$MergeNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.SqlMerge,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlMerge/getSourceSelect()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlMerge/getInsertCall()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlSelect/getGroup()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/runtime/CalciteResource/sQLFeature_F312()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerWith(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlWith,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/runtime/CalciteResource/sQLFeature_F302()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/runtime/CalciteResource/sQLFeature_E101_03()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerOperandSubQueries(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlUpdate/getSourceSelect()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/ProcedureNamespace/ProcedureNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/runtime/CalciteResource/aggregateIllegalInOrderBy()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlDelete/getSourceSelect()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/isAggregate(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/runtime/CalciteResource/sQLFeature_E071_03()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlMerge/getUpdateCall()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/CollectNamespace/CollectNamespace(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerNamespace(org.apache.calcite.sql.validate.SqlValidatorScope,java.lang.String,org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SelectScope/SelectScope(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/runtime/CalciteResource/sQLFeature_S271()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/util/Util/unexpected(java.lang.Enum)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlSelect/getOrderList()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlNode/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/deriveAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/registerSetop(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateFeature(org.apache.calcite.runtime.Feature,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/registerQuery(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.String,boolean,boolean)#org/apache/calcite/sql/validate/AggregatingSelectScope/AggregatingSelectScope(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlSelect,boolean)
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorNamespace/lookupChild(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/only()
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/SqlValidatorScope$ResolvedImpl()
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/util/Util/skip(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/SqlValidatorUtil/lookup(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/count()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexBiVisitor,java.lang.Object)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/LogicVisitor/LogicVisitor(org.apache.calcite.rex.RexNode,java.util.Collection)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/EnumSet/noneOf(java.lang.Class)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Set/remove(java.lang.Object)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Set/size()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexProgram/getProjectList()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Set/iterator()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow$2/LogicalWindow$2()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Iterator/hasNext()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/core/Window$RexWinAggCall/Window$RexWinAggCall(org.apache.calcite.sql.SqlAggFunction,org.apache.calcite.rel.type.RelDataType,java.util.List,int)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow$WindowKey/access$000(org.apache.calcite.rel.logical.LogicalWindow$WindowKey)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow$WindowKey/access$100(org.apache.calcite.rel.logical.LogicalWindow$WindowKey)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/core/Window$RexWinAggCall/getType()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow$WindowKey/access$200(org.apache.calcite.rel.logical.LogicalWindow$WindowKey)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexOver/getType()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexOver/getAggOperator()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow$WindowKey/access$300(org.apache.calcite.rel.logical.LogicalWindow$WindowKey)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#com/google/common/collect/LinkedListMultimap/create()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow$WindowKey/access$400(org.apache.calcite.rel.logical.LogicalWindow$WindowKey)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/List/size()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map/size()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Iterator/next()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/HashMap/HashMap()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexOver/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow$1/LogicalWindow$1(java.util.Map,java.util.List,int)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow$3/LogicalWindow$3(java.util.Map,java.util.Map,java.util.List,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/IdentityHashMap/IdentityHashMap()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/core/Window$Group/Window$Group(org.apache.calcite.util.ImmutableBitSet,boolean,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rel.RelCollation,java.util.List)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexWindowBound/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/List/get(int)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/logical/LogicalWindow/toInputRefs(java.util.List)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#com/google/common/collect/Multimap/asMap()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/List/iterator()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Collection/iterator()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map/entrySet()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexProgram/getOutputRowType()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexProgram/getExprList()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/lang/Long/valueOf(long)
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/util/Map$Entry/getKey()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/util/TimeZone/getOffset(long)
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#org/apache/calcite/jdbc/CalciteConnectionImpl/getTypeFactory()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/util/Set/iterator()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#org/apache/calcite/util/Holder/of(java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/util/Map/entrySet()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/lang/Object/Object()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#org/apache/calcite/jdbc/CalciteConnectionImpl/getTimeZone()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/lang/Long/longValue()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/util/Map$Entry/getValue()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#org/apache/calcite/util/Holder/get()
org/apache/calcite/jdbc/CalciteConnectionImpl$DataContextImpl/CalciteConnectionImpl$DataContextImpl(org.apache.calcite.jdbc.CalciteConnectionImpl,java.util.Map)#java/lang/System/currentTimeMillis()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/rel/type/StructKind/ordinal()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/rel/type/StructKind/values()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/schema/Schema$TableType/ordinal()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/validate/SqlMonotonicity/values()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/validate/SqlModality/values()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/validate/SqlModality/ordinal()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/validate/SqlMonotonicity/ordinal()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/schema/Schema$TableType/values()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/JoinType/ordinal()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/JoinConditionType/values()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/JoinConditionType/ordinal()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/JoinType/values()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/SqlKind/values()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/type/SqlTypeName/values()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/type/SqlTypeName/ordinal()
java+initializer:///org/apache/calcite/sql/validate/SqlValidatorImpl$6/SqlValidatorImpl$6$initializer#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/AssertionError/AssertionError(int)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/util/List/size()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#com/google/common/collect/Iterables/getLast(java.lang.Iterable)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCluster()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(java.lang.Iterable)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/FilterAggregateTransposeRule/canPush(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput(int)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#org/apache/calcite/plan/ConventionTraitDef/getConversionData(org.apache.calcite.plan.RelOptPlanner)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/List/size()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#org/apache/calcite/plan/ConventionTraitDef$ConversionData/getPaths(org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/Iterator/next()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#org/apache/calcite/rel/RelNode/getConvention()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/List/get(int)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/List/iterator()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#org/apache/calcite/plan/RelOptCost/isInfinite()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#org/apache/calcite/plan/RelOptPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/util/List/removeAll(java.util.Collection)
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#com/google/common/collect/Sets/newIdentityHashSet()
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/util/HashMap/HashMap()
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/plan/SubstitutionVisitor$Holder/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/util/List/clear()
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/lang/Object/Object()
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/plan/SubstitutionVisitor$MutableRelVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/plan/SubstitutionVisitor$2/SubstitutionVisitor$2(org.apache.calcite.plan.SubstitutionVisitor,java.util.Set,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#com/google/common/collect/LinkedHashMultimap/create()
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/util/Set/clear()
org/apache/calcite/plan/SubstitutionVisitor/SubstitutionVisitor(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/lang/Double/valueOf(double)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#org/apache/calcite/plan/volcano/RuleQueue/updateImportance(org.apache.calcite.plan.volcano.RelSubset,java.lang.Double)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/lang/Math/min(double,double)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Iterator/remove()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#org/apache/calcite/plan/volcano/RuleQueue$1/RuleQueue$1(org.apache.calcite.plan.volcano.RuleQueue)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/lang/Double/doubleValue()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#org/apache/calcite/plan/volcano/RelSubset/propagateBoostRemoval(org.apache.calcite.plan.volcano.VolcanoPlanner)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Set/iterator()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Collection/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rel/core/JoinRelType/ordinal()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/util/mapping/Mappings/createShiftMapping(int,int%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rel/metadata/RelMdPredicates/access$000()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/plan/RelOptPredicateList/of(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/Class/forName(java.lang.String)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/Class/newInstance()
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/Class/getMethod(java.lang.String,java.lang.Class%5B%5D)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#org/apache/calcite/adapter/java/ReflectiveSchema/ReflectiveSchema(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/adapter/enumerable/PhysType/fieldClass(int)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/getTimeZoneExpression(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/jdbcGetMethod(org.apache.calcite.linq4j.tree.Primitive)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIf(boolean,java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions$FluentList/append(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/getMethod(org.apache.calcite.sql.type.SqlTypeName,boolean,boolean)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter$CalendarPolicy/ordinal()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Primitive/ofBoxOr(java.lang.reflect.Type)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/getMethod2(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/adapter/enumerable/PhysType/getRowType()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#java/util/List/get(int)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.jdbc.JdbcToEnumerableConverter$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_17()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_18()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_19()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/util/trace/CalciteTrace/getParserTracer()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl$1/SqlParserImpl$1()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_0()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_1()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_2()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_3()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_4()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_5()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_6()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_7()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_8()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_9()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_20()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_10()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_11()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_12()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_13()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_14()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_15()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#java/lang/Class/desiredAssertionStatus()
java+initializer:///org/apache/calcite/sql/parser/impl/SqlParserImpl/SqlParserImpl$initializer#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_la1_16()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rex/RexInputRef/of2(int,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rel/logical/LogicalProject/create(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter/findExpr(org.apache.calcite.rex.RexNode,java.util.List,int)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter/createAggregate(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/setRoot(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/makeBinary(org.apache.calcite.linq4j.tree.ExpressionType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/java/JavaTypeFactory/getJavaClass(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/ofBoxOr(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/callBackupMethodAnyType(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/anyAnyOperands(org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/contains(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$BinaryImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/rel/logical/LogicalAggregate/create(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptUtil/containsNullableFields(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptUtil$Exists/RelOptUtil$Exists(org.apache.calcite.rel.RelNode,boolean,boolean,org.apache.calcite.plan.RelOptUtil$1)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptUtil$SubQueryType/ordinal()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Field/getName()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#org/apache/calcite/util/Util/newInternal(java.lang.Throwable)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#org/apache/calcite/util/Util/discard(java.lang.Object)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/util/Iterator/hasNext()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/util/Iterator/next()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Class/getName()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/util/Enumeration/nextElement()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Class/getFields()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/io/PrintWriter/println()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Array/get(java.lang.Object,int)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Class/isArray()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Object/toString()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Field/get(java.lang.Object)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Array/getLength(java.lang.Object)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#org/apache/calcite/util/Util/printJavaString(java.io.PrintWriter,java.lang.String,boolean)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Object/getClass()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/util/Enumeration/hasMoreElements()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Field/getModifiers()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/util/ImmutableBitSet/except(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/util/ImmutableBitSet/length()
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/rex/RexWindow/getUpperBound()
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/rex/RexWindow/getLowerBound()
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/rel/logical/LogicalWindow$WindowKey/LogicalWindow$WindowKey(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelCollation,boolean,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/rel/logical/LogicalWindow/getProjectOrdinals(java.util.List)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/util/ImmutableBitSet/of(org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/rex/RexOver/getWindow()
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/rel/logical/LogicalWindow/getCollation(java.util.List)
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/rex/RexWindow/isRows()
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#org/apache/calcite/rel/logical/LogicalWindow$5/LogicalWindow$5()
org/apache/calcite/rel/logical/LogicalWindow/addWindows(com.google.common.collect.Multimap,org.apache.calcite.rex.RexOver,int)#com/google/common/collect/Iterables/filter(java.lang.Iterable,com.google.common.base.Predicate)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/adapter/enumerable/AggResetContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Primitive/of(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/adapter/enumerable/AggContext/aggregation()
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/adapter/enumerable/AggResetContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$MinMaxImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getProjFields()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#org/apache/calcite/util/ImmutableBitSet/nextSetBit(int)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getInputs()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/getRightPrec()
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/needsSpace()
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameTypeEnum)
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/getLeftPrec()
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlUtil/unparseBinarySyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/setNeedWhitespace(boolean)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexLiteral/isNullLiteral(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/scaleDown(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/toString()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/decodeValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isIntType(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isApproximateNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/scaleDownDouble(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isExactNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeUtil/isDecimal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/rel/type/StructKind/ordinal()
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/rel/type/RelDataType/toString()
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#java/util/List/iterator()
org/apache/calcite/rel/type/RelRecordType/generateTypeString(java.lang.StringBuilder,boolean)#org/apache/calcite/rel/type/RelDataType/getFullTypeString()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/util/List/get(int)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#org/apache/calcite/sql/validate/SqlValidatorImpl/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/lang/Integer/intValue()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/metadata/RelMdSize/typeValueSize(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable)
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/metadata/RelMdSize/averageRexSize(org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/RelOptRule/matches(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/RelOptRuleOperand/getMatchedClass()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/VolcanoRuleCall/getRule()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/List/size()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/RelSubset/getRelList()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/RelOptRuleOperand/getParent()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/RelSet/getRelsFromAllSubsets()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/RelOptRuleOperand/matches(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/VolcanoRuleCall/setChildRels(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/VolcanoRuleCall/getChildRels(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/Collection/iterator()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/RelOptRuleOperandChildPolicy/ordinal()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/rel/RelNode/getInput(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/RelSubset/getParentRels()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/arguments()
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexSubQuery/RexSubQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,com.google.common.collect.ImmutableList,org.apache.calcite.rel.RelNode)
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/rex/RexSubQuery/scalar(org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlParser$Config/conformance()
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlParser$Config/quoting()
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlAbstractParserImpl/setIdentifierMaxLength(int)
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlParser$Config/unquotedCasing()
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlAbstractParserImpl/setUnquotedCasing(org.apache.calcite.avatica.util.Casing)
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlAbstractParserImpl/switchTo(java.lang.String)
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlParser$Config/identifierMaxLength()
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlParser$Config/quotedCasing()
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlAbstractParserImpl/setQuotedCasing(org.apache.calcite.avatica.util.Casing)
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlAbstractParserImpl/setConformance(org.apache.calcite.sql.validate.SqlConformance)
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#java/lang/Object/Object()
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlAbstractParserImpl/setOriginalSql(java.lang.String)
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/sql/parser/SqlAbstractParserImpl/setTabSize(int)
org/apache/calcite/sql/parser/SqlParser/SqlParser(java.lang.String,org.apache.calcite.sql.parser.SqlAbstractParserImpl,org.apache.calcite.sql.parser.SqlParser$Config)#org/apache/calcite/avatica/util/Quoting/ordinal()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMetadataQuery/getDistinctRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/List/isEmpty()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil/splitFilters(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMdUtil/setAggChildKeys(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet$Builder)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMdUtil/guessSelectivity(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Double/doubleValue()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/reflect/Array/get(java.lang.Object,int)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/Integer/intValue()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/util/CompatibleGuava11/asMap(java.util.Set,com.google.common.base.Function)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/Class/getMethod(java.lang.String,java.lang.Class%5B%5D)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/reflect/Method/getName()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/Object/getClass()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/util/CompatibleGuava11/navigableSet(com.google.common.collect.ImmutableSortedSet)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#com/google/common/collect/ImmutableSortedMap/copyOf(java.util.Map)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/util/CompatibleGuava11/navigableMap(com.google.common.collect.ImmutableSortedMap)
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#org/apache/calcite/server/CalciteServerStatement/setResultSet(java.util.Iterator)
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#java/util/List/size()
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#java/lang/Iterable/iterator()
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#org/apache/calcite/jdbc/CalciteMetaImpl$LimitIterator/of(java.util.Iterator,long)
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#org/apache/calcite/avatica/MetaImpl/collect(org.apache.calcite.avatica.Meta$CursorFactory,java.util.Iterator,java.util.List)
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#org/apache/calcite/server/CalciteServerStatement/getResultSet()
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#org/apache/calcite/jdbc/CalciteMetaImpl/_createIterable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.avatica.Meta$Signature,java.util.List,org.apache.calcite.avatica.Meta$Frame)
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#org/apache/calcite/jdbc/CalciteMetaImpl/getConnection()
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#org/apache/calcite/avatica/Meta$Frame/Meta$Frame(long,boolean,java.lang.Iterable)
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#org/apache/calcite/server/CalciteServerStatement/getSignature()
org/apache/calcite/jdbc/CalciteMetaImpl/fetch(org.apache.calcite.avatica.Meta$StatementHandle,long,int)#org/apache/calcite/server/CalciteServer/getStatement(org.apache.calcite.avatica.Meta$StatementHandle)
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#org/apache/calcite/sql/SqlTimeLiteral/getTime()
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#java/lang/Long/toString(long)
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#java/util/Calendar/getTimeInMillis()
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#java/util/Calendar/get(int)
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#org/apache/calcite/sql/SqlTimeLiteral/getCal()
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#java/lang/String/length()
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#org/apache/calcite/util/ZonelessTime/toString(java.lang.String)
org/apache/calcite/sql/SqlTimeLiteral/toFormattedString()#java/lang/String/substring(int,int)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeNullLiteral(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/access$400(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getValidator()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexUtil/composeDisjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/sql/SqlSplittableAggFunction$Registry/register(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/size()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/get(int)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/getInput(int)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/minus(boolean,int)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/union(boolean,int)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/getInputs()
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/skip(java.util.List)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleOperand/getMatchedClass()
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/pushAll(java.lang.Iterable)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/UnionMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/intersect(boolean,int)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/PrintStream/print(java.lang.String)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/PrintStream/println()
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#org/apache/calcite/avatica/util/Spaces/append(java.lang.Appendable,int)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/lang/Integer/toString(int)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/lang/String/length()
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/BufferedReader/readLine()
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/equal(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidator/getTypeFactory()
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/SqlNode/isA(java.util.Set)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/prepare/Prepare$CatalogReader/isCaseSensitive()
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#java/util/List/subList(int,int)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/toString(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidatorUtil/uniquify(java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/checkConvertedType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFullTypeString()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$TokenType/ordinal()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Query/findClause(org.apache.calcite.sql.advise.SqlSimpleParser$TokenType)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Token/access$200(org.apache.calcite.sql.advise.SqlSimpleParser$Token)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/size()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/clear()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/get(int)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Token/access$100(org.apache.calcite.sql.advise.SqlSimpleParser$Token)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/subList(int,int)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableUncollect/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/toArray(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/primitives/Ints/toArray(java.util.Collection)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableUncollect/getInput()
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#org/apache/calcite/sql/SqlFunction/getParamNames()
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#org/apache/calcite/linq4j/function/Functions/generate(int,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#java/util/List/size()
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#org/apache/calcite/sql/SqlFunction/getParamTypes()
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#org/apache/calcite/sql/SqlUtil$4$1/SqlUtil$4$1(org.apache.calcite.sql.SqlUtil$4,java.util.Map)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#java/util/List/iterator()
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#java/util/Iterator/next()
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#java/util/HashMap/HashMap()
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/SqlUtil$4/apply(org.apache.calcite.sql.SqlFunction)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.String)
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getValidator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertRow(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlRowOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/deriveReturnType(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/Object/toString()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/Class/newInstance()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/util/List/toArray()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/util/Arrays/toString(java.lang.Object%5B%5D)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#org/apache/calcite/runtime/Resources$ExInst/ex(java.lang.Throwable)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/getModifiers()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/toString()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#org/apache/calcite/runtime/CalciteResource/illegalArgumentForTableFunctionCall(java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getConvention()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/InvalidRelException/InvalidRelException(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable/get(org.apache.calcite.sql.SqlAggFunction,boolean)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#org/apache/calcite/rex/RexProgramBuilder/addProject(org.apache.calcite.rex.RexNode,java.lang.String)
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#java/util/List/isEmpty()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#java/util/List/iterator()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#java/util/Iterator/next()
org/apache/calcite/rex/RexProgramBuilder/addIdentity()#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/appendIfNotNull(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/generateCollationKey(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableSort/getInput()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableSort/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setDebuggingInformation(boolean,boolean,boolean)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/createInstance(java.io.Reader)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/ICompilerFactory/newClassBodyEvaluator()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setClassName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setImplementedInterfaces(java.lang.Class%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/CompilerFactoryFactory/getDefaultCompilerFactory()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#java/lang/Class/getClassLoader()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setParentClassLoader(java.lang.ClassLoader)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setExtendedClass(java.lang.Class)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/startIndex()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/currentPosition()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/computeNewRank(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggAddContext)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/compareRows(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/lessThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/exitBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/greaterThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/nestBlock()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/clone(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlPostfixOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNodeList/add(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/fun/SqlCoalesceFunction/validateQuantifier(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getFunctionQuantifier()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getParserPosition()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/fun/SqlCase/createSwitched(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/getParserPosition()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#org/apache/calcite/util/PrecedenceClimbingParser$Token/print(java.lang.StringBuilder)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/util/Iterator/hasNext()
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/util/Iterator/next()
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#org/apache/calcite/util/PrecedenceClimbingParser$Type/ordinal()
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/util/List/iterator()
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#org/apache/calcite/util/PrecedenceClimbingParser$Call/printOp(java.lang.StringBuilder,boolean,boolean)
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/util/graph/DefaultDirectedGraph/addEdge(java.lang.Object,java.lang.Object)#org/apache/calcite/util/graph/DirectedGraph$EdgeFactory/createEdge(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Set/iterator()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/List/get(int)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Map/entrySet()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/String/toLowerCase()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/List/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.util.List,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Map$Entry/getValue()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexProgramBuilder/getProgram()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/JavaTypeFactoryImpl(org.apache.calcite.rel.type.RelDataTypeSystem)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/RexToLixTranslator$InputGetterImpl(java.util.List)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat,boolean)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateProjects(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/arrayIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexProgramBuilder/addProject(org.apache.calcite.rex.RexNode,java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Field)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/valueOf(int)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/interpreter/JaninoRexCompiler$1/JaninoRexCompiler$1(org.apache.calcite.interpreter.JaninoRexCompiler)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#org/apache/calcite/sql/validate/SqlValidatorTable/getQualifiedName()
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#org/apache/calcite/sql/validate/SqlValidatorNamespace/lookupChild(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#org/apache/calcite/sql/SqlUtil/stripAs(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#org/apache/calcite/sql/validate/SelectScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getTable()
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#org/apache/calcite/sql/validate/SqlValidatorImpl/getRawSelectScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#org/apache/calcite/sql/validate/SelectScope/getExpandedSelectList()
org/apache/calcite/sql/validate/SqlValidatorImpl/getFieldOrigin(org.apache.calcite.sql.SqlNode,int)#org/apache/calcite/sql/validate/SqlQualified/suffix()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql2rel/SqlToRelConverter$4/SqlToRelConverter$4(org.apache.calcite.sql2rel.SqlToRelConverter,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql2rel/SqlToRelConverter/createBlackboard(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.Map,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/rel/core/Collect/Collect(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/SqlCall/getParserPosition()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/rel/core/RelFactories$JoinFactory/createJoin(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/plan/RelOptCluster/traitSetOf(org.apache.calcite.plan.RelTrait)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/validate/CollectNamespace/getScope()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/rel/logical/LogicalValues/createOneRow(org.apache.calcite.plan.RelOptCluster)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql2rel/SqlToRelConverter/convertQuery(org.apache.calcite.sql.SqlNode,boolean,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/validate/SqlValidator/getNamespace(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql2rel/SqlToRelConverter/convertQueryOrInList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/validate/SqlValidator/setValidatedNodeType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/validate/SqlValidator/deriveAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/SqlUtil/deriveAliasFromOrdinal(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rel/logical/LogicalTableModify/create(org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare$CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify$Operation,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/getUpdateCall()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/util/Util/skip(java.util.List,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlUpdate/getTargetColumnList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rel/RelNode/getInput(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/getInsertCall()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql2rel/SqlToRelConverter/convertInsert(org.apache.calcite.sql.SqlInsert)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/getSourceSelect()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql2rel/SqlToRelConverter/convertSelect(org.apache.calcite.sql.SqlSelect,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/validate/SqlValidatorUtil/getTargetField(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql2rel/SqlToRelConverter/getTargetTable(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/dispatchTrimFields(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/rebuild()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Set/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/metadata/RelMetadataQuery/collations(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelNode/accept(org.apache.calcite.rel.RelShuttle)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelNode/getVariablesSet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer$1/RelFieldTrimmer$1(org.apache.calcite.sql2rel.RelFieldTrimmer,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet$Builder)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#org/apache/calcite/rel/RelFieldCollation$Direction/monotonicity()
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#org/apache/calcite/schema/Table/getStatistic()
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#java/util/List/get(int)
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#java/util/List/iterator()
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#org/apache/calcite/schema/Statistic/getCollations()
org/apache/calcite/prepare/RelOptTableImpl/getMonotonicity(java.lang.String)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/JaninoCompiler$AccountingClassLoader(java.lang.ClassLoader,org.codehaus.janino.util.resource.ResourceFinder,java.lang.String,java.io.File)
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/util/HashMap/HashMap()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/io/File/File(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/apache/calcite/util/Util/newInternal(java.lang.Throwable,java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/codehaus/janino/util/ClassFile/getSourceResourceName(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/loadClass(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/apache/calcite/util/javac/JaninoCompiler$JaninoCompilerArgs/getClassLoader()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/String/getBytes()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/StringBuilder/toString()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/codehaus/janino/util/resource/MapResourceFinder/MapResourceFinder(java.util.Map)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/rel/logical/LogicalWindow/getInput()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/rel/rules/ProjectWindowTransposeRule$2/ProjectWindowTransposeRule$2(org.apache.calcite.rel.rules.ProjectWindowTransposeRule,int,org.apache.calcite.util.ImmutableBitSet$Builder)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/rel/logical/LogicalProject/getChildExps()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#org/apache/calcite/rel/core/Window$RexWinAggCall/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/sql/SqlWindow/createUnboundedFollowing(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/rex/RexWindowBound/isCurrentRow()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/sql/SqlWindow/createPreceding(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/rex/RexWindowBound/isFollowing()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/rex/RexWindowBound/getOffset()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/sql/SqlWindow/createUnboundedPreceding(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/sql/SqlWindow/createFollowing(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/rex/RexWindowBound/isPreceding()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/sql/SqlWindow/createCurrentRow(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createSqlWindowBound(org.apache.calcite.rex.RexWindowBound)#org/apache/calcite/rex/RexWindowBound/isUnbounded()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/setRows(org.apache.calcite.sql.SqlLiteral)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlNodeToRexConverter/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/util/Util/permAssert(boolean,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/createCurrentRow(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/setUpperBound(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/setLowerBound(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexBuilder/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlLiteral/createBoolean(boolean,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/getPartitionList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertSortExpression(org.apache.calcite.sql.SqlNode,java.util.Set)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/getOrderList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorScope/getOrderList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/EnumSet/noneOf(java.lang.Class)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidator/resolveWindow(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/isRows()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/createUnboundedPreceding(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/getUpperBound()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexWindowBound/create(org.apache.calcite.sql.SqlNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlWindow/getLowerBound()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexFieldCollation/RexFieldCollation(org.apache.calcite.rex.RexNode,java.util.Set)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/SqlToRelConverter$HistogramShuttle(org.apache.calcite.sql2rel.SqlToRelConverter,java.util.List,com.google.common.collect.ImmutableList,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.sql.SqlWindow)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Set/clear()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/type/SqlTypeFamily/getTypeNames()
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlCallBinding/getScope()
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlCallBinding/newValidationSignatureError()
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/runtime/CalciteResource/nullIllegal()
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlUtil/isNullLiteral(org.apache.calcite.sql.SqlNode,boolean)
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/List/equals(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/RelOptUtil/replaceRecurse(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/addRelToGraph(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/RelOptCost/isLt(org.apache.calcite.plan.RelOptCost)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/isEmpty()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/size()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/get(int)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/iterator()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/RelTraitSet/contains(org.apache.calcite.plan.RelTrait)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/dumpGraph()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/collectGarbage()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/notifyTransformation(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/getListener()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/util/graph/Graphs/predecessorListOf(org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepRuleCall/getResults()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#java/util/Iterator/next()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List,java.util.List)
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#org/apache/calcite/prepare/CalcitePrepareImpl/createConvertletTable()
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#org/apache/calcite/jdbc/CalcitePrepare$Context/getTypeFactory()
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#org/apache/calcite/prepare/CalciteMaterializer/CalciteMaterializer(org.apache.calcite.prepare.CalcitePrepareImpl,org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.prepare.Prepare$CatalogReader,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.sql2rel.SqlRexConvertletTable)
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#org/apache/calcite/config/CalciteConnectionConfig/caseSensitive()
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#org/apache/calcite/jdbc/CalcitePrepare$Context/config()
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#org/apache/calcite/prepare/CalciteCatalogReader/CalciteCatalogReader(org.apache.calcite.jdbc.CalciteSchema,boolean,java.util.List,org.apache.calcite.adapter.java.JavaTypeFactory)
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#org/apache/calcite/prepare/CalciteMaterializer/populate(org.apache.calcite.prepare.Prepare$Materialization)
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#org/apache/calcite/jdbc/CalciteSchema/root()
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/populateMaterializations(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.prepare.Prepare$Materialization)#org/apache/calcite/jdbc/CalciteSchema$TableEntry/path()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/RelRoot/project()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlSampleSpec$SqlSubstitutionSampleSpec/getName()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/replaceSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorUtil/deriveNaturalJoinColumnList(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertQueryRecursive(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlSampleSpec$SqlTableSampleSpec/getRepeatableSeed()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/logical/LogicalValues/createOneRow(org.apache.calcite.plan.RelOptCluster)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlJoin/isNatural()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertJoinCondition(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.JoinConditionType,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/core/Uncollect/Uncollect(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Config/isConvertTableAccess()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidator/getNamespace(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/setRoot(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/logical/LogicalTableScan/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getNode()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Deque/peek()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/setDataset(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlLiteral/sampleValue(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/DelegatingScope/getParent()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertJoinType(org.apache.calcite.sql.JoinType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/createBlackboard(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.Map,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlBasicCall/getOperands()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertCollectionTable(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Deque/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/plan/RelOptSamplingParameters/RelOptSamplingParameters(boolean,float,boolean,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlSampleSpec$SqlTableSampleSpec/isRepeatable()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidator/getJoinScope(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlJoin/getConditionType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorUtil/getRelOptTable(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.prepare.Prepare$CatalogReader,java.lang.String,boolean%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorNamespace/resolve()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/core/Sample/Sample(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptSamplingParameters)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlJoin/getCondition()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/toRel(org.apache.calcite.plan.RelOptTable)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlJoin/getRight()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidator/deriveAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlJoin/getJoinType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Deque/pop()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlSampleSpec$SqlTableSampleSpec/getSamplePercentage()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlSampleSpec$SqlTableSampleSpec/isBernoulli()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/plan/RelOptCluster/traitSetOf(org.apache.calcite.plan.RelTrait)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlJoin/getLeft()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/ArrayList/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rex/RexInputRef/of(int,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Map/putAll(java.util.Map)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/remove(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/TreeMap/TreeMap(java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableSortedSet/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableSortedMap/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getInput(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/keySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/putAll(java.util.Map)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableSortedMap/keySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/sql2rel/RelDecorrelator/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.Map,java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/core/CorrelationId/equals(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Set/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/sql2rel/RelDecorrelator/getInvoke(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getCorrelationId()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRequiredColumns()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/get(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/plan/RelOptUtil$InputFinder/RelOptUtil$InputFinder(java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/create(org.apache.calcite.util.mapping.MappingType,int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/dummyProject(int,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/Class/getInterfaces()
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/Class/getSuperclass()
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/Class/getMethod(java.lang.String,java.lang.Class%5B%5D)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/reflect/Method/equals(java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class%5B%5D,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#org/apache/calcite/rel/RelFieldCollation$NullDirection/ordinal()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#org/apache/calcite/tools/RelBuilder/desc(org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#org/apache/calcite/rel/RelFieldCollation$Direction/ordinal()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#org/apache/calcite/tools/RelBuilder/nullsFirst(org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#org/apache/calcite/tools/RelBuilder/field(int)
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#org/apache/calcite/tools/RelBuilder/nullsLast(org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.rel.RelCollation)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Class/cast(java.lang.Object)
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$ChainedInvocationHandler/ChainedRelMetadataProvider$ChainedInvocationHandler(java.util.List)
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Class/getClassLoader()
org/apache/calcite/rel/metadata/ChainedRelMetadataProvider$1/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/UnboundMetadata/bind(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeCorrel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.CorrelationId)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SemiJoinType/of(org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinToCorrelateRule/matches(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCorrelate/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.sql.SemiJoinType)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinToCorrelateRule$1/JoinToCorrelateRule$1(org.apache.calcite.rel.rules.JoinToCorrelateRule,int,org.apache.calcite.rex.RexBuilder,org.apache.calcite.util.ImmutableBitSet$Builder,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/getCluster()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/getRight()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/createCorrel()
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/JoinToCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#com/google/common/collect/ImmutableList/copyOf(java.lang.Object%5B%5D)
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/util/Arrays/asList(java.lang.Object%5B%5D)
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/util/List/subList(int,int)
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/util/List/size()
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/util/List/iterator()
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/lang/Class/getDeclaredMethods()
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#org/apache/calcite/util/Pair/zip(java.lang.Object%5B%5D,java.lang.Object%5B%5D)
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/util/List/get(int)
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/metadata/MetadataDef/MetadataDef(java.lang.Class,java.lang.Class,java.lang.reflect.Method%5B%5D)#java/lang/Object/Object()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/interpreter/Interpreter/createContext()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/interpreter/TableScanNode$2/TableScanNode$2(org.apache.calcite.interpreter.Context,org.apache.calcite.interpreter.Scalar)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/util/mapping/Mappings/target(java.util.List,int)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/linq4j/Enumerable/select(org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/util/List/isEmpty()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/interpreter/Interpreter/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/util/List/get(int)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/interpreter/TableScanNode/TableScanNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/interpreter/TableScanNode$3/TableScanNode$3(org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/util/ImmutableIntList/iterator()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/lang/Integer/intValue()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/util/Iterator/next()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rex.RexNode)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/core/TableScan/getTable()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/core/TableScan/getRowType()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/linq4j/Enumerable/where(org.apache.calcite.linq4j.function.Predicate1)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/core/TableScan/getCluster()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#org/apache/calcite/materialize/Lattice$Builder/resolveColumnByAlias(java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/util/List/iterator()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameTypeEnum)
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/identifier(java.lang.String)
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/print(java.lang.String)
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlCollation/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#org/apache/calcite/prepare/CalciteMaterializer$Callback/CalciteMaterializer$Callback(org.apache.calcite.rel.RelNode,org.apache.calcite.jdbc.CalciteSchema$TableEntry,org.apache.calcite.prepare.RelOptTableImpl)
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#org/apache/calcite/jdbc/CalciteSchema$TableEntry/getTable()
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#org/apache/calcite/schema/Schemas/getStarTables(org.apache.calcite.jdbc.CalciteSchema)
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#org/apache/calcite/jdbc/CalciteSchema/root()
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptMaterialization/tryUseStar(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptMaterialization/toLeafJoinForm(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#org/apache/calcite/schema/Table/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/prepare/CalciteMaterializer/useStar(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.rel.RelNode)#org/apache/calcite/prepare/RelOptTableImpl/create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.jdbc.CalciteSchema$TableEntry,java.lang.Double)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/rel/logical/LogicalTableModify/create(org.apache.calcite.plan.RelOptTable,org.apache.calcite.prepare.Prepare$CatalogReader,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify$Operation,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql/SqlUpdate/getSourceSelect()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql/SqlUpdate/getSourceExpressionList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql2rel/SqlToRelConverter/convertSelect(org.apache.calcite.sql.SqlSelect,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql/validate/SqlValidatorUtil/getTargetField(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql2rel/SqlToRelConverter/getTargetTable(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql2rel/SqlToRelConverter/createBlackboard(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.Map,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql/SqlUpdate/getTargetColumnList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#org/apache/calcite/sql/validate/SqlValidator/getWhereScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlLiteral/getValue()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/util/ImmutableNullableList/copyOf(java.util.Collection)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlUserDefinedTableMacro$NonLiteralException/SqlUserDefinedTableMacro$NonLiteralException(org.apache.calcite.sql.validate.SqlUserDefinedTableMacro$1)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUtil/isNullLiteral(org.apache.calcite.sql.SqlNode,boolean)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUtil/isLiteral(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/SingleRel/SingleRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/Aggregate/typeMatchesInferred(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.util.Litmus)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/length()
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#com/google/common/collect/Ordering/isStrictlyOrdered(java.lang.Iterable)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/Aggregate/isPredicate(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#org/apache/calcite/util/CompatibleGuava11$EntrySet/contains(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#com/google/common/collect/Sets/newHashSetWithExpectedSize(int)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Set/retainAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Collection/size()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#org/apache/calcite/util/CompatibleGuava11$ImprovedAbstractSet/retainAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Collection/iterator()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#org/apache/calcite/util/CompatibleGuava11$EntrySet/map()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Map/keySet()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#org/apache/calcite/sql/SqlCallBinding/getScope()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#java/util/List/get(int)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/deriveAndCollectTypes(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#org/apache/calcite/sql/SqlCallBinding/newError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#org/apache/calcite/sql/SqlNode/toString()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#java/util/List/size()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(org.apache.calcite.sql.SqlCallBinding,java.util.List,boolean)#org/apache/calcite/runtime/CalciteResource/operandNotComparable(java.lang.String)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SelectScope/getNode()
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/groupingArgument(java.lang.String)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/AggregatingSelectScope$Resolved/isGroupingExpr(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorUtil/getEnclosingAggregateSelectScope(org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/groupingInWrongClause(java.lang.String)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/groupingInAggregate(java.lang.String)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/iterator()
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/expandOrderExpr(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorUtil/getEnclosingSelectScope(org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/fun/SqlAbstractGroupFunction/getName()
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/isAggregate(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/fun/SqlAbstractGroupFunction/validateCall(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope)#com/google/common/base/Supplier/get()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/rules/JoinToMultiJoinRule/canCombine(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/core/JoinRelType/ordinal()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineOuterJoins(org.apache.calcite.rel.core.Join,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#java/util/List/size()
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#org/apache/calcite/rel/type/RelDataTypeSystem/isSchemaCaseSensitive()
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#org/apache/calcite/sql/validate/SqlValidatorUtil/uniquify(java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester,boolean)
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexUtil/createStructType(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlValidatorUtil$Suggester)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/and(java.util.BitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumJoinFactors()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/rel/rules/LoptMultiJoin/getOuterJoinFactors(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/clear(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/util/ImmutableBitSet/toBitSet()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFactorToTree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/set(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/rel/rules/LoptMultiJoin/isNullGenerating(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFilters()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/util/BitSets/range(int,int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/rel/rules/LoptMultiJoin/getOtherSelfJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/or(java.util.BitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/cardinality()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/BitSet(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#org/apache/calcite/rel/rules/LoptMultiJoin/getFactorsRefByFactor(int)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#org/apache/calcite/rex/RexLocalRef/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/size()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#org/apache/calcite/rex/RexProgramBuilder$UpdateRefShuttle/RexProgramBuilder$UpdateRefShuttle(org.apache.calcite.rex.RexProgramBuilder,java.util.List,org.apache.calcite.rex.RexProgramBuilder$1)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/Iterator/next()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#org/apache/calcite/rex/RexProgramBuilder/addCondition(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/RexProgramBuilder$RegisterInputShuttle(org.apache.calcite.rex.RexProgramBuilder,boolean)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/get(int)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/iterator()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/reflect/Method/equals(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/util/List/get(int)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/Exception/getCause()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#%5BLjava/lang/Object;/clone()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#com/google/common/base/Throwables/propagateIfPossible(java.lang.Throwable)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#com/google/common/collect/ImmutableList/indexOf(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/access$000(org.apache.calcite.rel.metadata.ReflectiveRelMetadataProvider$Space2)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/Object/toString()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#java/lang/Class/getSimpleName()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/runtime/FlatLists/copyOf(java.lang.Object%5B%5D)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)#org/apache/calcite/runtime/FlatLists/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/adapter/enumerable/AggContext/returnType()
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/adapter/enumerable/AggResetContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/adapter/enumerable/AggResetContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable$SumImplementor/implementNotNullReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)#java/util/List/get(int)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#java/lang/Integer/intValue()
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#org/apache/calcite/util/Util/enumVal(java.lang.Class,java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toType(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object,java.lang.Object)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/JsonBuilder/list()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/JsonBuilder/map()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/allowsPrec()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/allowsScale()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/name()
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#java/util/Iterator/hasNext()
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#org/apache/calcite/sql/SqlNodeList/getList()
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#java/util/List/size()
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#java/util/Iterator/next()
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#org/apache/calcite/sql/SqlNodeList/getParserPosition()
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#java/util/List/iterator()
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/util/SqlShuttle/visit(org.apache.calcite.sql.SqlNodeList)#org/apache/calcite/sql/SqlNode/accept(org.apache.calcite.sql.util.SqlVisitor)
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigDecimal/scale()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigDecimal/unscaledValue()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigInteger/abs()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigInteger/longValue()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericScale()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/lang/AssertionError/AssertionError(int)
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigDecimal/equals(java.lang.Object)
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/lang/String/length()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigInteger/toString()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int,int)
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigDecimal/valueOf(long,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/rel/RelFieldCollation/RelFieldCollation(int,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql/SqlNode/equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql/SqlUtil/stripAs(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/config/NullCollation/last(boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql/validate/SelectScope/getExpandedSelectList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/rel/RelFieldCollation$NullDirection/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql/validate/SqlValidator/getRawSelectScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql/validate/SqlValidator/expandOrderExpr(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql2rel/SqlToRelConverter/desc(org.apache.calcite.rel.RelFieldCollation$Direction)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#org/apache/calcite/sql/validate/SqlValidator/getDefaultNullCollation()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode,java.util.List,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/Util/stringToList(java.lang.String)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/util/Util/stringToList(java.lang.String)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/String/charAt(int)
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/String/isEmpty()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/StringBuilder/setLength(int)
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/String/length()
org/apache/calcite/util/Util/stringToList(java.lang.String)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/util/Util/stringToList(java.lang.String)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#org/apache/calcite/schema/TableMacro/apply(java.util.List)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/List/isEmpty()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/build()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/next()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#org/apache/calcite/schema/Function/getParameters()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap/containsKey(java.lang.Object)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/lang/System/currentTimeMillis()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Collection/iterator()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#org/apache/calcite/schema/Schema/getFunctions(java.lang.String)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#org/apache/calcite/jdbc/CachingCalciteSchema$Cached/get(long)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/NavigableSet/iterator()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/util/List/size()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#org/apache/calcite/runtime/CalciteResource/firstParameterOfAdd(java.lang.String)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#org/apache/calcite/util/ReflectUtil/isParameterOptional(java.lang.reflect.Method,int)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#org/apache/calcite/schema/impl/ReflectiveFunctionBase$ParameterListBuilder/add(java.lang.Class,java.lang.String,boolean)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#org/apache/calcite/schema/impl/AggregateFunctionImpl/AggregateFunctionImpl(java.lang.Class,java.util.List,java.util.List,java.lang.Class,java.lang.Class,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#com/google/common/collect/ImmutableList/copyOf(java.lang.Object%5B%5D)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/util/List/isEmpty()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#org/apache/calcite/util/ReflectUtil/getParameterName(java.lang.reflect.Method,int)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#org/apache/calcite/schema/impl/ReflectiveFunctionBase$ParameterListBuilder/build()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#org/apache/calcite/schema/impl/ReflectiveFunctionBase/builder()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#org/apache/calcite/runtime/Resources$ExInst/ex()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#org/apache/calcite/schema/impl/ReflectiveFunctionBase/findMethod(java.lang.Class,java.lang.String)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/lang/reflect/Method/getReturnType()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/lang/Class/getName()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/util/List/get(int)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/sql/type/SqlTypeName/getJdbcOrdinal()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/sql/type/SqlTypeName/values()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/avatica/MetaImpl$MetaTypeInfo/MetaImpl$MetaTypeInfo(java.lang.String,int,java.lang.Integer,java.lang.String,java.lang.String,short,boolean,short,boolean,boolean,boolean,java.lang.Short,java.lang.Short,java.lang.Integer)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/rel/type/RelDataTypeSystem/getNumTypeRadix(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/rel/type/RelDataTypeSystem/getLiteral(org.apache.calcite.sql.type.SqlTypeName,boolean)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/sql/type/SqlTypeName/getMinScale()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxPrecision(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/adapter/java/JavaTypeFactory/getTypeSystem()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/sql/type/SqlTypeName/getName()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#java/lang/Short/valueOf(short)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxScale(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/rel/type/RelDataTypeSystem/isCaseSensitive(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#java/lang/Integer/valueOf(int)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/rel/type/RelDataTypeSystem/isAutoincrement(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/adapter/enumerable/AggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/adapter/enumerable/WinAggImplementor/needCacheWhenFrameIntact()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/adapter/enumerable/EnumerableWindow$5/EnumerableWindow$5(org.apache.calcite.adapter.enumerable.EnumerableWindow,org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,com.google.common.base.Function,com.google.common.base.Function,org.apache.calcite.adapter.enumerable.AggImpState)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/plan/RelOptUtil$TypeDumper/acceptFields(java.util.List)
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/plan/RelOptUtil$TypeDumper/accept(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFullTypeString()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$Operand/matches(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/getCondition()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/getInput()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/Object/getClass()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$Operand/isWeaker(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/copy(java.lang.Object%5B%5D,int)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/getRowType()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/MaterializedViewSubstitutionVisitor/access$100(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$UnifyRuleCall/SubstitutionVisitor$UnifyRuleCall(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$UnifyRule,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,com.google.common.collect.ImmutableList)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$ProjectToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/getInput()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/deriveAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/get(int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/validate/SqlValidatorWithHints/validate(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/advise/SqlAdvisor/isSelectListItem(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/validate/SqlValidatorWithHints/lookupHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/validate/SqlMonikerImpl/SqlMonikerImpl(java.util.List,org.apache.calcite.sql.validate.SqlMonikerType)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/String/substring(int,int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/util/List/contains(java.lang.Object)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/util/Util/swallow(java.lang.Throwable,org.slf4j.Logger)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/util/List/remove(java.lang.Object)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/parser/SqlParserPos/getColumnNum()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/String/substring(int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/advise/SqlAdvisor/tryParse(java.lang.String,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/SqlFunction/getSqlIdentifier()
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/getNamedType(org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/SqlFunction/validateOperands(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/SqlFunction/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/SqlCall/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/runtime/CalciteResource/unknownDatatypeName(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/SqlBasicCall/setOperator(org.apache.calcite.sql.SqlOperator)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/type/ReturnTypes/explicit(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/shouldExpandIdentifiers()
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/SqlFunction/SqlFunction(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.sql.SqlFunctionCategory)
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/rel/type/RelDataType/getSqlIdentifier()
org/apache/calcite/sql/validate/SqlValidatorImpl/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/schema/SchemaPlus/getSubSchema(java.lang.String)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/DataContext/getRootSchema()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/interpreter/Interpreter/getDataContext()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/lang/reflect/Modifier/isPublic(int)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/schema/Schemas/queryable(org.apache.calcite.DataContext,java.lang.Class,java.lang.Iterable)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/lang/Class/getFields()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/linq4j/Queryable/select(org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/util/Iterator/next()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/rel/core/TableScan/getTable()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/schema/QueryableTable/getElementType()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/interpreter/TableScanNode$1/TableScanNode$1(java.util.List)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/util/Util/skipLast(java.util.List)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/lang/reflect/Field/getModifiers()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/util/List/iterator()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/lang/Integer/intValue()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rel2sql/SqlImplementor$Builder/result()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/List/isEmpty()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rel2sql/SqlImplementor$Builder/setGroupBy(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/field(int)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/visitChild(int,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/rewriteSingleValueExpr(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlDialect)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/List/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rel2sql/SqlImplementor$Builder/setSelect(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/print(java.lang.String)
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlJdbcFunctionCall/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/iterator()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/logical/LogicalProject/getCluster()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexProgramBuilder/getProgram()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/core/SemiJoin/getSystemFieldList()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexProgramBuilder/addCondition(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/List/get(int)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/logical/LogicalProject/getNamedProjects()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexProgramBuilder/addIdentity()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexProgram/expandLocalRef(org.apache.calcite.rex.RexLocalRef)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/core/SemiJoin/getCondition()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/core/SemiJoin/getRight()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexProgramBuilder/addProject(org.apache.calcite.rex.RexNode,java.lang.String)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/sql/validate/SqlValidatorUtil/deriveJoinRowType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,java.util.List)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/List/size()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rex/RexProgramBuilder/mergePrograms(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/List/iterator()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getInput()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableMap/keySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Set/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$300(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSortedMap/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/tools/RelBuilder/fields()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/core/AggregateCall/adaptTo(org.apache.calcite.rel.RelNode,java.util.List,int,int,int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSortedMap/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/AssertionError/AssertionError(boolean)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rex/RexInputRef/of2(int,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/NavigableMap/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator/projectedLiteral(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/TreeMap/TreeMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/NavigableMap/descendingMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.Map,java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/create(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql2rel/RelDecorrelator/getInvoke(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/NavigableMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,boolean)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSortedMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/NavigableMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/hep/HepPlanner/HepPlanner(org.apache.calcite.plan.hep.HepProgram,org.apache.calcite.plan.Context)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/hep/HepPlanner/setRoot(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/hep/HepPlanner/findBestExp()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/getContext()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getRelList()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/runtime/CalciteResource/numberLiteralOutOfRange(java.lang.String)
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlCallBinding/getOperator()
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/type/SqlSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/type/FamilyOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/runtime/CalciteResource/argumentMustBePositiveInteger(java.lang.String)
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlCallBinding/newError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlLiteral/getValue()
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/math/BigDecimal/toString()
org/apache/calcite/sql/type/OperandTypes$2/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/type/OperandTypes$2/hasFractionalPart(java.math.BigDecimal)
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/plan/Strong/isNotTrue(org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/JoinRelType/cancelNullsOnRight()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/JoinRelType/cancelNullsOnLeft()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#java/util/List/get(int)
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#java/util/List/size()
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#org/apache/calcite/runtime/CalciteResource/someButNotAllArgumentsAreNamed()
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#org/apache/calcite/runtime/CalciteResource/duplicateArgumentName(java.lang.String)
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#org/apache/calcite/util/Util/firstDuplicate(java.util.List)
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/util/mapping/Mappings/target(java.util.List,int)
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/interpreter/Bindables$BindableTableScan/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,java.util.List,java.util.List)
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/core/TableScan/getCluster()
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/core/TableScan/getTable()
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/core/TableScan/identity()
org/apache/calcite/rel/rules/FilterTableScanRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.TableScan)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/reduceNotNullableFilter(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/isNullabilityCast(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/isNullLiteral(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/setImportance(org.apache.calcite.rel.RelNode,double)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCluster()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/createEmptyRelOrEquivalent(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter)
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceExpressionsRule$FilterReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/util/TimeZone/getDSTSavings()
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#org/apache/calcite/util/Util/appendPosixTime(java.lang.StringBuilder,int)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/util/TimeZone/getRawOffset()
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/append(char)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/item(java.lang.String,java.lang.Object)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/nest()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/size()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/SingleRel/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelFieldCollation/shortString()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/itemIf(java.lang.String,java.lang.Object,boolean)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/prepare/CalcitePrepareImpl$2/CalcitePrepareImpl$2(org.apache.calcite.prepare.CalcitePrepareImpl)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/plan/volcano/VolcanoPlanner/registerAbstractRelationalRules()
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/jdbc/CalcitePrepare$SparkHandler/registerRules(org.apache.calcite.jdbc.CalcitePrepare$SparkHandler$RuleSetBuilder)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/plan/volcano/VolcanoPlanner/addRelTraitDef(org.apache.calcite.plan.RelTraitDef)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/plan/Contexts/of(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/jdbc/CalcitePrepare$SparkHandler/enabled()
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/jdbc/CalcitePrepare$Context/spark()
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/plan/RelOptUtil/registerAbstractRels(org.apache.calcite.plan.RelOptPlanner)
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/jdbc/CalcitePrepare$Context/config()
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#org/apache/calcite/config/CalciteConnectionConfig/materializationsEnabled()
org/apache/calcite/prepare/CalcitePrepareImpl/createPlanner(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.plan.Context,org.apache.calcite.plan.RelOptCostFactory)#java/util/Iterator/next()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/math/BigDecimal/negate()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIntervalLiteral$IntervalValue/getSign()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlLiteral/getTypeName()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/fun/SqlLiteralChainOperator/concatenateOperands(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/Long/valueOf(long)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/parser/SqlParserUtil/intervalToMonths(org.apache.calcite.sql.SqlIntervalLiteral$IntervalValue)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUtil/isLiteralChain(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/parser/SqlParserUtil/intervalToMillis(org.apache.calcite.sql.SqlIntervalLiteral$IntervalValue)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/System/getProperty(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/getRoot()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/adapter/java/JavaTypeFactory/getJavaClass(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl/getTypeOrdinal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/avatica/ColumnMetaData/array(org.apache.calcite.avatica.ColumnMetaData$AvaticaType,java.lang.String,org.apache.calcite.avatica.ColumnMetaData$Rep)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/avatica/ColumnMetaData$Rep/of(java.lang.reflect.Type)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/avatica/ColumnMetaData/struct(java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl/getTypeName(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/prepare/CalcitePrepareImpl/metaData(org.apache.calcite.adapter.java.JavaTypeFactory,int,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/avatica/ColumnMetaData/scalar(int,java.lang.String,org.apache.calcite.avatica.ColumnMetaData$Rep)
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/empty(org.apache.calcite.rex.RexBuilder)
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#java/util/List/iterator()
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#org/apache/calcite/rex/RexBuilder/makeRangeReference(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#org/apache/calcite/prepare/CalcitePrepareImpl$ScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#java/util/Iterator/next()
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#org/apache/calcite/linq4j/tree/Blocks/simple(org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#org/apache/calcite/prepare/LixToRelTranslator/fieldExpressions(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)#org/apache/calcite/prepare/CalcitePrepareImpl$ScalarTranslator/bind(java.util.List,java.util.List)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Map/isEmpty()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/metadata/RelMetadataQuery/getUniqueKeys(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlAggFunction/getKind()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/getRexBuilder()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/values(java.lang.Iterable,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/discard(java.lang.Object)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/setImportance(org.apache.calcite.rel.RelNode,double)
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/allowsScale()
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/allowsPrec()
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlDataTypeSpec/SqlDataTypeSpec(org.apache.calcite.sql.SqlIdentifier,int,int,java.lang.String,java.util.TimeZone,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/name()
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#java/nio/charset/Charset/name()
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableIntList/size()
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/analyzeCondition()
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/JoinAddRedundantSemiJoinRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getCluster()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/mergePrograms(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/getProgram()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getNamedProjects()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/getInput()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/addProject(org.apache.calcite.rex.RexNode,java.lang.String)
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/getRowType()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/getProgram()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/create(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexOver/containsOver(org.apache.calcite.rex.RexProgram)
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#com/google/common/collect/ImmutableMap/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/core/TableFunctionScan/getColumnMappings()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/metadata/RelMdColumnOrigins/createDerivedColumnOrigins(java.util.Set)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/core/TableFunctionScan/getInputs()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/metadata/RelMetadataQuery/getColumnOrigins(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.TableFunctionScan,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/List/get(int)
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rex/RexBuilder/makeFieldAccessInternal(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#java/util/List/size()
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)#java/util/List/get(int)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWindow/isAlwaysNonEmpty()
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/resolveWindow(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,boolean)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOverOperator/validateOperands(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/setValidatedNodeType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOverOperator$1/SqlOverOperator$1(org.apache.calcite.sql.SqlOverOperator,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,int)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/SqlOverOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/Object/getClass()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinRel()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/remapJoinReferences(org.apache.calcite.rel.rules.LoptMultiJoin,int,java.util.List,int,int%5B%5D,int,int,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rel/rules/LoptJoinTree/getJoinTree()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rel/rules/LoptJoinTree/getTreeOrder(java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumFieldsInJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#java/lang/Integer/intValue()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#java/util/Iterator/next()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#java/util/List/get(int)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#java/util/List/iterator()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/regex/Pattern/compile(java.lang.String)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/Object/toString()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/regex/Matcher/matches()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/TimeZone/getDSTSavings()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/TimeZone/getDisplayName(boolean,int)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/TimeZone/getRawOffset()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/Integer/valueOf(java.lang.String)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#org/apache/calcite/util/Util/appendPosixTime(java.lang.StringBuilder,int)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/Integer/intValue()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/regex/Matcher/group(int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#org/apache/calcite/util/graph/DirectedGraph/getOutwardEdges(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Deque/pop()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Deque/isEmpty()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/RelTraitSet/getTrait(org.apache.calcite.plan.RelTraitDef)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/RelTraitSet/size()
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/RelTraitSet/satisfies(org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/volcano/VolcanoPlanner/completeConversion(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.linq4j.tree.Expressions$FluentList)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/RelTrait/satisfies(org.apache.calcite.plan.RelTrait)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/volcano/VolcanoPlanner/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/runtime/Resources$BooleanProp/get()
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/RelTrait/equals(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/RelTraitSet/getTrait(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/util/SaffronProperties/allowInfiniteCostConverters()
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/RelTrait/getTraitDef()
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/plan/RelTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTrait,boolean)
org/apache/calcite/plan/volcano/VolcanoPlanner/changeTraitsUsingConverters(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet,boolean)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.sql.validate.SqlValidator)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFieldImpl/RelDataTypeFieldImpl(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getMonotonicity(java.lang.String)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getTable()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/TableNamespace/extend(java.util.List)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/shouldExpandIdentifiers()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorTable/getQualifiedName()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorScope/getTableNamespace(java.util.List)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/runtime/CalciteResource/tableNameNotFound(java.lang.String)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/getComponentParserPosition(int)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/setNames(java.util.List,java.util.List)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/getParserPosition()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinPushThroughJoinRule/split(org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/volcano/RelSubset/getRowType()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexPermuteInputsShuttle/visitList(java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/createShiftMapping(int,int%5B%5D)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getConvention()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/volcano/RelSubset/getConvention()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getSystemFieldList()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexProgram/RexProgram(org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexInputRef/of(int,java.util.List)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexLocalRef/RexLocalRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(java.util.List,boolean)
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/SqlOperator/requiresDecimalExpansion()
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/isDecimal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeTimeLiteral(java.util.Calendar,int)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/util/BitString/getAsByteArray()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/getTypeName()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlIntervalLiteral$IntervalValue/getIntervalQualifier()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#java/lang/Boolean/booleanValue()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/getValue()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeDateLiteral(java.util.Calendar)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlTimestampLiteral/getPrec()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql2rel/SqlRexContext/getTypeFactory()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeApproxLiteral(java.math.BigDecimal)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/util/Util/permAssert(boolean,java.lang.String)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql2rel/SqlRexContext/getValidator()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/avatica/util/ByteString/ByteString(byte%5B%5D)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeFlag(java.lang.Enum)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeTimestampLiteral(java.util.Calendar,int)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#java/lang/Long/longValue()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeIntervalLiteral(java.math.BigDecimal,org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeCharLiteral(org.apache.calcite.util.NlsString)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rex/RexBuilder/makeBinaryLiteral(org.apache.calcite.avatica.util.ByteString)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/util/BitString/getBitCount()
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/util/Util/unexpected(java.lang.Enum)
org/apache/calcite/sql2rel/SqlNodeToRexConverterImpl/convertLiteral(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlTimeLiteral/getPrec()
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCost/multiplyBy(double)
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Correlate/getRight()
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCost/plus(org.apache.calcite.plan.RelOptCost)
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/doubleValue()
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/isInfinite(double)
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCostFactory/makeCost(double,double,double)
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/RelNode/estimateRowCount(org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCostFactory/makeInfiniteCost()
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptPlanner/getCostFactory()
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Correlate/getLeft()
org/apache/calcite/rel/core/Correlate/computeSelfCost(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Math/max(double,double)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#org/apache/calcite/schema/FunctionParameter/getOrdinal()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/List/size()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#org/apache/calcite/schema/FunctionParameter/getType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#org/apache/calcite/schema/Function/getParameters()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#org/apache/calcite/schema/FunctionParameter/getName()
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggContext/returnType()
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/hasRows()
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rowTranslator(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/RexImpTable/getDefaultValue(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rexArguments()
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable$FirstLastValueImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/get(int)
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createMultisetType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandCount()
org/apache/calcite/sql/type/ReturnTypes$12/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlUtil/deriveAliasFromOrdinal(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelOptRuleOperand/getMatchedClass()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelOptRule/getOperands()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelTraitDef/registerConverterRule(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.convert.ConverterRule)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Set/size()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/volcano/VolcanoPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelTrait/getTraitDef()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/rel/convert/ConverterRule/getInTrait()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/volcano/VolcanoPlanner/subClasses(java.lang.Class)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#com/google/common/collect/SetMultimap/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/Object/getClass()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#com/google/common/collect/SetMultimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelOptRule/toString()
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/rex/RexBuilder/makeAbstractCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/sql/SqlSplittableAggFunction$Registry/register(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/size()
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/get(int)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$SumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/mappings(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/isAlwaysTrue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rel/core/Join/getInput(int)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#java/lang/Iterable/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/infer(org.apache.calcite.rex.RexNode,java.util.Set,java.util.List,boolean,org.apache.calcite.util.ImmutableBitSet)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalMinus/getRowType()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalMinus/create(java.util.List,boolean)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getChildRels(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PruneEmptyRules/access$000(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/empty()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/createCastRel(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl$JavaType/getJavaClass()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/getJavaClass(org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/util/NumberUtil/multiply(java.lang.Double,java.lang.Double)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Math/max(double,double)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/metadata/RelMdUtil/numDistinctVals(java.lang.Double,java.lang.Double)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/metadata/RelMdUtil/cardOfProjExpr(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdUtil$CardOfProjExpr/visitCall(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalValues/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalValues/getTuples()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/createMapping(org.apache.calcite.util.ImmutableBitSet,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalValues/getCluster()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalValues/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map$Entry/getKey()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Set/removeAll(java.util.Collection)
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/values()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Set/iterator()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map$Entry/getValue()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/entrySet()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/keySet()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/List/iterator()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexLiteral/isNullLiteral(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/getNewForOldInput(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/isConstructor(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexNode/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjections(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,java.util.List,java.util.List,java.lang.String,java.util.List)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/RelStructuredTypeFlattener$RewriteRexShuttle(org.apache.calcite.sql2rel.RelStructuredTypeFlattener,org.apache.calcite.sql2rel.RelStructuredTypeFlattener$1)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/validate/SqlValidator/handleUnresolvedFunction(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlFunction/constructArgNameList(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlUtil/lookupRoutine(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.SqlIdentifier,java.util.List,java.util.List,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,org.apache.calcite.sql.SqlKind)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/validate/SqlValidator/deriveConstructorType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlFunction,org.apache.calcite.sql.SqlFunction,java.util.List)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/validate/SqlValidator/popFunctionCall()
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlFunction/validateOperands(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/validate/SqlValidatorScope/getOperandScope(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlFunction/getKind()
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/validate/SqlValidator/removeValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlFunction/getNameAsId()
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlFunction/containsRowArg(java.util.List)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/validate/SqlValidator/getOperatorTable()
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlFunction/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlFunction/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/validate/SqlValidator/validateColumnListParams(org.apache.calcite.sql.SqlFunction,java.util.List,java.util.List)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlFunction/getFunctionType()
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#java/util/List/iterator()
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlUtil/matchRoutinesByParameterCount(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.SqlIdentifier,java.util.List,org.apache.calcite.sql.SqlFunctionCategory)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/SqlBasicCall/setOperator(org.apache.calcite.sql.SqlOperator)
org/apache/calcite/sql/SqlFunction/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,boolean)#org/apache/calcite/sql/validate/SqlValidator/pushFunctionCall()
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexUtil/simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/containsAll(java.util.Collection)
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/isAlwaysFalse()
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rex/RexUtil/simplifyAnd2(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#com/google/common/collect/ImmutableSet/contains(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#org/apache/calcite/tools/RelBuilder/peek_(int)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#org/apache/calcite/tools/RelBuilder/field(int,int,int)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/ArraySqlType/getComponentType()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeAbstractCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Iterator/next()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeIntervalLiteral(java.math.BigDecimal,org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/List/iterator()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeTimeLiteral(java.util.Calendar,int)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/MapSqlType/getValueType()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeDateLiteral(java.util.Calendar)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Map$Entry/getKey()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/MapSqlType/getKeyType()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeTimestampLiteral(java.util.Calendar,int)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeCharLiteral(org.apache.calcite.util.NlsString)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Set/iterator()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexLiteral/RexLiteral(java.lang.Comparable,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeBinaryLiteral(org.apache.calcite.avatica.util.ByteString)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/util/Util/unexpected(java.lang.Enum)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeApproxLiteral(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/padRight(org.apache.calcite.util.NlsString,int)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/padRight(org.apache.calcite.avatica.util.ByteString,int)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Map$Entry/getValue()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rel/type/RelDataType/getIntervalQualifier()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Map/entrySet()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/MultisetSqlType/getComponentType()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/runtime/FlatLists/of(java.util.List)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/JoinInfo/leftSet()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/metadata/RelMetadataQuery/areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,boolean)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/metadata/RelMdColumnUniqueness/splitLeftAndRightColumns(int,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/JoinInfo/rightSet()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Join/analyzeCondition()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter/convertQuery(org.apache.calcite.sql.SqlNode,boolean,boolean)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter/setDynamicParamCountInExplain(int)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/SqlNode/toString()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/SqlExplain/getDynamicParamCount()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#java/util/List/size()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/SqlExplain/getExplicandum()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/util/TryThreadLocal/get()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/config/CalciteConnectionConfig/forceDecorrelate()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/build()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/SqlExplain/getFormat()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/implement(org.apache.calcite.rel.RelRoot)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/init(java.lang.Class)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/withTrimUnusedFields(boolean)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/SqlExplain$Depth/ordinal()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/SqlExplain/getDepth()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/createPreparedExplanation(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelRoot,org.apache.calcite.sql.SqlExplainFormat,org.apache.calcite.sql.SqlExplainLevel)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/jdbc/CalcitePrepare$Context/config()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/getMaterializations()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/getSqlToRelConverter(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.prepare.Prepare$CatalogReader,org.apache.calcite.sql2rel.SqlToRelConverter$Config)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/trimUnusedFields(org.apache.calcite.rel.RelRoot)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/validate/SqlValidator/getParameterRowType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/withExplain(boolean)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/decorrelate(org.apache.calcite.sql2rel.SqlToRelConverter,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter/configBuilder()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/SqlExplain/getDetailLevel()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/rel/RelRoot/withRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/SqlKind/belongsTo(java.util.Collection)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/getLattices()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/rel/RelRoot/withKind(org.apache.calcite.sql.SqlKind)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/prepare/Prepare/flattenTypes(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter$ConfigBuilder/withExpand(boolean)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/util/trace/CalciteTimingTracer/traceTime(java.lang.String)
org/apache/calcite/prepare/Prepare/prepareSql(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)#org/apache/calcite/sql/validate/SqlValidator/getFieldOrigins(org.apache.calcite.sql.SqlNode)
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#java/lang/Integer/intValue()
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/rel/core/RelFactories$FilterFactory/createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/plan/RelOptUtil/createNullFilter(org.apache.calcite.rel.RelNode,java.lang.Integer%5B%5D)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/SortedSet/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/SortedSet/addAll(java.util.Collection)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/Pair/getKey()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rex/RexInputRef/of2(int,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/asList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/of(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/getName()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/SortedSet/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/TreeSet/TreeSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/sql/fun/SqlSumAggFunction/SqlSumAggFunction(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/SortedSet/clear()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/sql/fun/SqlSumEmptyIsZeroAggFunction/SqlSumEmptyIsZeroAggFunction()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/setImportance(org.apache.calcite.rel.RelNode,double)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ProjectReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List,boolean)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/clone(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor/stripCastFromString(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/algorithm/impl/MonteCarloAlgorithm/MonteCarloAlgorithm()
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/algorithm/Result/getAggregates()
org/apache/calcite/materialize/TileSuggester/tiles()#java/util/Iterator/hasNext()
org/apache/calcite/materialize/TileSuggester/tiles()#java/lang/Math/max(int,int)
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/model/StatisticsProvider/getFactRowCount()
org/apache/calcite/materialize/TileSuggester/tiles()#java/util/Iterator/next()
org/apache/calcite/materialize/TileSuggester/tiles()#org/apache/calcite/materialize/TileSuggester$SchemaImpl/TileSuggester$SchemaImpl(org.apache.calcite.materialize.Lattice,org.pentaho.aggdes.model.StatisticsProvider)
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/algorithm/util/ArgumentUtils$TextProgress/ArgumentUtils$TextProgress(java.io.PrintWriter)
org/apache/calcite/materialize/TileSuggester/tiles()#java/lang/Double/valueOf(double)
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/materialize/TileSuggester/tiles()#org/apache/calcite/materialize/TileSuggester/toTile(org.pentaho.aggdes.model.Aggregate)
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/algorithm/Algorithm/run(org.pentaho.aggdes.model.Schema,java.util.Map,org.pentaho.aggdes.algorithm.Progress)
org/apache/calcite/materialize/TileSuggester/tiles()#java/lang/Integer/valueOf(int)
org/apache/calcite/materialize/TileSuggester/tiles()#org/apache/calcite/materialize/TileSuggester$StatisticsProviderImpl/TileSuggester$StatisticsProviderImpl(org.apache.calcite.materialize.Lattice)
org/apache/calcite/materialize/TileSuggester/tiles()#java/util/List/iterator()
org/apache/calcite/materialize/TileSuggester/tiles()#java/io/PrintWriter/PrintWriter(java.io.OutputStream)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/util/ImmutableBitSet/intersects(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#java/util/List/isEmpty()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rex/RexUtil/composeDisjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/util/ImmutableBitSet/of(int%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/plan/Strong/isNull(org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/util/ImmutableBitSet/intersect(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/util/ImmutableIntList/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinRemovalSemiJoin(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinRemovalFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/rules/LoptJoinTree/getTreeOrder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/core/SemiJoin/getLeftKeys()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumFieldsInJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/core/SemiJoin/getRightKeys()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/List/contains(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,int,org.apache.calcite.util.ImmutableIntList,java.lang.Integer%5B%5D,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/util/ImmutableIntList/get(int)
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Iterator/remove()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Set/removeAll(java.util.Collection)
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Map/values()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Map/keySet()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/List/iterator()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/remap(org.apache.calcite.util.ImmutableBitSet,java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule$1Registrar/AggregateExpandDistinctAggregatesRule$1Registrar(org.apache.calcite.rel.rules.AggregateExpandDistinctAggregatesRule,int,org.apache.calcite.rex.RexBuilder,org.apache.calcite.util.ImmutableBitSet,java.util.List,int,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/union(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/union(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/setIf(int,boolean)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/remap(org.apache.calcite.util.ImmutableBitSet,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableIntList/of(int%5B%5D)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/of(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule$1Registrar/access$200(org.apache.calcite.rel.rules.AggregateExpandDistinctAggregatesRule$1Registrar,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/remap(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/convert(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getNamedAggCalls()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/rename(java.lang.String)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/getName()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteAggCalls(java.util.List,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/isAggregator()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/accept(org.apache.calcite.sql.util.SqlVisitor)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/ArrayList/ArrayList()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/Iterator/hasNext()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/Arrays/asList(java.lang.Object%5B%5D)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/text/MessageFormat/getFormatsByArgumentIndex()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/Iterator/next()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#org/apache/calcite/runtime/Resources$Inst/raw()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/reflect/Method/getName()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/List/add(java.lang.Object)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/List/equals(java.lang.Object)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#org/apache/calcite/runtime/Resources$BaseMessage/value()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/ResourceBundle/getString(java.lang.String)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/StringBuilder/toString()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#org/apache/calcite/runtime/Resources/access$000(java.lang.Object,java.lang.Object)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#org/apache/calcite/runtime/Resources$Validation/ordinal()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#org/apache/calcite/runtime/Resources$Inst/countQuotesIn(java.lang.String)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#org/apache/calcite/runtime/Resources$Inst/bundle()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/ResourceBundle/containsKey(java.lang.String)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/EnumSet/iterator()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/text/MessageFormat/MessageFormat(java.lang.String)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil$SubQueryFinder/find(java.lang.Iterable)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SubQueryRemoveRule$1/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SubQueryRemoveRule$ReplaceSubQueryShuttle/SubQueryRemoveRule$ReplaceSubQueryShuttle(org.apache.calcite.rex.RexSubQuery,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexShuttle/apply(java.util.List)
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/rules/SubQueryRemoveRule$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlUtil/getOperatorSignature(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/iterator()
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/next()
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/SqlCall/getCallSignature(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataType/toString()
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#org/apache/calcite/plan/hep/HepPlanner/updateVertex(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#org/apache/calcite/util/graph/DirectedGraph/removeEdge(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#java/util/List/size()
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#org/apache/calcite/util/graph/DirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#org/apache/calcite/rel/RelNode/replaceInput(int,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/contractVertices(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRelVertex,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Litmus/succeed()
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/Iterator/next()
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/SingleRel/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexUtil/compatibleTypes(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexChecker/RexChecker(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode$Context,org.apache.calcite.util.Litmus)
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexChecker/getFailureCount()
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Util/isDistinct(java.util.List)
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/core/Project/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/Object/toString()
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlIntervalLiteral$IntervalValue/getSign()
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/print(java.lang.String)
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/literal(java.lang.String)
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlIntervalQualifier/toString()
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlIntervalLiteral$IntervalValue/access$000(org.apache.calcite.sql.SqlIntervalLiteral$IntervalValue)
org/apache/calcite/sql/SqlIntervalLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rel2sql/SqlImplementor$Builder/result()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/visitChild(int,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/isStar(java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getChildExps()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#java/util/List/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rel2sql/SqlImplementor$Builder/setSelect(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/flattenOr(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$CnfHelper/incrementAndCheck()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$CnfHelper/and(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/access$300()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$CnfHelper/or(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/flattenAnd(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/util/Util/skip(java.util.List)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getCursorOperand(int)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/size()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/iterator()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/HashSet/HashSet()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/next()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List,java.util.List)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getColumnListParamInfo(int,java.lang.String,java.util.List)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/get(int)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelProtoDataType/apply(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/RelOptUtil/findTables(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/volcano/VolcanoPlanner$3/VolcanoPlanner$3(org.apache.calcite.plan.volcano.VolcanoPlanner)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#com/google/common/base/Supplier/get()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/volcano/VolcanoPlanner/useLattice(org.apache.calcite.plan.RelOptLattice,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/util/Collection/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/RelOptLattice/rewrite(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/util/List/isEmpty()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/RelOptUtil/toString(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#com/google/common/base/Suppliers/memoize(com.google.common.base.Supplier)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/RelOptLattice/rootTable()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/util/Map/values()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/config/CalciteConnectionConfig/materializationsEnabled()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/volcano/VolcanoPlanner/useMaterializations(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/plan/Context/unwrap(java.lang.Class)
org/apache/calcite/plan/volcano/VolcanoPlanner/useApplicableMaterializations()#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/ListIterator/hasNext()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#org/apache/calcite/sql/advise/SqlSimpleParser/consumeQuery(java.util.ListIterator,java.util.List)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/size()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/ListIterator/next()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#org/apache/calcite/sql/advise/SqlSimpleParser$TokenType/ordinal()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/remove(int)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#org/apache/calcite/sql/advise/SqlSimpleParser$Token/access$100(org.apache.calcite.sql.advise.SqlSimpleParser$Token)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/subList(int,int)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/ListIterator/previous()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/clear()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#org/apache/calcite/sql/advise/SqlSimpleParser$Query/SqlSimpleParser$Query(java.util.List)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#org/apache/calcite/sql/advise/SqlSimpleParser$Token/SqlSimpleParser$Token(org.apache.calcite.sql.advise.SqlSimpleParser$TokenType)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#org/apache/calcite/util/PartiallyOrderedSet/findParents(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/size()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#org/apache/calcite/util/PartiallyOrderedSet$Node/PartiallyOrderedSet$Node(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Set/iterator()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/remove(int)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#org/apache/calcite/util/PartiallyOrderedSet$Ordering/lessThan(java.lang.Object,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#org/apache/calcite/util/PartiallyOrderedSet/findChildren(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/get(int)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#org/apache/calcite/util/PartiallyOrderedSet/replace(java.util.List,java.lang.Object,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/contains(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/fieldClass(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/rel/RelFieldCollation/getDirection()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/fieldReference(org.apache.calcite.linq4j.tree.Expression,int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/Collections/emptyList()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/negate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Primitive$Flavor/ordinal()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/adapter/enumerable/EnumUtils/overridingMethodDecl(java.lang.reflect.Method,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Primitive/flavor(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/fieldNullable(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/rel/core/Project/getNamedProjects()
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#java/util/List/iterator()
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/rel/rules/PushProjector/convertRefsAndExprs(org.apache.calcite.rex.RexNode,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#java/util/Iterator/next()
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean,org.apache.calcite.tools.RelBuilder)
org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/BitSet/nextSetBit(int)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/List/size()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/List/get(int)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/List/iterator()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean,org.apache.calcite.tools.RelBuilder)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result$1/SqlImplementor$Result$1(org.apache.calcite.rel.rel2sql.SqlImplementor$Result,int,org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/rel/rel2sql/SqlImplementor$Clause/equals(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/linq4j/tree/Expressions$FluentList/addAll(java.util.Collection)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/rel/rel2sql/SqlImplementor$Builder/SqlImplementor$Builder(org.apache.calcite.rel.rel2sql.SqlImplementor,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.rel2sql.SqlImplementor$Context,java.util.Map)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/maxClause()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendAll(java.lang.Object%5B%5D)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/subSelect()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/asSelect()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/sql/SqlSelect/getSelectList()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/rel/rel2sql/SqlImplementor$Clause/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/sql/SqlDialect/hasImplicitTableAlias()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#org/apache/calcite/rel/rel2sql/SqlImplementor/aliasContext(java.util.Map,boolean)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#com/google/common/collect/ImmutableSet/of(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#java/util/Map/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause%5B%5D)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/newArrayInit(java.lang.reflect.Type,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions$FluentList/size()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions$FluentList/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Field)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/fieldReference(org.apache.calcite.linq4j.tree.Expression,int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/shouldAllowIntermediateOrderBy()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/util/Util/permAssert(boolean,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderItem(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/runtime/CalciteResource/invalidOrderByPos()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlSelect/setOrderBy(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/getOrderScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateOrderList(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlSelect/getOrderList()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getRowType()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getCluster()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMetadataQuery/getDistinctRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/mapping/Mappings/create(org.apache.calcite.util.mapping.MappingType,int,int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptPredicateList/of(org.apache.calcite.rex.RexBuilder,java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/logical/LogicalFilter/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/java/JavaTypeFactory/createJavaType(java.lang.Class)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/logical/LogicalTableScan/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Types/toClass(java.lang.reflect.Type)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Types/getElementType(java.lang.reflect.Type)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.linq4j.tree.FunctionExpression,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expression/getNodeType()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/prepare/RelOptTableImpl/create(org.apache.calcite.plan.RelOptSchema,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/logical/LogicalProject/create(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/util/List/get(int)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/util/BuiltInMethod/ordinal()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/prepare/LixToRelTranslator/toRex(org.apache.calcite.rel.RelNode,org.apache.calcite.linq4j.tree.FunctionExpression)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/AbstractRelNode/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/item(java.lang.String,java.lang.Object)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/input(java.lang.String,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/getIndicatorCount()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/util/ImmutableBitSet/asList()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/AggregateCall/copy(java.util.List,int)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/util/ImmutableBitSet/permute(java.util.Map)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/tools/RelBuilder/fields(java.util.List)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/Ordering/immutableSortedCopy(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/util/ImmutableBitSet/indexOf(int)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/util/ImmutableBitSet/permute(java.lang.Iterable,java.util.Map)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/RelFactories$FilterFactory/createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/JoinExtractFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getSystemFieldList()
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/HashSet/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator/access$200(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator/access$400(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$300(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getCorrelationId()
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#com/google/common/collect/Multimap/putAll(java.lang.Object,java.lang.Iterable)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$100(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$1/apply(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/HashSet/add(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SubQueryRemoveRule$ReplaceSubQueryShuttle/SubQueryRemoveRule$ReplaceSubQueryShuttle(org.apache.calcite.rex.RexSubQuery,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexShuttle/apply(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SubQueryRemoveRule$3/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SubQueryRemoveRule/access$100(org.apache.calcite.tools.RelBuilder,int)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil$SubQueryFinder/find(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/SubQueryRemoveRule$3/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)#org/apache/calcite/plan/RelMultipleTrait/getTraitDef()
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)#com/google/common/collect/Ordering/isStrictlyOrdered(java.lang.Iterable)
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)#java/util/Arrays/toString(java.lang.Object%5B%5D)
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)#com/google/common/collect/Ordering/natural()
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)#java/util/Arrays/asList(java.lang.Object%5B%5D)
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelCompositeTrait/RelCompositeTrait(org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelMultipleTrait%5B%5D)#java/lang/Object/Object()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/SqlUserDefinedTableMacro(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.schema.TableMacro)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/prepare/CalciteCatalogReader/toSql(java.util.List)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/prepare/CalciteCatalogReader/infer(org.apache.calcite.schema.AggregateFunction)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/schema/Function/getParameters()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/sql/type/OperandTypes/family(java.util.List,com.google.common.base.Predicate)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/List/iterator()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/sql/validate/SqlUserDefinedAggFunction/SqlUserDefinedAggFunction(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,org.apache.calcite.schema.AggregateFunction)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/sql/validate/SqlUserDefinedTableFunction/SqlUserDefinedTableFunction(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.schema.TableFunction)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/sql/type/InferTypes/explicit(java.util.List)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/sql/validate/SqlUserDefinedFunction/SqlUserDefinedFunction(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.type.SqlReturnTypeInference,org.apache.calcite.sql.type.SqlOperandTypeInference,org.apache.calcite.sql.type.SqlOperandTypeChecker,java.util.List,org.apache.calcite.schema.Function)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/prepare/CalciteCatalogReader/infer(org.apache.calcite.schema.ScalarFunction)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/Iterator/next()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/schema/FunctionParameter/getType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/prepare/CalciteCatalogReader$4/CalciteCatalogReader$4(org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.schema.Function)
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlFunction/getSqlIdentifier()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/getSyntax()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlFunction/getFunctionType()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getFunctionQuantifier()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlFunctionCategory/isSpecific()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameType,java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlSyntax/ordinal()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlUtil/unparseFunctionSyntax(org.apache.calcite.sql.SqlOperator,org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWriter/print(java.lang.String)
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#org/apache/calcite/util/Permutation/isValid(boolean)
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#%5BI/clone()
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#java/util/Arrays/fill(int%5B%5D,int)
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/Permutation/Permutation(int%5B%5D)#java/lang/Object/Object()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.PseudoField)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/util/ImmutableBitSet/asList()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/declare(int,java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Types$RecordType/getRecordFields()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/PhysType/selector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/TreeSet/addAll(java.util.Collection)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/util/ImmutableBitSet/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/addRemovableSelfJoinPair(int,int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Set/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/TreeSet/toArray(java.lang.Object%5B%5D)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/TreeSet/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/keySet()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFilters()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getFactorsRefByJoinFilter(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/contains(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isSelfJoinFilterUnique(org.apache.calcite.rel.rules.LoptMultiJoin,int,int,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getSimpleFactors(org.apache.calcite.rel.rules.LoptMultiJoin)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/TreeSet/TreeSet()
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/getPartitionRowCount()
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rowTranslator(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rexArguments()
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/index()
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/startIndex()
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/divide(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/get(int)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/Class/getSimpleName()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/materialize/Lattice/grab(java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/Object/getClass()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getRight()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/BiRel/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexChecker/RexChecker(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode$Context,org.apache.calcite.util.Litmus)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexChecker/getFailureCount()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/List/size()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Litmus/succeed()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/addAll(java.lang.Iterable)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Join/getSystemFieldList()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMetadataQuery/getDistinctRowCount(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/List/isEmpty()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMdUtil/numDistinctVals(java.lang.Double,java.lang.Double)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil/splitFilters(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil/pushPastProject(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.Project)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMdUtil/guessSelectivity(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMdUtil/splitCols(java.util.List,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.util.ImmutableBitSet$Builder,org.apache.calcite.util.ImmutableBitSet$Builder)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/ImmutableBitSet$Builder/cardinality()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMdUtil/cardOfProjExpr(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlQualified/create(org.apache.calcite.sql.validate.SqlValidatorScope,int,org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql2rel/SqlToRelConverter/adjustInputRef(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rex.RexInputRef)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/access$1100(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlUtil/makeCall(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlQualified/suffixTranslated()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,java.lang.String,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/validate/SqlValidatorScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/getCondition()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/getInput()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/Object/getClass()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/getRowType()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/copy(java.lang.Object%5B%5D,int)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$Operand/matches(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/MaterializedViewSubstitutionVisitor/access$100(org.apache.calcite.rex.RexNode,java.util.List,java.util.List)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/isWeaker(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$UnifyRuleCall/SubstitutionVisitor$UnifyRuleCall(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$UnifyRule,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,com.google.common.collect.ImmutableList)
org/apache/calcite/plan/MaterializedViewSubstitutionVisitor$FilterToProjectUnifyRule1/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/getInput()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/getCluster()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/getRight()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/fixUp(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/getTraitSet()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/getFieldTypeList(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(java.lang.Iterable)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/getJoinType()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/getLeft()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/onCopy(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getFunctionQuantifier()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlLiteral/getValue()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/toString()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIdentifier/isStar()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#com/google/common/base/Supplier/get()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupOrCreateGroupExpr(org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getTable()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/rel/type/StructKind/ordinal()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/prepare/Prepare$PreparingTable/unwrap(java.lang.Class)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/size()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/Iterator/next()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/schema/CustomColumnResolvingTable/resolveColumn(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/field(org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/iterator()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/util/Pair/getValue()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorScope$Path/add(org.apache.calcite.rel.type.RelDataType,int,org.apache.calcite.rel.type.StructKind)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorNamespace/lookupChild(java.lang.String)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorImpl/getTypeFactory()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/rel/type/RelDataType/getStructKind()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/isEmpty()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/FieldNamespace/FieldNamespace(org.apache.calcite.sql.validate.SqlValidatorImpl,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/util/Pair/getKey()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/subList(int,int)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolved/found(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.SqlValidatorScope$Path)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumJoinFactors()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinRel()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getRowType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findBestOrderings(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/LoptMultiJoin/isNullGenerating(int)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/createShiftMapping(int,int%5B%5D)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.util.mapping.Mappings$TargetMapping)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinPushThroughJoinRule/split(org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexPermuteInputsShuttle/visitList(java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchLeft(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/as(java.lang.String)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/alias(org.apache.calcite.rex.RexNode,java.lang.String)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/isNull(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/Set/isEmpty()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/groupKey()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/groupKey(int%5B%5D)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/equals(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rex/RexUtil/shift(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/fields()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,org.apache.calcite.tools.RelBuilder$AggCall%5B%5D)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/groupKey(java.lang.Iterable)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rex/RexSubQuery/getOperands()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/distinct()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rel/rules/SubQueryRemoveRule/field(org.apache.calcite.tools.RelBuilder,int,int)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object%5B%5D)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/count(boolean,java.lang.String,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/or(java.lang.Iterable)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/and(java.lang.Iterable)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/isNotNull(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rel/metadata/RelMetadataQuery/areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/call(org.apache.calcite.sql.SqlOperator,java.lang.Iterable)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rex/RexSubQuery/getKind()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/field(int)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,org.apache.calcite.rex.RexNode,java.lang.String,java.lang.Iterable)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/project(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/List/iterator()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/call(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/field(java.lang.String,java.lang.String)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/tools/RelBuilder/aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,org.apache.calcite.rex.RexNode,java.lang.String,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#org/apache/calcite/rex/RexUtil/gatherConstraints(java.lang.Class,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Map$Entry/getKey()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/HashSet/HashSet()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Map/entrySet()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Map$Entry/getValue()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#org/apache/calcite/rex/RexUtil/overlap(org.apache.calcite.rex.RexNode,java.util.Set)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getOperandCount()
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlSelect/getSelectList()
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/runtime/CalciteResource/columnTypeMismatchInSetop(int,java.lang.String)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/operand(int)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#java/util/List/size()
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/type/SetopOperandTypeChecker$1/SetopOperandTypeChecker$1(org.apache.calcite.sql.type.SetopOperandTypeChecker,org.apache.calcite.rel.type.RelDataType%5B%5D,int)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getOperandType(int)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getOperator()
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/runtime/CalciteResource/columnCountMismatchInSetop(java.lang.String)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getTypeFactory()
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlUtil/getSelectListItem(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/type/SetopOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/lang/Class/getSimpleName()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Map/values()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/lang/Object/getClass()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Collection/iterator()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#org/apache/calcite/plan/volcano/VolcanoRuleMatch/getRule()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#org/apache/calcite/plan/volcano/VolcanoRuleMatch/toString()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#org/apache/calcite/plan/volcano/VolcanoPlannerPhase/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/SqlBasicCall/operand(int)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter/convertExists(org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter$Config/getInSubQueryThreshold()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter/convertCursor(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter/convertToSingleValueSubq(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/setRoot(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/SqlBasicCall/getOperator()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter/convertMultisets(java.util.List,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/type/SqlTypeUtil/promoteToRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter/convertNonCorrelatedSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/rel/logical/LogicalAggregate/create(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/util/ImmutableIntList/range(int,int)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/SqlBasicCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter/containsNullLiteral(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql2rel/SqlToRelConverter$Config/isExpand()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/rel/RelNode/getInput(int)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/fun/SqlInOperator/isNotIn()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/getFieldType(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rex/RexBuilder/addAggCall(org.apache.calcite.rel.core.AggregateCall,int,boolean,java.util.List,java.util.Map,java.util.List)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)#java/util/List/get(int)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/util/Util/range(int)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/lang/Integer/intValue()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,org.apache.calcite.rex.RexNode,java.lang.String,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/Iterator/hasNext()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/fields()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/peek(int,int)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/size()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/build()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/iterator()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/getAlias()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/isEmpty()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/equals(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/Iterator/next()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/field(int,int,int)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,org.apache.calcite.tools.RelBuilder$AggCall%5B%5D)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/linq4j/Ord/reverse(java.lang.Iterable)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/lang/Iterable/iterator()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/and(java.lang.Iterable)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/sql2rel/SqlRexContext/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/sql2rel/StandardConvertletTable/elseArgs(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/size()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/Iterator/next()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/sql/fun/SqlCase/getWhenOperands()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/sql/fun/SqlCase/getOperator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/sql/fun/SqlCase/getThenOperands()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/rex/RexBuilder/deriveReturnType(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/rex/RexBuilder/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#org/apache/calcite/sql/fun/SqlCase/getElseOperand()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/iterator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/util/Iterator/hasNext()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/append(int)
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#org/apache/calcite/util/mapping/Mappings$AbstractMapping/getSourceCount()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/util/Iterator/next()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#org/apache/calcite/util/mapping/Mappings$AbstractMapping/size()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/append(char)
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#org/apache/calcite/util/mapping/Mappings$AbstractMapping/getTargetCount()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#org/apache/calcite/util/mapping/Mappings$AbstractMapping/iterator()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/toString()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/Class/getMethods()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#com/google/common/collect/ImmutableMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#org/apache/calcite/schema/impl/ScalarFunctionImpl/classHasPublicZeroArgsConstructor(java.lang.Class)
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/reflect/Method/getModifiers()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#com/google/common/collect/ImmutableMultimap/builder()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/reflect/Method/getName()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#com/google/common/collect/ImmutableMultimap$Builder/build()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#org/apache/calcite/schema/impl/ScalarFunctionImpl/create(java.lang.reflect.Method)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#org/apache/calcite/sql/type/SqlTypeUtil/canCastFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/List/size()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/Set/iterator()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/Map/entrySet()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#com/google/common/collect/Lists/newArrayList(java.util.Iterator)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/Map/values()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/List/get(int)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/util/Arrays/binarySearch(java.lang.Object%5B%5D,java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#org/apache/calcite/adapter/clone/ArrayTable/access$400(java.util.List,int%5B%5D)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#org/apache/calcite/adapter/clone/ArrayTable$Representation/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/util/List/iterator()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/util/Set/size()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/util/Iterator/next()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/util/Map/keySet()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/util/Arrays/sort(java.lang.Object%5B%5D,int,int)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/ColumnLoader$ValueSet(java.lang.Class)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#org/apache/calcite/adapter/clone/ColumnLoader$ValueSet/add(java.lang.Comparable)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/util/Set/toArray(java.lang.Object%5B%5D)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int%5B%5D)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/util/Util/permAssert(boolean,java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexUtil/containComplexExprs(java.util.List)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/Iterator/next()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/rules/CalcRelSplitter$RelType/makeRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/toArray(java.lang.Object%5B%5D)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/rules/CalcRelSplitter/identityArray(int)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexProgram/isTrivial()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/iterator()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/rules/CalcRelSplitter$HighestUsageFinder/CalcRelSplitter$HighestUsageFinder(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexProgram/getExprList()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexProgram/getProjectList()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexProgram/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/rules/CalcRelSplitter$RelType/supportsCondition()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/size()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/rules/CalcRelSplitter$HighestUsageFinder/getMaxUsingLevelOrdinals()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/rules/CalcRelSplitter/handle(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexProgram/getInputRowType()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/logical/LogicalCalc/getProgram()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#com/google/common/primitives/Ints/toArray(java.util.Collection)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/get(int)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexProgram/getOutputRowType()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/RelNode/getInput(int)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/rules/CalcRelSplitter/createProgramForLevel(int,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode%5B%5D,int%5B%5D,int%5B%5D,int%5B%5D,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/sql/SqlUtil/newContextException(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/util/NlsString/getCollation()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/sql/SqlCharStringLiteral/SqlCharStringLiteral(org.apache.calcite.util.NlsString,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/util/NlsString/NlsString(java.lang.String,java.lang.String,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/String/charAt(int)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/sql/SqlLiteral/getTypeName()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/String/length()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/sql/SqlLiteral/getParserPosition()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/util/NlsString/getCharsetName()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/StringBuilder/append(char)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/runtime/CalciteResource/unicodeEscapeMalformed(int)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/Integer/parseInt(java.lang.String,int)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/String/substring(int,int)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/getInputs()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCluster()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/getTraitSet()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/getRowType()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/sql2rel/RelDecorrelator/access$700(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/createCaseExpression(org.apache.calcite.rex.RexInputRef,org.apache.calcite.rex.RexLiteral,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#com/google/common/collect/ImmutableSet/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/logical/LogicalCorrelate/getLeft()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationRexShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/of(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableIntersect/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/comparer()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/io/PrintWriter/flush()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/io/StringWriter/StringWriter()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/io/StringWriter/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner$4/go(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/HashSet/HashSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner$4/VolcanoPlanner$4(org.apache.calcite.plan.volcano.VolcanoPlanner,java.util.List)
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#org/apache/calcite/util/PartiallyOrderedSet$Ordering/lessThan(java.lang.Object,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Deque/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Deque/pop()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#org/apache/calcite/plan/RelOptRuleOperand/getChildOperands()
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#java/util/List/size()
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#java/util/List/iterator()
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#org/apache/calcite/plan/RelOptRuleOperandChildPolicy/ordinal()
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#org/apache/calcite/plan/RelOptRuleOperand/matches(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)#org/apache/calcite/plan/hep/HepPlanner/matchOperands(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.rel.RelNode,java.util.List,java.util.Map)
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/asSelect()
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/rel2sql/SqlImplementor/visitChild(int,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/rel2sql/SqlImplementor/result(org.apache.calcite.sql.SqlNode,java.util.Collection,org.apache.calcite.rel.RelNode,java.util.Map)
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/rel/rel2sql/SqlImplementor/setOpToSql(org.apache.calcite.sql.SqlSetOperator,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/SqlSetOperator/createCall(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/sql/SqlInsert/getTargetColumnList()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorUtil/getTargetField(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.validate.SqlValidatorCatalogReader,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/getTargetTable(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getIndicatorCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/emptySet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/get(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/apply2(org.apache.calcite.util.mapping.Mapping,java.util.List)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/fields(java.util.List)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer$3/RelFieldTrimmer$3(org.apache.calcite.sql2rel.RelFieldTrimmer,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/create(org.apache.calcite.util.mapping.MappingType,int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/rebuild()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/union(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/field(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,org.apache.calcite.rex.RexNode,java.lang.String,java.lang.Iterable)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mappings$TargetMapping,int)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/lang/Class/getInterfaces()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/lang/Class/getSuperclass()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/concurrent/ConcurrentMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/List/iterator()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/concurrent/ConcurrentMap/get(java.lang.Object)
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#org/apache/calcite/schema/TableMacro/apply(java.util.List)
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/List/isEmpty()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/build()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/next()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#org/apache/calcite/schema/Function/getParameters()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Set/iterator()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Collection/iterator()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#org/apache/calcite/schema/Schema/getFunctions(java.lang.String)
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap/containsKey(java.lang.Object)
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#org/apache/calcite/schema/Schema/getFunctionNames()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/ImmutableIntList/size()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexBuilder/makeNullLiteral(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/schema/ModifiableView/getConstraint(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexInputRef/of(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/HashMap/HashMap()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/schema/ModifiableView/getColumnMapping()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexBuilder/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/ImmutableIntList/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/plan/RelOptUtil/createFilter(org.apache.calcite.rel.RelNode,java.lang.Iterable)
org/apache/calcite/runtime/Resources$Element/deriveKey()#org/apache/calcite/runtime/Resources$Resource/value()
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/Character/toUpperCase(char)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/reflect/Method/getName()
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/String/substring(int)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/StringBuilder/append(char)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/StringBuilder/toString()
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/String/charAt(int)
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/Class/forName(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getOperatorTable()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlUtil/lookupRoutine(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.SqlIdentifier,java.util.List,java.util.List,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,org.apache.calcite.sql.SqlKind)
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/getSyntax()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/adjustType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlBasicCall/setOperator(org.apache.calcite.sql.SqlOperator)
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/getKind()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidatorUtil/checkCharsetAndCollateConsistentIfCharType(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/getNameAsId()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/validateOperands(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/constructOperandList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall,java.util.List)
org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/constructArgTypeList(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall,java.util.List,boolean)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/IClassBodyEvaluator/setDebuggingInformation(boolean,boolean,boolean)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/util/List/toArray()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/ICompilerFactory/newClassBodyEvaluator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/IClassBodyEvaluator/setClassName(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/IClassBodyEvaluator/setImplementedInterfaces(java.lang.Class%5B%5D)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/CompilerFactoryFactory/getDefaultCompilerFactory()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/IClassBodyEvaluator/getClazz()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/IClassBodyEvaluator/setParentClassLoader(java.lang.ClassLoader)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/IClassBodyEvaluator/cook(java.io.Reader)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/Class/cast(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/Class/getClassLoader()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/Class/getDeclaredConstructors()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/setRoot(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#java/util/List/subList(int,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/logical/LogicalProject/create(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlSelect/getOrderList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql2rel/SqlToRelConverter/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/logical/LogicalSort/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#java/math/BigDecimal/equals(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/getList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlLiteral/bigDecimalValue()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOrder(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelCollation,java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getTypeFactory()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlUtil/isNullLiteral(org.apache.calcite.sql.SqlNode,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeIntervalLiteral(java.math.BigDecimal,org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/math/BigDecimal/multiply(java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlIntervalQualifier/getUnit()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlDataTypeSpec/getCollectionsTypeName()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createMultisetType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/castToValidatedType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCast(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/lang/ThreadLocal/remove()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/adapter/enumerable/EnumerableRel/getCluster()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/interpreter/Interpreters/bindable(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/adapter/enumerable/EnumerableInterpretable/toBindable(java.util.Map,org.apache.calcite.jdbc.CalcitePrepare$SparkHandler,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/util/trace/CalciteTimingTracer/traceTime(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/lang/Integer/intValue()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/adapter/enumerable/EnumerableCalc/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/rel/RelRoot/isRefTrivial()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/rex/RexProgram/create(org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/jdbc/CalcitePrepare$Context/spark()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/lang/ThreadLocal/set(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/List/isEmpty()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt$3/CalcitePrepareImpl$CalcitePreparingStmt$3(org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.TableModify$Operation,boolean,org.apache.calcite.runtime.Bindable)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/mapTableModOp(boolean,org.apache.calcite.sql.SqlKind)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/sql/SqlKind/belongsTo(java.util.Collection)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/adapter/enumerable/EnumerableRel/getRowType()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/union(boolean,int)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/fields()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeBigintLiteral(java.math.BigDecimal)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/field(int)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/countStar(java.lang.String)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/equals(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Intersect/getCluster()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,org.apache.calcite.tools.RelBuilder$AggCall%5B%5D)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/math/BigDecimal/BigDecimal(int)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/groupKey(java.lang.Iterable)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Intersect/getInputs()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/skipLast(java.util.List)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/IntersectToDistinctRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/TableMacro/apply(java.util.List)
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/List/isEmpty()
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Iterator/next()
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/Function/getParameters()
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/jdbc/CachingCalciteSchema$Cached/get(long)
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/lang/System/currentTimeMillis()
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/Schema/getFunctions(java.lang.String)
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/jdbc/CachingCalciteSchema/find(java.util.NavigableSet,java.lang.String)
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/lang/Iterable/iterator()
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Collection/iterator()
org/apache/calcite/jdbc/CachingCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/jdbc/CachingCalciteSchema/tableEntry(java.lang.String,org.apache.calcite.schema.Table)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#org/apache/calcite/tools/RelBuilder/groupKey(java.lang.Iterable,boolean,java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#org/apache/calcite/util/ImmutableBitSet/length()
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#org/apache/calcite/util/ImmutableIntList/of(int%5B%5D)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#org/apache/calcite/util/ImmutableBitSet/toArray()
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#org/apache/calcite/tools/RelBuilder$4/RelBuilder$4(org.apache.calcite.tools.RelBuilder)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#org/apache/calcite/tools/RelBuilder/fields(java.util.List)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Map/isEmpty()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/rel/RelNode/getRelTypeName()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/RelTraitPropagationVisitor/go(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/util/Util/newInternal(java.lang.Throwable,java.lang.String)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Set/iterator()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/RelOptListener/ruleProductionSucceeded(org.apache.calcite.plan.RelOptListener$RuleProductionEvent)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/RelTraitPropagationVisitor/RelTraitPropagationVisitor(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Map/entrySet()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Arrays/toString(java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Map$Entry/getKey()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/volcano/VolcanoRuleCall/getRule()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/RelOptListener$RuleProductionEvent/RelOptListener$RuleProductionEvent(java.lang.Object,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptRuleCall,boolean)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRegistered(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.VolcanoRuleCall)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Map$Entry/getValue()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/volcano/VolcanoRuleCall/getPlanner()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#org/apache/calcite/util/PartiallyOrderedSet/findParents(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Collections/emptyList()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Collection/size()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/ArrayDeque/ArrayDeque(java.util.Collection)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#org/apache/calcite/util/PartiallyOrderedSet/findChildren(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Deque/pop()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Deque/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Collection/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/union(boolean,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/permute(org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/SetOp/getInputs()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/intersect(boolean,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/minus(boolean)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/isIdentity()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/SetOp/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/of(int%5B%5D)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/divide(org.apache.calcite.util.mapping.Mapping,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/createMapping(org.apache.calcite.util.ImmutableBitSet,int)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/linq4j/Ord/zip(java.lang.Object%5B%5D)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#java/lang/StringBuilder/append(int)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/tools/RelBuilder/tupleList(int,java.lang.Object%5B%5D)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/tools/RelBuilder/values(java.lang.Iterable,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/tools/RelBuilder/allNull(java.lang.Object%5B%5D,int,int)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/tools/RelBuilder$6/RelBuilder$6(org.apache.calcite.tools.RelBuilder,com.google.common.collect.ImmutableList,org.apache.calcite.linq4j.Ord,int)
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/values(java.lang.String%5B%5D,java.lang.Object%5B%5D)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeCase(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeDivide(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/powerOfTen(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/decodeValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxNumericPrecision()
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makePlus(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeExactLiteral(long)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeIsNegative(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeScaleFactor(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/rel/rules/LoptMultiJoin/fieldBitmap(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeight(int,int,int)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/util/ImmutableBitSet$Builder/addAll(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/util/ImmutableIntList/copyOf(java.lang.Iterable)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/util/ImmutableBitSet/nextSetBit(int)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/rel/rules/LoptMultiJoin/factorBitmap(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/rex/RexNode/isA(java.util.Collection)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/util/ImmutableBitSet/rebuild()
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/util/ImmutableBitSet$Builder/clear(int)
org/apache/calcite/rel/rules/LoptMultiJoin/setFactorWeights()#org/apache/calcite/util/ImmutableBitSet$Builder/build()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/plan/RelOptUtil$SubQueryType/ordinal()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/plan/RelOptUtil$SubQueryType/values()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/sql/SqlExplainFormat/values()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/sql/SqlKind/values()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/plan/RelOptUtil$Logic/values()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/plan/RelOptUtil$Side/values()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/plan/RelOptUtil$Side/ordinal()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/sql/SqlKind/ordinal()
java+initializer:///org/apache/calcite/plan/RelOptUtil$16/RelOptUtil$16$initializer#org/apache/calcite/sql/SqlExplainFormat/ordinal()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/RelTraitSet/difference(org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/volcano/AbstractConverter/getInput()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/volcano/AbstractConverter/AbstractConverter(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#com/google/common/collect/ImmutableList/size()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/volcano/RelSubset/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/volcano/VolcanoPlanner/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/RelTrait/getTraitDef()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/volcano/RelSubset/getCluster()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/volcano/RelSubset/getRels()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/traitSet()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getConvention()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/getRelTraitDefs()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/permutation(java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getPlanner()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings$TargetMapping/getTargetOpt(int)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelTraitSet/canonize(org.apache.calcite.plan.RelTrait)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getTraitSet()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelCollation)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getConvention()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/contains(java.lang.Object)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlFilterOperator$1/SqlFilterOperator$1(org.apache.calcite.sql.SqlFilterOperator,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlFilterOperator/validateOperands(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/setValidatedNodeType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/SqlFilterOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)#java/lang/Object/getClass()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/EnumerableTableScan/hasCollectionField(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/EnumerableTableScan/format()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/PhysType/getFormat()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/EnumerableTableScan/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexFieldAccess/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/getNewForOldInput(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexBuilder/makeCorrel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.CorrelationId)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexFieldAccess/getField()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexNode/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/removeDistinct(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/access$400(org.apache.calcite.sql2rel.RelStructuredTypeFlattener)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexFieldAccess/getReferenceExpr()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/access$300(org.apache.calcite.sql2rel.RelStructuredTypeFlattener,org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/util/List/get(int)
org/apache/calcite/rel/RelCollationImpl/toString()#java/util/Iterator/hasNext()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/RelCollationImpl/toString()#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rel/RelCollationImpl/toString()#java/util/Iterator/next()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/RelCollationImpl/toString()#org/apache/calcite/rel/RelFieldCollation$Direction/defaultNullDirection()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/append(char)
org/apache/calcite/rel/RelCollationImpl/toString()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/toString()
org/apache/calcite/rel/RelCollationImpl/toString()#org/apache/calcite/rel/RelFieldCollation/shortString()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/fun/SqlBetweenOperator/getRightPrec()
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/SqlUtil/newContextException(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/SqlSpecialOperator$TokenSequence/size()
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/SqlOperator/getKind()
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/SqlSpecialOperator$TokenSequence/isOp(int)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/fun/SqlBetweenOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/parser/SqlParserPos/getEndColumnNum()
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/parser/SqlParserPos/getEndLineNum()
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/SqlSpecialOperator$TokenSequence/node(int)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/SqlSpecialOperator$TokenSequence/op(int)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/SqlSpecialOperator$ReduceResult/SqlSpecialOperator$ReduceResult(org.apache.calcite.sql.SqlSpecialOperator,int,int,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/parser/SqlParserPos/SqlParserPos(int,int,int,int)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/parser/SqlParserUtil/toTreeEx(org.apache.calcite.sql.SqlSpecialOperator$TokenSequence,int,int,org.apache.calcite.sql.SqlKind)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/sql/SqlSpecialOperator$TokenSequence/pos(int)
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlBetweenOperator/reduceExpr(int,org.apache.calcite.sql.SqlSpecialOperator$TokenSequence)#org/apache/calcite/runtime/CalciteResource/betweenWithoutAnd()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameTypeEnum)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlSelectOperator/unparseListClause(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlKind)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlJoin$SqlJoinOperator/getRightPrec()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/fetchOffset(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameType,java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/isEmpty()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNodeList/getList()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlSelectOperator/unparseListClause(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlIdentifier/star(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/isAlwaysUseParentheses()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlJoin$SqlJoinOperator/getLeftPrec()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/getParserPosition()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/math/BigDecimal/valueOf(double)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/Number/longValue()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/Boolean/booleanValue()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/Number/doubleValue()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeApproxLiteral(java.math.BigDecimal)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.String)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/Object/getClass()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlFunction/getSqlIdentifier()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlFunctionCategory/isUserDefinedNotSpecificFunction()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/isA(java.util.Set)
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlFunction/getFunctionType()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/util/Util$FoundOne/Util$FoundOne(java.lang.Object)
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/isAggregator()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/util/SqlBasicVisitor/visit(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/acceptCall(org.apache.calcite.sql.util.SqlVisitor,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)
org/apache/calcite/sql/validate/AggFinder/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/requiresOver()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/util/Util/permAssert(boolean,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#com/google/common/base/Supplier/get()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/access$1000(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/SqlNodeList/accept(org.apache.calcite.sql.util.SqlVisitor)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/core/RelFactories$FilterFactory/createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/validate/SqlValidator/getNamespace(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/setRoot(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/getAggCalls()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorUtil/getEnclosingSelectScope(org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/validate/SelectScope/getNode()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/access$900(org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/core/Aggregate/getGroupType()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/access$700(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/getPreExprs()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/validate/AggregatingSelectScope$Resolved/isNullable(int)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/replaceSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorScope/getMonotonicity(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/getPreNames()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$AggregateFinder/SqlToRelConverter$AggregateFinder(org.apache.calcite.sql2rel.SqlToRelConverter$1)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/clear()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/SqlNode/accept(org.apache.calcite.sql.util.SqlVisitor)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/pushDownNotForIn(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/createAggregate(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/validate/SqlValidator/deriveAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/addGroupExpr(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#org/apache/calcite/sql/SqlLiteral/getValue()
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#org/apache/calcite/sql/SqlFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#org/apache/calcite/sql/fun/SqlTrimFunction$Flag/symbol(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#java/util/Arrays/toString(java.lang.Object%5B%5D)
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlTrimFunction/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)#org/apache/calcite/sql/SqlLiteral/createCharString(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rex/RexWindow/computeDigest()#java/lang/Object/toString()
org/apache/calcite/rex/RexWindow/computeDigest()#java/io/PrintWriter/print(char)
org/apache/calcite/rex/RexWindow/computeDigest()#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/apache/calcite/rex/RexWindow/computeDigest()#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rex/RexWindow/computeDigest()#org/apache/calcite/rex/RexFieldCollation/toString()
org/apache/calcite/rex/RexWindow/computeDigest()#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rex/RexWindow/computeDigest()#java/io/StringWriter/StringWriter()
org/apache/calcite/rex/RexWindow/computeDigest()#java/io/StringWriter/toString()
org/apache/calcite/rex/RexWindow/computeDigest()#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/rex/RexWindow/computeDigest()#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameType,java.lang.String,java.lang.String)
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/fun/SqlRollupOperator/unparseCube(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/lang/Integer/intValue()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/lang/Math/max(int,int)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/size()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/values()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#org/apache/calcite/util/BitSets$Closure/access$000(org.apache.calcite.util.BitSets$Closure)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/BitSet/BitSet()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/lastKey()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/lang/Integer/valueOf(int)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/firstKey()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/Collection/iterator()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/BitSet/length()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#com/google/common/collect/ImmutableSortedMap/of()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#org/apache/calcite/util/BitSets$Closure/BitSets$Closure(java.util.SortedMap)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/isEmpty()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/TreeMap/TreeMap()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelTraitSet/getTrait(org.apache.calcite.plan.RelTraitDef)
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getInput()
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SortRemoveRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/getRelTraitDefs()
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getTraitSet()
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SortRemoveRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/contains(java.lang.Object)
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#org/apache/calcite/sql/SqlTimestampLiteral/getTimestamp()
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#java/lang/Long/toString(long)
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#java/lang/String/substring(int,int)
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#java/util/Calendar/getTimeInMillis()
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#java/util/Calendar/get(int)
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#org/apache/calcite/sql/SqlTimestampLiteral/getCal()
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#org/apache/calcite/util/ZonelessTimestamp/toString(java.lang.String)
org/apache/calcite/sql/SqlTimestampLiteral/toFormattedString()#java/lang/String/length()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#org/apache/calcite/util/graph/DirectedGraph/vertexSet()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#java/util/Set/size()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#org/apache/calcite/util/graph/DefaultDirectedGraph/create()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#org/apache/calcite/util/graph/DirectedGraph/addVertex(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter$3/ProjectToWindowRule$WindowedAggRelSplitter$3(org.apache.calcite.rel.rules.ProjectToWindowRule$WindowedAggRelSplitter,boolean,org.apache.calcite.util.graph.DirectedGraph,org.apache.calcite.linq4j.Ord)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/plan/RelOptUtil/isDistinctFromInternal(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/isDistinctFrom(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/util/Iterator/next()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/util/List/iterator()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rex/RexSubQuery/RexSubQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,com.google.common.collect.ImmutableList,org.apache.calcite.rel.RelNode)
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexSubQuery/in(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#org/apache/calcite/interpreter/Interpreter/createContext()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#java/util/List/size()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#java/util/Iterator/next()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#org/apache/calcite/interpreter/Interpreter/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#org/apache/calcite/interpreter/Scalar/execute(org.apache.calcite.interpreter.Context,java.lang.Object%5B%5D)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#org/apache/calcite/interpreter/Row/asCopy(java.lang.Object%5B%5D)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Interpreter,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnfs(java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/ReflectiveVisitDispatcher/invokeVisitor(org.apache.calcite.util.ReflectiveVisitor,java.lang.Object,java.lang.String)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteGeneric(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/access$200(org.apache.calcite.sql2rel.RelStructuredTypeFlattener)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/Class/getName()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/access$202(org.apache.calcite.sql2rel.RelStructuredTypeFlattener,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/Object/getClass()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener$RewriteRelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelVisitor/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#org/apache/calcite/rex/RexOver/getWindow()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/createGraphFromExpression(java.util.List)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#org/apache/calcite/rex/RexWindow/equals(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/List/size()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/Set/iterator()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getRank(org.apache.calcite.util.graph.DirectedGraph)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#com/google/common/collect/Sets/newHashSet(java.lang.Object%5B%5D)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/List/get(int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#org/apache/calcite/rex/RexProgram/getExprList()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List,java.util.List)
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeSystem/isSchemaCaseSensitive()
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#java/util/HashSet/HashSet()
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/sql/validate/SqlValidatorUtil/createJoinType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/logical/LogicalValues/createOneRow(org.apache.calcite.plan.RelOptCluster)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/setRoot(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/logical/LogicalUnion/create(java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql2rel/SqlToRelConverter/createBlackboard(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.Map,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql2rel/SqlToRelConverter/replaceSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidator/deriveAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/Set/size()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#org/apache/calcite/rex/RexUtil/families(java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#org/apache/calcite/sql/type/SqlOperandTypeChecker$Consistency/ordinal()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFamily()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#org/apache/calcite/sql2rel/SqlRexContext/getTypeFactory()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#java/lang/String/length()
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#org/apache/calcite/avatica/util/ByteString/length()
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexBuilder/guessType(java.lang.Object)#java/lang/Object/getClass()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$CnfHelper/commonFactors(java.util.List)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/flattenOr(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$CnfHelper/removeFactor(java.util.Map,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/Map/values()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$CnfHelper/and(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$CnfHelper/or(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/Map/isEmpty()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil$CnfHelper/pullList(java.util.List)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/flattenAnd(java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/NumberUtil/getMaxUnscaled(int)
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#java/math/BigInteger/longValue()
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/SqlTypeUtil/getMaxValue(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/lang/Integer/intValue()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/rel/core/TableScan/identity(org.apache.calcite.plan.RelOptTable)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/schema/ProjectableFilterableTable/scan(org.apache.calcite.DataContext,java.util.List,int%5B%5D)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/runtime/CalciteResource/filterableTableInventedFilter(java.lang.String)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/util/ImmutableIntList/size()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/interpreter/Interpreter/getDataContext()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/util/ImmutableIntList/copyOf(java.lang.Iterable)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/util/ImmutableIntList/identity(int)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/runtime/Resources$ExInst/ex()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/util/Iterator/next()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/rel/core/TableScan/getTable()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#com/google/common/collect/ImmutableList/contains(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/util/ImmutableIntList/toIntArray()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/lang/Integer/valueOf(int)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/util/List/iterator()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/runtime/Enumerables/toRow(org.apache.calcite.linq4j.Enumerable)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/util/ImmutableIntList/equals(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/util/ImmutableIntList/contains(java.lang.Object)
org/apache/calcite/rel/RelRoot/project(boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/RelRoot/project(boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/RelRoot/project(boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/RelRoot/project(boolean)#org/apache/calcite/rel/logical/LogicalProject/create(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/rel/RelRoot/project(boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/RelRoot/project(boolean)#java/util/EnumSet/contains(java.lang.Object)
org/apache/calcite/rel/RelRoot/project(boolean)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/RelRoot/project(boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/RelRoot/project(boolean)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/RelRoot/project(boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/RelRoot/project(boolean)#org/apache/calcite/rel/RelRoot/isRefTrivial()
org/apache/calcite/rel/RelRoot/project(boolean)#java/util/Iterator/next()
org/apache/calcite/rel/RelRoot/project(boolean)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/isWindowDeclarationStartsLine()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/getLineLength()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/getIndentation()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setAlwaysUseParentheses(boolean)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setQuoteAllIdentifiers(boolean)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setWindowNewline(boolean)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/isQuoteAllIdentifiers()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/isClauseStartsLine()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setWindowDeclListNewline(boolean)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/isSelectListItemsOnSeparateLines()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setClauseStartsLine(boolean)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/isCaseClausesOnNewLines()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setCaseClausesOnNewLines(boolean)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/isAlwaysUseParentheses()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setIndentation(int)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/isWindowListItemsOnSeparateLines()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setKeywordsLowerCase(boolean)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setLineLength(int)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setWhereListItemsOnSeparateLines(boolean)
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/isWhereListItemsOnSeparateLines()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlFormatOptions/isKeywordsLowercase()
org/apache/calcite/sql/pretty/SqlPrettyWriter/setFormatOptions(org.apache.calcite.sql.pretty.SqlFormatOptions)#org/apache/calcite/sql/pretty/SqlPrettyWriter/setSelectListItemsOnSeparateLines(boolean)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rel/RelFieldCollation/copy(int)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/Arrays/fill(int%5B%5D,int)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rel/RelCollations/of(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/handle(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/String/valueOf(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/foldAnd(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/foldOr(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/not(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable/access$1000(boolean,org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$6/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/isNullable(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/isBox(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/getTreeOrder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/getLeft()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/getJoinTree()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/hasAllFactors(org.apache.calcite.rel.rules.LoptJoinTree,java.util.BitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/isRemovableSelfJoin()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/getRight()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFactorToTree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#java/util/BitSet/set(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getOtherSelfJoinFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/isJoinTree(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumJoinFactors()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinRel()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/plan/RelOptUtil/andJoinFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/adjustFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,int,java.util.List,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#java/util/BitSet/cardinality()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#java/util/BitSet/BitSet(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/pushDownFactor(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.BitSet,java.util.List,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#org/apache/calcite/prepare/Prepare$CatalogReader/field(org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/canRemoveCastFromLiteral(org.apache.calcite.rel.type.RelDataType,java.lang.Comparable,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/plan/RelOptPlanner$Executor/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexLiteral/getTypeName()
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexUtil/simplifyCast(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getMonotonicity(java.lang.String)
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#org/apache/calcite/sql/validate/SqlValidatorImpl/getNamespace(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#java/util/List/get(int)
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#org/apache/calcite/sql/validate/SetopNamespace/getRowType()
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#org/apache/calcite/sql/validate/SetopNamespace/combine(org.apache.calcite.sql.validate.SqlMonotonicity,org.apache.calcite.sql.validate.SqlMonotonicity)
org/apache/calcite/sql/validate/SetopNamespace/getMonotonicity(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/runtime/CalciteResource/aggregateIllegalInGroupBy()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNode/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlSelect/getGroup()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/expand(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateNoAggs(org.apache.calcite.sql.SqlNode,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/AggFinder/findAgg(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/getSelectScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/getGroupScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlSelect/setGroupBy(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupItem(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.validate.AggregatingSelectScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateGroupClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNode/validateExpr(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#org/apache/calcite/sql/parser/SqlParserUtil$ToTreeListItem/access$200(org.apache.calcite.sql.parser.SqlParserUtil$ToTreeListItem)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/Iterator/hasNext()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#org/apache/calcite/sql/parser/SqlParserPos/plusAll(java.util.Collection)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/List/size()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/Iterator/next()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#org/apache/calcite/util/PrecedenceClimbingParser$Type/ordinal()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#org/apache/calcite/sql/SqlLiteral/createNegative(org.apache.calcite.sql.SqlNumericLiteral,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/List/get(int)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#org/apache/calcite/sql/parser/SqlParserUtil$ToTreeListItem/access$100(org.apache.calcite.sql.parser.SqlParserUtil$ToTreeListItem)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#org/apache/calcite/sql/SqlOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/collect/ImmutableListMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/collect/ImmutableListMultimap/builder()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/materialize/Lattice$Edge/getSource()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/util/List/size()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/lang/Iterable/iterator()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/util/List/get(int)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/util/List/iterator()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/util/graph/DirectedGraph/getInwardEdges(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/lang/Object/Object()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/materialize/Lattice/access$200(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/util/graph/DirectedGraph/getEdge(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/collect/Maps/newIdentityHashMap()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/jdbc/CalciteSchema/isRoot()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/util/graph/TopologicalOrderIterator/of(org.apache.calcite.util.graph.DirectedGraph)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/schema/Schemas/convert(org.apache.calcite.jdbc.CalciteConnection,org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/util/List/isEmpty()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/util/mapping/IntPair/of(int,int)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/util/Iterator/next()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/util/graph/DefaultDirectedGraph/create(org.apache.calcite.util.graph.DirectedGraph$EdgeFactory)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/materialize/Lattice$Node/Lattice$Node(org.apache.calcite.rel.core.TableScan,org.apache.calcite.materialize.Lattice$Node,java.util.List,int,int,java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/materialize/Lattice/access$300(org.apache.calcite.sql.SqlNode,java.util.List,java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#com/google/common/collect/ImmutableListMultimap$Builder/build()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/sql/SqlSelect/getFrom()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/rel/core/TableScan/getRowType()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/util/graph/DirectedGraph/addVertex(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/jdbc/CalciteSchema/path(java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/util/graph/DirectedGraph/addEdge(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/materialize/Lattice$Column/Lattice$Column(int,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.materialize.Lattice$1)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/Lattice$Builder(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)#org/apache/calcite/jdbc/CalciteSchema/root()
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getCluster()
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getTraitSet()
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/mergePrograms(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getDigest()
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/setImportance(org.apache.calcite.rel.RelNode,double)
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getOutputRowType()
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getProgram()
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexOver/containsOver(org.apache.calcite.rex.RexProgram)
org/apache/calcite/rel/rules/CalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getInput()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/metadata/NullSentinel/mask(java.lang.Comparable)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/List/clear()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#com/google/common/collect/ImmutableList/iterator()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/linq4j/tree/Primitive$Flavor/ordinal()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/linq4j/tree/Primitive$Flavor/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/sql/SqlKind/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/sql/type/SqlTypeName/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/avatica/util/TimeUnitRange/ordinal()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/adapter/enumerable/NullPolicy/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/avatica/util/TimeUnitRange/values()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/adapter/enumerable/NullPolicy/ordinal()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/sql/type/SqlTypeName/ordinal()
java+initializer:///org/apache/calcite/adapter/enumerable/RexImpTable$10/RexImpTable$10$initializer#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/registerSubQuery(org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic)
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptUtil$Logic/negate()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/findSubQueries(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/Integer/intValue()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/util/Iterator/hasNext()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/util/Iterator/next()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/util/List/iterator()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/removeAll(java.util.Collection)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/shiftFilter(int,int,int,org.apache.calcite.rex.RexBuilder,java.util.List,int,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$InputFinder/analyze(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/JoinInfo/leftSet()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/metadata/RelMetadataQuery/areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,boolean)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/JoinInfo/rightSet()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/metadata/RelMetadataQuery/getUniqueKeys(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/util/ImmutableBitSet/union(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/Join/analyzeCondition()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidatorImpl$3/SqlValidatorImpl$3(org.apache.calcite.sql.validate.SqlValidatorImpl,java.util.List,org.apache.calcite.sql.validate.SqlValidatorScope,int,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNode/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/incompatibleValueType(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlSpecialOperator/getName()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateValues(org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/ImmutableBitSet/powerSet()#java/lang/Integer/intValue()
org/apache/calcite/util/ImmutableBitSet/powerSet()#org/apache/calcite/linq4j/Linq4j/product(java.lang.Iterable)
org/apache/calcite/util/ImmutableBitSet/powerSet()#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/util/ImmutableBitSet/powerSet()#java/util/Iterator/hasNext()
org/apache/calcite/util/ImmutableBitSet/powerSet()#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/util/ImmutableBitSet/powerSet()#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/util/ImmutableBitSet/powerSet()#java/util/Iterator/next()
org/apache/calcite/util/ImmutableBitSet/powerSet()#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/util/ImmutableBitSet/powerSet()#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/util/ImmutableBitSet/powerSet()#org/apache/calcite/util/ImmutableBitSet/of(int%5B%5D)
org/apache/calcite/util/ImmutableBitSet/powerSet()#java/util/List/add(java.lang.Object)
org/apache/calcite/util/ImmutableBitSet/powerSet()#org/apache/calcite/util/ImmutableBitSet$3/ImmutableBitSet$3(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Correlate/getRight()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Correlate/getJoinType()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Correlate/getLeft()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/sql/SemiJoinType/ordinal()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/metadata/RelMdColumnUniqueness/splitLeftAndRightColumns(int,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/metadata/RelMetadataQuery/areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,boolean)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setReadTimeout(int)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#org/apache/calcite/runtime/HttpUtils/getURLConnection(java.lang.String)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setConnectTimeout(int)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setRequestMethod(java.lang.String)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Iterator/next()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/io/Writer/close()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/io/Writer/write(java.lang.String)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Set/iterator()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Map$Entry/getValue()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Map/entrySet()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/io/Writer/flush()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setDoOutput(boolean)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Map$Entry/getKey()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/getOutputStream()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/lang/CharSequence/toString()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/getInputStream()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelCollations/shift(org.apache.calcite.rel.RelCollation,int)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/getRemaining(org.apache.calcite.rex.RexBuilder)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/of(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelFieldCollation/RelFieldCollation(int,org.apache.calcite.rel.RelFieldCollation$Direction,org.apache.calcite.rel.RelFieldCollation$NullDirection)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/util/ImmutableIntList/iterator()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getInputs()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getVariablesSet()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/isEqui()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/getEquiCondition(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/keys()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/EnumerableMergeJoin(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/JoinInfo/pairs()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelCollations/of(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getRight()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableFilter/EnumerableFilter(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#org/apache/calcite/plan/RelOptUtil/eq(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#java/util/List/size()
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#org/apache/calcite/util/Litmus/succeed()
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#java/lang/Integer/valueOf(int)
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexUtil/containIdentity(java.util.List,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/needsAdjustment(org.apache.calcite.rel.rules.LoptMultiJoin,int%5B%5D,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinFields()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinRel()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/getJoinTree()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addAdditionalFilters(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/swapInputs(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumTotalFields()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/getFactorTree()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/swapFilter(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rel/rules/LoptJoinTree/LoptJoinTree(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.LoptJoinTree$BinaryTree,org.apache.calcite.rel.rules.LoptJoinTree$BinaryTree,boolean)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createJoinSubtree(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rel.rules.LoptJoinTree,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.List,boolean,boolean)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/jdbc/CalciteSchema/isRoot()
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/config/CalciteConnectionConfig/quotedCasing()
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/jdbc/CalciteSchema/createRootSchema(boolean)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/jdbc/CalciteConnectionImpl$CalciteServerImpl/CalciteConnectionImpl$CalciteServerImpl(org.apache.calcite.jdbc.CalciteConnectionImpl$1)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/config/CalciteConnectionConfig/caseSensitive()
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/JavaTypeFactoryImpl(org.apache.calcite.rel.type.RelDataTypeSystem)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/avatica/AvaticaConnection/AvaticaConnection(org.apache.calcite.avatica.UnregisteredDriver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/config/CalciteConnectionConfig/quoting()
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/config/CalciteConnectionConfigImpl/CalciteConnectionConfigImpl(java.util.Properties)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/config/CalciteConnectionConfig/typeSystem(java.lang.Class,java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl/CalciteConnectionImpl(org.apache.calcite.jdbc.Driver,org.apache.calcite.avatica.AvaticaFactory,java.lang.String,java.util.Properties,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)#org/apache/calcite/config/CalciteConnectionConfig/unquotedCasing()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#java/lang/Object/Object()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableSet/of(java.lang.Object)
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#org/apache/calcite/tools/RelBuilder$Field/RelBuilder$Field(com.google.common.collect.ImmutableSet,org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#org/apache/calcite/tools/RelBuilder$Frame/deriveAlias(org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#java/util/Iterator/hasNext()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#org/apache/calcite/jdbc/CalciteConnection/getRootSchema()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#org/apache/calcite/jdbc/CalciteConnection/setSchema(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#java/util/List/iterator()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#java/util/Iterator/next()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#java/util/Deque/pop()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#java/lang/AssertionError/AssertionError()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#org/apache/calcite/model/JsonSchema/accept(org.apache.calcite.model.ModelHandler)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonRoot)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#java/lang/Class/getMethods()
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#java/util/HashMap/HashMap()
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#java/lang/reflect/Method/getReturnType()
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#java/lang/reflect/Method/getName()
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#java/lang/Object/getClass()
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#java/lang/Object/Object()
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/stripPrefix(java.lang.String,int)
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/sql/pretty/SqlPrettyWriter$Bean/SqlPrettyWriter$Bean(org.apache.calcite.sql.pretty.SqlPrettyWriter)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getTraitSet()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSets()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getInput()
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/plan/SubstitutionVisitor$6/SubstitutionVisitor$6(java.util.Map)
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/getProjects()
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/Map/size()
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/getRexShuttle(org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/HashMap/HashMap()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/setNewForOldRel(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.sql.SemiJoinType)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRight()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRequiredColumns()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/getNewForOldInput(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getLeft()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/getNewForOldRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getCorrelationId()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Iterator/remove()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#com/google/common/collect/Multiset/elementSet()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Set/size()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Collection/size()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Iterator)
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Set/iterator()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Collection/iterator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/convertExpressionList(org.apache.calcite.sql2rel.SqlRexContext,java.util.List,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency)
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getTypeFactory()
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#java/util/List/subList(int,int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getValidator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertDatetimeMinus(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlDatetimeSubtractionOperator,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/Class/isArray()
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#org/apache/calcite/linq4j/Linq4j/asEnumerable(java.lang.Object%5B%5D)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#org/apache/calcite/linq4j/Linq4j/asEnumerable(java.lang.Iterable)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#org/apache/calcite/linq4j/Linq4j/asEnumerable(java.util.List)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#org/apache/calcite/linq4j/tree/Primitive/asList(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/Object/getClass()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,java.util.List,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Join/getVariablesSet()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$MutableSort/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$MutableScan/of(org.apache.calcite.rel.core.TableScan)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$MutableJoin/of(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType,java.util.Set)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Sort/getInput()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$MutableAggregate/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,boolean,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$MutableFilter/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor$MutableValues/of(org.apache.calcite.rel.core.Values)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/plan/SubstitutionVisitor/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#org/apache/calcite/rel/type/RelDataType/getFamily()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableModify/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableModify/getInput()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/emptySet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableModify/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/isIdentity()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/Util/discard(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableModify/getTraitSet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Object/getClass()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getCluster()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getProjectList()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/getProgram()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/isNullLiteral(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/addCondition(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getOutputRowType()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getTraitSet()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/RexProgramBuilder(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/registerInput(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getProgram()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/addProject(int,java.lang.String)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getInput()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule$1/ReduceExpressionsRule$CalcReduceExpressionsRule$1(org.apache.calcite.rel.rules.ReduceExpressionsRule$CalcReduceExpressionsRule,java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/setImportance(org.apache.calcite.rel.RelNode,double)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getExprList()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/createEmptyRelOrEquivalent(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Calc)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/sql/SqlSpecialOperator/createCall(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/sql/fun/SqlRowOperator/createCall(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/aliasContext(java.util.Map,boolean)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/sql/SqlNodeList/add(org.apache.calcite.sql.SqlNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/rel/core/Values/getTuples()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/result(org.apache.calcite.sql.SqlNode,java.util.Collection,org.apache.calcite.rel.RelNode,java.util.Map)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/exprList(org.apache.calcite.rel.rel2sql.SqlImplementor$Context,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlLiteral/createBoolean(boolean,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlOperator/createCall(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlDialect$DatabaseProduct/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlLiteral/createTimestamp(java.util.Calendar,int,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getTypeName()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlLiteral/createApproxNumeric(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/Object/toString()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/fun/SqlCase/SqlCase(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlDialect/getDatabaseProduct()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlLiteral/createDate(java.util.Calendar,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlFunction/createCall(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getType()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlLiteral/createNull(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/rel2sql/SqlImplementor/access$100(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlLiteral/createTime(java.util.Calendar,int,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlLiteral/createExactNumeric(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/createLeftCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getValue2()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/field(int)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlLiteral/createSymbol(java.lang.Enum,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlLiteral/createCharString(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexProgram/getExprList()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#java/util/List/size()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/next()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/interpreter/Interpreter/getDataContext()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#java/util/List/iterator()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/util/ImmutableBitSet/union(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/interpreter/AbstractSingleNode/AbstractSingleNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.SingleRel)
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/interpreter/AggregateNode/AggregateNode(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/interpreter/AggregateNode$Grouping/AggregateNode$Grouping(org.apache.calcite.interpreter.AggregateNode,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.interpreter.AggregateNode$1)
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#org/apache/calcite/sql/type/SqlTypeAssignmentRules/copy(java.util.Map)
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/EnumSet/of(java.lang.Enum)
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/Set/iterator()
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#org/apache/calcite/sql/type/SqlTypeAssignmentRules/copy(java.util.Set)
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/HashSet/HashSet()
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/lang/Object/Object()
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/Iterator/next()
org/apache/calcite/sql/type/SqlTypeAssignmentRules/SqlTypeAssignmentRules()#java/util/HashMap/HashMap()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/util/Permutation/getSource(int)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rex/RexProgram/RexProgram(org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rel/logical/LogicalCalc/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rex/RexLocalRef/RexLocalRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/util/Permutation/getTarget(int)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rel/logical/LogicalProject/getPermutation()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rex/RexProgram/getPermutation()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rel/logical/LogicalCalc/getProgram()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/util/Permutation/getTargetCount()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/util/Permutation/product(org.apache.calcite.util.Permutation)
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#org/apache/calcite/util/Permutation/isIdentity()
org/apache/calcite/plan/RelOptUtil/permute(org.apache.calcite.rel.RelNode,org.apache.calcite.util.Permutation,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/MultiJoin(org.apache.calcite.plan.RelOptCluster,java.util.List,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean,java.util.List,java.util.List,java.util.List,com.google.common.collect.ImmutableMap,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getJoinTypes()
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getRowType()
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getJoinFieldRefCountsMap()
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getJoinFilter()
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getOuterJoinConditions()
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getInputs()
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/isFullOuterJoin()
org/apache/calcite/rel/rules/FilterMultiJoinMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getProjFields()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggContext/aggregation()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/arguments()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/throw_(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#java/lang/AssertionError/AssertionError(int)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#org/apache/calcite/sql/pretty/SqlPrettyWriter$FrameImpl/access$300(org.apache.calcite.sql.pretty.SqlPrettyWriter$FrameImpl)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#org/apache/calcite/sql/pretty/SqlPrettyWriter$FrameImpl/access$200(org.apache.calcite.sql.pretty.SqlPrettyWriter$FrameImpl)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#org/apache/calcite/sql/SqlWriter$FrameType/needsIndent()
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#java/util/Deque/pop()
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#org/apache/calcite/sql/pretty/SqlPrettyWriter/keyword(java.lang.String)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#java/util/Deque/isEmpty()
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#org/apache/calcite/util/Util/pre(boolean,java.lang.String)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/sql/pretty/SqlPrettyWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)#org/apache/calcite/sql/pretty/SqlPrettyWriter/newlineAndIndent()
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#com/google/common/cache/LoadingCache/getUnchecked(java.lang.Object)
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#java/lang/Class/getName()
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/RelTraitDef/canonizeComposite(org.apache.calcite.plan.RelCompositeTrait)
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/RelTraitDef/getTraitClass()
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#java/lang/Object/getClass()
org/apache/calcite/plan/RelTraitDef/canonize(org.apache.calcite.plan.RelTrait)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeUtil/isNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandLiteralValue(int)
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/Number/intValue()
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperator()
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/newError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/runtime/CalciteResource/argumentMustBeValidPrecision(java.lang.String,int,int)
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandCount()
org/apache/calcite/sql/fun/SqlAbstractTimeFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexProgramBuilder/access$000(org.apache.calcite.rex.RexProgramBuilder)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/get(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexProgramBuilder/access$500(org.apache.calcite.rex.RexProgramBuilder)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/plan/RelOptUtil/eq(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/Class/getInterfaces()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/Class/getSuperclass()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/getProperty(java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/keys()
org/apache/calcite/util/SaffronProperties$Helper/instance()#org/apache/calcite/runtime/Resources/create(java.util.Properties,java.lang.Class)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/io/File/exists()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/io/File/File(java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/System/getProperties()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/io/FileInputStream/FileInputStream(java.io.File)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Enumeration/nextElement()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/StringBuilder/toString()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/Properties()
org/apache/calcite/util/SaffronProperties$Helper/instance()#org/apache/calcite/util/Util/newInternal(java.lang.Throwable,java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/load(java.io.InputStream)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Enumeration/hasMoreElements()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#java/util/List/size()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/getSystemFieldList()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#java/util/BitSet/BitSet(int)
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)#java/lang/Object/Object()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$StatementType/canUpdate()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$ExecuteResult/Meta$ExecuteResult(java.util.List)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$MetaResultSet/create(java.lang.String,int,boolean,org.apache.calcite.avatica.Meta$Signature,org.apache.calcite.avatica.Meta$Frame)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#java/lang/Iterable/iterator()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$MetaResultSet/count(java.lang.String,int,long)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#java/util/Collections/emptyList()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/server/CalciteServerStatement/setResultSet(java.util.Iterator)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#java/lang/Number/intValue()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/jdbc/CalciteMetaImpl/_createIterable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.avatica.Meta$Signature,java.util.List,org.apache.calcite.avatica.Meta$Frame)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/jdbc/CalciteMetaImpl/getConnection()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$Frame/Meta$Frame(long,boolean,java.lang.Iterable)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/server/CalciteServerStatement/getSignature()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/server/CalciteServer/getStatement(org.apache.calcite.avatica.Meta$StatementHandle)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/java/JavaTypeFactory/getJavaClass(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/Object/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/avatica/util/ByteString/getBytes()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/rex/RexLiteral/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Primitive/ofBoxOr(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/util/Calendar/getTimeInMillis()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/Object/getClass()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/math/BigDecimal/intValue()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Primitive/number(java.lang.Number)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/math/BigDecimal/longValue()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexWindowBound/isFollowing()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexWindowBound/getOffset()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/java/JavaTypeFactory/getJavaClass(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexWindowBound/isCurrentRow()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/PhysType/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexWindowBound/isPreceding()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rel/core/Window$Group/collation()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexWindowBound/isUnbounded()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexBuilder/makeRangeReference(org.apache.calcite.rel.type.RelDataType,int,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/runtime/CalciteResource/insertIntoAlwaysGenerated(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/SqlToRelConverter/castNullLiteralIfNeeded(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/DefaultValueFactory/isGeneratedAlways(org.apache.calcite.plan.RelOptTable,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/DefaultValueFactory/newColumnDefaultValue(org.apache.calcite.plan.RelOptTable,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/prepare/Prepare$CatalogReader/field(org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/SqlToRelConverter/getTargetTable(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/runtime/Resources$ExInst/ex()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Query/simplifyList(java.util.List,java.lang.String)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser/consumeQuery(java.util.ListIterator,java.util.List)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/SqlSimpleParser$Tokenizer(java.lang.String,java.lang.String)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/List/listIterator()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Token/unparse(java.lang.StringBuilder)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/sql2rel/SqlToRelConverter$CorrelationUse/access$600(org.apache.calcite.sql2rel.SqlToRelConverter$CorrelationUse)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/sql/SemiJoinType/of(org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/sql2rel/SqlToRelConverter$CorrelationUse/access$300(org.apache.calcite.sql2rel.SqlToRelConverter$CorrelationUse)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/sql2rel/SqlToRelConverter$CorrelationUse/access$200(org.apache.calcite.sql2rel.SqlToRelConverter$CorrelationUse)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/logical/LogicalCorrelate/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.sql.SemiJoinType)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/RelFactories$JoinFactory/createJoin(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/RelFactories$FilterFactory/createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/getRootField(org.apache.calcite.rex.RexInputRef)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#org/apache/calcite/util/Util/enumVal(java.lang.Enum,java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#org/apache/calcite/adapter/jdbc/JdbcSchema/close(java.sql.Connection,java.sql.Statement,java.sql.ResultSet)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/String/replace(char,char)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/sql/DatabaseMetaData/getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String%5B%5D)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/sql/ResultSet/next()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/String/toUpperCase()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#org/apache/calcite/adapter/jdbc/JdbcTable/JdbcTable(org.apache.calcite.adapter.jdbc.JdbcSchema,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.schema.Schema$TableType)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/sql/ResultSet/getString(int)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#javax/sql/DataSource/getConnection()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/sql/Connection/getMetaData()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/runtime/CalciteResource/noValueSuppliedForViewColumn(java.lang.String,java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/HashMap/HashMap()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/core/TableScan/getTable()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/util/ImmutableIntList/range(int,int)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/runtime/CalciteResource/modifiableViewMustBeBasedOnSingleTable()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/List/get(int)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/util/ImmutableIntList/copyOf(java.lang.Iterable)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/util/Util/skip(java.util.List,int)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/runtime/CalciteResource/moreThanOneMappedColumn(java.lang.String,java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/jdbc/CalcitePrepare$AnalyzeViewResult/CalcitePrepare$AnalyzeViewResult(org.apache.calcite.prepare.CalcitePrepareImpl,org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelRoot,org.apache.calcite.schema.Table,com.google.common.collect.ImmutableList,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$TokenType/ordinal()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Query/findClause(org.apache.calcite.sql.advise.SqlSimpleParser$TokenType)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/size()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/clear()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/get(int)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Token/access$200(org.apache.calcite.sql.advise.SqlSimpleParser$Token)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Token/SqlSimpleParser$Token(org.apache.calcite.sql.advise.SqlSimpleParser$TokenType,java.lang.String)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$Token/access$100(org.apache.calcite.sql.advise.SqlSimpleParser$Token)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/subList(int,int)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#org/apache/calcite/sql/type/SqlOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupGroupExpr(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/bitValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,int,int)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/effectiveArgCount(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/util/ImmutableIntList/range(int,int)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/math/BigDecimal/pow(int)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/math/BigDecimal/subtract(java.math.BigDecimal)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlToRelConverter/access$1900()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#com/google/common/base/Supplier/get()
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/lang/Class/forName(java.lang.String)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#com/google/common/collect/ImmutableMultimap/entries()
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#org/apache/calcite/schema/SchemaPlus/add(java.lang.String,org.apache.calcite.schema.Function)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#org/apache/calcite/schema/impl/ScalarFunctionImpl/create(java.lang.Class,java.lang.String)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#org/apache/calcite/schema/impl/TableFunctionImpl/create(java.lang.Class,java.lang.String)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#com/google/common/collect/ImmutableCollection/iterator()
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#org/apache/calcite/schema/impl/TableMacroImpl/create(java.lang.Class)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/util/Map$Entry/getKey()
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String)#java/util/Map$Entry/getValue()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#java/util/Iterator/next()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/sql/SqlOperatorBinding/newError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/sql/validate/SqlValidator/isSystemField(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#java/util/List/size()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/runtime/CalciteResource/duplicateColumnName(java.lang.String)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#java/util/List/iterator()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/addOutputColumn(java.util.List,java.util.List,int,int,org.apache.calcite.sql.SqlOperatorBinding,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/metadata/RelColumnMapping/RelColumnMapping(int,int,int,boolean)
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#org/apache/calcite/sql/parser/SqlParserUtil/getTokenVal(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#java/util/List/size()
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#java/util/List/toArray(java.lang.Object%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#org/apache/calcite/sql/parser/impl/SqlParserImpl/getMetadata()
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#java/util/List/isEmpty()
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#java/util/Arrays/asList(java.lang.Object%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#org/apache/calcite/sql/parser/SqlAbstractParserImpl$Metadata/isNonReservedKeyword(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/cleanupParseException(org.apache.calcite.sql.parser.impl.ParseException)#org/apache/calcite/sql/parser/impl/SqlParserImpl/matchesPrefix(int%5B%5D,int%5B%5D%5B%5D)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/Class/newInstance()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/util/List/toArray()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/util/Arrays/toString(java.lang.Object%5B%5D)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Method/getModifiers()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/SqlOperatorTable/getOperatorList()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/validate/SqlValidator/getOperatorTable()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/SqlOperator/getOperandTypeChecker()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/validate/SqlMonikerImpl/SqlMonikerImpl(java.lang.String,org.apache.calcite.sql.validate.SqlMonikerType)
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/SqlOperator/getSyntax()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/SqlUtil/makeCall(org.apache.calcite.sql.SqlOperatorTable,org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/SqlOperator/getAllowedSignatures()
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/findAllValidFunctionNames(java.util.List,org.apache.calcite.sql.validate.SqlValidator,java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)#java/util/Collection/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/Ord/zip(java.lang.Object%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/logical/LogicalUnion/create(java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql2rel/SqlToRelConverter/convertLiteralInValuesList(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/fun/SqlRowOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeUtil/promoteToRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql2rel/SqlToRelConverter/convertRowConstructor(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql2rel/SqlToRelConverter/isRowConstructor(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql2rel/SqlToRelConverter$Config/isCreateValuesRel()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/logical/LogicalValues/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/Collection/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/logical/LogicalValues/getTuples()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/Aggregate/Aggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/InvalidRelException/InvalidRelException(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/getConvention()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcAggregate/JdbcRules$JdbcAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/adapter/jdbc/JdbcRules/access$1100(org.apache.calcite.sql.SqlAggFunction,org.apache.calcite.sql.SqlDialect)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUtil/isNullLiteral(org.apache.calcite.sql.SqlNode,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/fun/SqlCase/getWhenOperands()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCallBinding/SqlCallBinding(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCallBinding/operands()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/fun/SqlCase/getValueOperand()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlOperator/getOperandTypeInference()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#java/util/Arrays/fill(java.lang.Object%5B%5D,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/getList()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/type/SqlOperandTypeInference/inferOperandTypes(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType%5B%5D)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/runtime/CalciteResource/dynamicParamIllegal()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/fun/SqlCase/getThenOperands()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/setValidatedNodeTypeImpl(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/runtime/CalciteResource/nullIllegal()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/fun/SqlCase/getElseOperand()
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/inferUnknownTypes(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#java/util/HashSet/equals(java.lang.Object)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rex/RexUtil/fixUp(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/tools/RelBuilder/convert(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/plan/RelOptUtil/getFieldTypeList(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/tools/RelBuilder/filter(java.lang.Iterable)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/rules/FilterJoinRule/validateJoinFilters(java.util.List,java.util.List,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#java/util/List/size()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/plan/RelOptPlanner/onCopy(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)#org/apache/calcite/plan/RelOptRuleOperandChildPolicy/ordinal()
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptRuleOperand/RelOptRuleOperand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildPolicy,com.google.common.collect.ImmutableList)#java/lang/Object/Object()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/util/ImmutableBitSet/asList()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetter/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexFieldAccess/getReferenceExpr()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/nullifyType(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/isNullable(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateParameter(org.apache.calcite.rex.RexDynamicParam,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/handle(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/function/Function1/apply(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCall(org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexFieldAccess/getField()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexCorrelVariable/getName()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/deref(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getTraitSet()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getTraitSet()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMdUtil/checkInputForCollationAndLimit(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/size()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexProgramBuilder/access$000(org.apache.calcite.rex.RexProgramBuilder)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexProgramBuilder/access$100(org.apache.calcite.rex.RexProgramBuilder)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/get(int)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rex/RexNode/RexNode()
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexFieldAccess/RexFieldAccess(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataTypeField)#java/util/List/get(int)
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlLiteral/getValue()
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlCallBinding/operand(int)
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandCount()
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/fun/SqlCastFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/validate/SqlValidator/setValidatedNodeType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#org/apache/calcite/rel/rules/PushProjector$InputSpecialOpFinder/PushProjector$InputSpecialOpFinder(org.apache.calcite.rel.rules.PushProjector,java.util.BitSet,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.rules.PushProjector$ExprCondition,java.util.List,java.util.List)
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/Iterator/next()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/lang/Iterable/iterator()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/BitSet/set(int)
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/List/size()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/BitSet/cardinality()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#org/apache/calcite/util/BitSets/toIter(java.util.BitSet)
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/BitSet/set(int,int,boolean)
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.rex.RexVisitor,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1100(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalCorrelate)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1500(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil$FieldAccessFinder/getFieldAccessList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/getVariablesUsed(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Object/toString()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMdUtil/areColumnsDefinitelyUniqueWhenNullsFiltered(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/size()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1000(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/splitCorrelatedFilterCondition(org.apache.calcite.rel.logical.LogicalFilter,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$200(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1600(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.logical.LogicalCorrelate)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$300(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/removeCorrelationExpr(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/hep/HepRelVertex/getCurrentRel()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1400(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1200()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql2rel/RelDecorrelator/access$1300(org.apache.calcite.sql2rel.RelDecorrelator,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil$FieldAccessFinder/RexUtil$FieldAccessFinder()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/getRoot()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/createSingleValueAggRel(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getInput()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCorrelate/getCluster()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.rex.RexVisitor,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getVariablesSet()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getTraitSet()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/Bindables$BindableJoin/Bindables$BindableJoin(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getRight()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/core/Aggregate/getIndicatorCount()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/metadata/RelMdColumnOrigins/createDerivedColumnOrigins(java.util.Set)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/metadata/RelMetadataQuery/getColumnOrigins(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/List/get(int)
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/size()
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createMultisetType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/get(int)
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandCount()
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/ReturnTypes$11/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/isEmpty()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getTraitSet()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getVariablesSet()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/get(int)
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandCount()
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/type/ReturnTypes$13/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/cook(org.codehaus.janino.Scanner)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/Class/newInstance()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/setExtendedClass(java.lang.Class)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/setImplementedInterfaces(java.lang.Class%5B%5D)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/getClazz()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/ClassBodyEvaluator()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/setClassName(java.lang.String)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/setParentClassLoader(java.lang.ClassLoader)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/Scanner/Scanner(java.lang.String,java.io.Reader)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/Class/getClassLoader()
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#org/apache/calcite/sql/SqlDialect$FakeUtil/newInternal(java.lang.Throwable,java.lang.String)
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/nullsAreSortedAtEnd()
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/nullsAreSortedAtStart()
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#org/apache/calcite/sql/SqlDialect/getProduct(java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/nullsAreSortedLow()
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#org/apache/calcite/sql/SqlDialect/SqlDialect(org.apache.calcite.sql.SqlDialect$DatabaseProduct,java.lang.String,java.lang.String,org.apache.calcite.config.NullCollation)
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/nullsAreSortedHigh()
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getDatabaseProductName()
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getDatabaseProductVersion()
org/apache/calcite/sql/SqlDialect/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getIdentifierQuoteString()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/binary(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlBinaryOperator)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/ConstantExpression/toString()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/parameter(org.apache.calcite.linq4j.tree.ParameterExpression)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/util/Map/get(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expression/getNodeType()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexBuilder/makeFieldAccess(org.apache.calcite.rex.RexNode,java.lang.String,boolean)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/Number/longValue()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/Boolean/booleanValue()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/Number/doubleValue()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/ExpressionType/ordinal()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexBuilder/makeApproxLiteral(java.math.BigDecimal)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendAll(java.lang.Iterable)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/type(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/math/BigDecimal/valueOf(double)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/PseudoField/getName()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getNamedProjects()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/hep/HepPlanner/setRoot(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/volcano/VolcanoPlanner/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#java/util/List/size()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getTraitSet()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/volcano/VolcanoPlanner/getMaterializations()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#java/util/List/iterator()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/hep/HepPlanner/HepPlanner(org.apache.calcite.plan.hep.HepProgram,org.apache.calcite.plan.Context)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rules/MaterializedViewJoinRule/materializedViewProjects(java.util.Map,java.util.SortedMap,java.util.Map,org.apache.calcite.rel.core.Project)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/hep/HepPlanner/findBestExp()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/RelOptPlanner/getContext()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#com/google/common/collect/ImmutableSet/containsAll(java.util.Collection)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rules/MaterializedViewJoinRule/originalFields(org.apache.calcite.rel.rules.MultiJoin,java.util.List)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rules/MaterializedViewJoinRule/filterConditions(org.apache.calcite.rel.rules.MultiJoin)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/rules/MaterializedViewJoinRule/isSupportedJoin(org.apache.calcite.rel.rules.MultiJoin)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#com/google/common/collect/ImmutableSet/copyOf(java.util.Collection)
org/apache/calcite/rel/rules/MaterializedViewJoinRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeSystem/isSchemaCaseSensitive()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/sql/validate/SqlValidatorUtil/uniquify(java.util.List,boolean)
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/RelOptUtil/projectJoinInputs(org.apache.calcite.rel.RelNode%5B%5D,java.util.List,java.util.List,int,java.util.List,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/avatica/AvaticaParameter/AvaticaParameter(boolean,int,int,int,java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/Prepare$PreparedResult/getBindable(org.apache.calcite.avatica.Meta$CursorFactory)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/jdbc/CalcitePrepare$CalciteSignature/CalcitePrepare$CalciteSignature(java.lang.String,java.util.List,java.util.Map,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.avatica.Meta$CursorFactory,java.util.List,long,org.apache.calcite.runtime.Bindable)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/getScale(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/runtime/Typed/getElementType()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/createParserConfig()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/createConvertletTable()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/getPrecision(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/avatica/Meta$CursorFactory/deduce(java.util.List,java.lang.Class)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/makeStruct(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/jdbc/CalcitePrepare$Context/getTypeFactory()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl$4/CalcitePrepareImpl$4(org.apache.calcite.prepare.CalcitePrepareImpl)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/jdbc/CalcitePrepare$Context/getRootSchema()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/jdbc/CalcitePrepare$CalciteSignature/CalcitePrepare$CalciteSignature(java.lang.String,java.util.List,java.util.Map,org.apache.calcite.rel.type.RelDataType,java.util.List,org.apache.calcite.avatica.Meta$CursorFactory,java.util.List,long,org.apache.calcite.runtime.Bindable,org.apache.calcite.avatica.Meta$StatementType)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/parser/SqlParser$ConfigBuilder/setUnquotedCasing(org.apache.calcite.avatica.util.Casing)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/config/CalciteConnectionConfig/quotedCasing()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/parser/SqlParser/parseStmt()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/validate/SqlValidator/setDefaultNullCollation(org.apache.calcite.config.NullCollation)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepareQueryable(org.apache.calcite.linq4j.Queryable,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/getColumnMetaDataList(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/parser/SqlParser$ConfigBuilder/setConformance(org.apache.calcite.sql.validate.SqlConformance)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/getTypeOrdinal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/parser/SqlParser$ConfigBuilder/setQuotedCasing(org.apache.calcite.avatica.util.Casing)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/jdbc/CalcitePrepare$Context/config()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/createSqlValidator(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.prepare.CalciteCatalogReader)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/Prepare$PreparedResult/getParameterRowType()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/getStatementType(org.apache.calcite.sql.SqlKind)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/createParser(java.lang.String,org.apache.calcite.sql.parser.SqlParser$ConfigBuilder)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/parser/SqlParser$ConfigBuilder/setParserFactory(org.apache.calcite.sql.parser.SqlParserImplFactory)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/config/CalciteConnectionConfig/defaultNullCollation()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/executeDdl(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.sql.SqlNode)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/Prepare$PreparedResult/getFieldOrigins()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepareRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/config/CalciteConnectionConfig/parserFactory(java.lang.Class,java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/getStatementType(org.apache.calcite.prepare.Prepare$PreparedResult)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/getTypeName(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/access$000(org.apache.calcite.prepare.CalcitePrepareImpl$CalcitePreparingStmt)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepareSql(org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/config/CalciteConnectionConfig/conformance()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/CalcitePrepareImpl$CalcitePreparingStmt(org.apache.calcite.prepare.CalcitePrepareImpl,org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.prepare.Prepare$CatalogReader,org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer,org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.plan.Convention,org.apache.calcite.sql2rel.SqlRexConvertletTable)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/plan/RelOptUtil/createDmlRowType(org.apache.calcite.sql.SqlKind,org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/validate/SqlValidator/setIdentifierExpansion(boolean)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/SqlKind/belongsTo(java.util.Collection)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl/getClassName(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/AssertionError/AssertionError()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/parser/SqlParser$ConfigBuilder/setQuoting(org.apache.calcite.avatica.util.Quoting)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/config/CalciteConnectionConfig/quoting()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/adapter/java/JavaTypeFactory/createType(java.lang.reflect.Type)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/parser/SqlParseException/getMessage()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/config/CalciteConnectionConfig/unquotedCasing()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/Class/getFields()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl/createJavaType(java.lang.Class)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/util/List/isEmpty()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/util/List/size()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#org/apache/calcite/rel/type/RelDataTypeFieldImpl/RelDataTypeFieldImpl(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/reflect/Field/getModifiers()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/reflect/Field/getName()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/reflect/Field/getType()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/rules/ValuesReduceRule$MyRexShuttle/access$202(org.apache.calcite.rel.rules.ValuesReduceRule$MyRexShuttle,java.util.List)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rex/RexBuilder/makeAbstractCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalValues/getRowType()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rex/RexLiteral/isNullLiteral(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalValues/getCluster()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rex/RexUtil/isNullLiteral(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/List/size()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalValues/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.type.RelDataType,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/rules/ValuesReduceRule$MyRexShuttle/ValuesReduceRule$MyRexShuttle(org.apache.calcite.rel.rules.ValuesReduceRule$1)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/List/get(int)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/List/iterator()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/plan/RelOptPlanner/setImportance(org.apache.calcite.rel.RelNode,double)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalValues/getTuples()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/EnumerableAggregate(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getInput()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSets()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#org/apache/calcite/util/JsonBuilder/list()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/Object/getClass()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.core.CorrelationId)
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable/toSql(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable/allSame(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#org/apache/calcite/rex/RexBuilder/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/RexImpTable/harmonize(org.apache.calcite.adapter.enumerable.RexToLixTranslator,java.util.List)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/isNullable(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/fieldClass(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/rel/RelFieldCollation/getDirection()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/fieldReference(org.apache.calcite.linq4j.tree.Expression,int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/Collections/emptyList()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/negate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/List/size()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Primitive$Flavor/ordinal()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/adapter/enumerable/EnumUtils/overridingMethodDecl(java.lang.reflect.Method,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Primitive/flavor(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/fieldNullable(int)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/AbstractRelNode/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/item(java.lang.String,java.lang.Object)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/core/JoinRelType/name()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/input(java.lang.String,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/size()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/util/ImmutableBitSet/toString()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/itemIf(java.lang.String,java.lang.Object,boolean)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/newAggregateRel(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/util/CompositeList/of(java.util.List,java.util.List)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAgg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,java.util.List)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/getFieldType(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getIndicatorCount()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/tools/RelBuilder/fields()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/util/ArrayList/ArrayList()
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/sql/ResultSet/getLong(int)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/sql/ResultSet/wasNull()
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/util/List/add(java.lang.Object)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/sql/ResultSetMetaData/getColumnType(int)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/sql/ResultSet/getObject(int)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/lang/Long/valueOf(long)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/util/List/toArray()
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression,boolean)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/Expressions/box(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/signum()
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/divide(java.math.BigDecimal,int)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/List/size()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/Iterator/next()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeFactory/createMultisetType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeFieldImpl/RelDataTypeFieldImpl(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/sql/type/SqlTypeUtil/needsNullIndicator(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/flattenFields(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,java.util.List,int%5B%5D)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/getRightPrec()
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlInsert/getSource()
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/util/Pair/zip(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlNodeList/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlMerge/getOperator()
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/newlineAndIndent()
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameType,java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlInsert/getTargetColumnList()
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlIdentifier/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#java/lang/Iterable/iterator()
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlMerge/unparse(org.apache.calcite.sql.SqlWriter,int,int)#org/apache/calcite/sql/SqlOperator/getLeftPrec()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableMultimap/builder()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/ReflectiveRelMetadataProvider$Space2(java.lang.Class,com.google.common.collect.ImmutableMultimap)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableMultimap$Builder/build()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPredicateList/shift(org.apache.calcite.rex.RexBuilder,int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinInfo/isEqui()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPredicateList/union(org.apache.calcite.rex.RexBuilder,org.apache.calcite.plan.RelOptPredicateList)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinInfo/of(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/setImportance(org.apache.calcite.rel.RelNode,double)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$JoinReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/io/PrintWriter/println()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/io/PrintWriter/flush()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/util/List/iterator()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql/validate/SqlValidatorScope$Path/steps()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/rex/RexBuilder/makeCorrel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.CorrelationId)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql2rel/SqlToRelConverter/access$1200(org.apache.calcite.sql2rel.SqlToRelConverter)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/only()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql/validate/SqlQualified/prefix()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql2rel/SqlToRelConverter$LookupContext/SqlToRelConverter$LookupContext(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql/validate/ListScope/getChildren()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolve/rowType()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/uniquify()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookup(int,org.apache.calcite.sql2rel.SqlToRelConverter$LookupContext)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/addAll(java.lang.Iterable)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql2rel/SqlToRelConverter$DeferredLookup/SqlToRelConverter$DeferredLookup(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/SqlValidatorScope$ResolvedImpl()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql/validate/SqlValidatorScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/plan/RelOptCluster/createCorrel()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/count()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlIdentifier/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNode/equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SelectScope/addWindowName(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/runtime/CalciteResource/windowNameMustBeSimple()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SelectScope/existingWindowName(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/runtime/CalciteResource/duplicateWindowName()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlWindow/getDeclName()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlNodeList/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlIdentifier/isSimple()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/runtime/CalciteResource/dupWindowSpec()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/SqlSelect/getWindowList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateWindowClause(org.apache.calcite.sql.SqlSelect)#org/apache/calcite/sql/validate/SqlValidatorImpl/getFromScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/util/NlsString/getCollation()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/util/NlsString/getCharset()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/util/NlsString/getValue()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/lang/String/length()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/util/BitString/getBitCount()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlIntervalType(org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/sql/SqlIntervalLiteral$IntervalValue/getIntervalQualifier()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/sql/SqlLiteral/toString()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory/getDefaultCharset()
org/apache/calcite/sql/SqlLiteral/createSqlType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.util.mapping.Mappings$TargetMapping)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/plan/RelOptUtil$13/RelOptUtil$13(int,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/plan/RelOptUtil/containsGet(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/util/mapping/Mappings$TargetMapping/inverse()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/util/mapping/Mappings/createShiftMapping(int,int%5B%5D)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#java/util/List/isEmpty()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rex/RexUtil$SubQueryFinder/find(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/plan/RelOptUtil$14/RelOptUtil$14(int,java.util.List,java.util.List,int)
org/apache/calcite/plan/RelOptUtil/pushDownJoinConditions(org.apache.calcite.rel.core.Join,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumJoinFactors()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getMultiJoinRel()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Set/iterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/isSuitableFilter(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/MultiJoin/isFullOuterJoin()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/keySet()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/isNullGenerating(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFilters()
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#java/util/Iterator/remove()
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelTraitDef/deregisterConverterRule(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.convert.ConverterRule)
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelOptRuleOperand/getRule()
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelTrait/getTraitDef()
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/rel/convert/ConverterRule/getInTrait()
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#java/util/Set/remove(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/volcano/VolcanoPlanner/unmapRuleDescription(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#com/google/common/collect/Multimap/values()
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#java/util/Collection/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/removeRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelOptRule/equals(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/RelOptRule/matches(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/List/size()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/util/Util/newInternal(java.lang.Throwable,java.lang.String)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/RelOptRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/RelOptListener/ruleAttempted(org.apache.calcite.plan.RelOptListener$RuleAttemptedEvent)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/Arrays/toString(java.lang.Object%5B%5D)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/volcano/VolcanoRuleCall/getRule()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/List/isEmpty()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/RelOptListener$RuleAttemptedEvent/RelOptListener$RuleAttemptedEvent(java.lang.Object,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptRuleCall,boolean)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/volcano/VolcanoPlanner/checkCancel()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/Double/doubleValue()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/volcano/VolcanoPlanner/isRuleExcluded(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getInput()
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/enumerable/EnumerableLimit/EnumerableLimit(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/enumerable/EnumerableLimitRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/enumerable/EnumerableLimitRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getTraitSet()
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#org/apache/calcite/linq4j/tree/Expressions/multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/divide(java.math.BigDecimal,int)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#org/apache/calcite/linq4j/tree/Expressions/divide(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/intValueExact()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCollect/getInput()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCollect/getRowType()
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexProgram/getProjectList()
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#java/util/Iterator/next()
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexProgramBuilder/addCondition(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#java/util/List/get(int)
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#java/util/List/iterator()
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexProgramBuilder$RegisterOutputShuttle/RexProgramBuilder$RegisterOutputShuttle(org.apache.calcite.rex.RexProgramBuilder,java.util.List)
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexProgramBuilder/registerInput(org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexProgram/getExprList()
org/apache/calcite/rex/RexProgramBuilder/registerProjectsAndCondition(org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList/of()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#org/apache/calcite/sql/SqlSelect/isDistinct()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#org/apache/calcite/sql/SqlSelect/getGroup()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#java/util/Iterator/next()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#org/apache/calcite/sql/SqlUtil/stripAs(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#org/apache/calcite/sql/validate/SelectScope/getExpandedSelectList()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#java/util/List/iterator()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/base/Supplier/get()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlJoin/isNatural()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlJoin$SqlJoinOperator/getRightPrec()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/JoinType/ordinal()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameTypeEnum)
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlJoin/getConditionType()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlJoin$SqlJoinOperator/getLeftPrec()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/util/Util/unexpected(java.lang.Enum)
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlJoin/getJoinType()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/JoinConditionType/ordinal()
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameType,java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlJoin$SqlJoinOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String,boolean)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/List/size()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFactor(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/core/JoinInfo/of(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer$LcsTable/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/rules/LoptMultiJoin/getNumFieldsInJoinFactor(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/util/ImmutableIntList/size()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/util/ImmutableIntList/copyOf(java.lang.Iterable)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/adjustSemiJoinCondition(org.apache.calcite.rel.rules.LoptMultiJoin,int,org.apache.calcite.rex.RexNode,int,int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer$LcsIndexOptimizer/LoptSemiJoinOptimizer$LcsIndexOptimizer(org.apache.calcite.rel.rules.LoptSemiJoinOptimizer$LcsTableScan)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/removeExtraFilters(java.util.List,int,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/plan/RelOptUtil/getContext(org.apache.calcite.plan.RelOptCluster)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer$LcsIndexOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/core/SemiJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeOver(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List,com.google.common.collect.ImmutableList,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,boolean,boolean,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexShuttle/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlAggFunction/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlWindow/isAllowPartial()
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeReinterpretCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlWindow/isRows()
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/computeHistogramType(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCallBinding/RexCallBinding(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlOperator,java.util.List,java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/sql2rel/SqlToRelConverter$HistogramShuttle/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/util/Util/toURL(java.io.File)#java/io/File/getAbsolutePath()
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/String/replace(char,char)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/String/charAt(int)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/String/length()
org/apache/calcite/util/Util/toURL(java.io.File)#java/net/URL/URL(java.lang.String)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/System/getProperty(java.lang.String)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/reregister(org.apache.calcite.plan.volcano.RelSet,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSubset/propagateCostImprovements(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.Set)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/fireRules(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSet(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSubset/getTraitSet()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSet/getParentRels()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/HashSet/HashSet()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/RelOptCost/isLt(org.apache.calcite.plan.RelOptCost)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSet/getOrCreateSubset(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/Set/isEmpty()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSubset/getCluster()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSubset/getRels()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/List/remove(java.lang.Object)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/getSubset(org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/tools/RelBuilder/alias(org.apache.calcite.rex.RexNode,java.lang.String)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/tools/RelBuilder$Frame/fields()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#java/lang/StringBuilder/append(int)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/tools/RelBuilder/peek_(int,int)
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/field(int,int,int,boolean)#org/apache/calcite/tools/RelBuilder/inputOffset(int,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/runtime/CalciteResource/numberLiteralOutOfRange(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/getValue()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteralAsDouble(org.apache.calcite.sql.SqlLiteral)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/util/Util/discard(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/getTypeName()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigInteger/valueOf(long)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/runtime/CalciteResource/binaryLiteralOdd()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlIntervalQualifier/evaluateIntervalLiteral(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.rel.type.RelDataTypeSystem)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigDecimal/unscaledValue()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/runtime/CalciteResource/dateLiteralOutOfRange(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigInteger/equals(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigDecimal/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlIntervalLiteral$IntervalValue/getIntervalQualifier()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/util/BitString/getBitCount()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlIntervalLiteral$IntervalValue/getIntervalLiteral()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/util/Calendar/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigInteger/longValue()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/extend(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/Identifier()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/runtime/CalciteResource/invalidSampleSize()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlLiteral/createSample(org.apache.calcite.sql.SqlSampleSpec,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_123(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/SqlParserPos/plus(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlNumericLiteral/bigDecimalValue()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlUnnestOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_consume_token(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/TableFunctionCall(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/ParenthesizedExpression(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/ParseException/ParseException(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlBinaryOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlSpecialOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlNodeList/getList()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_119(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/ParenthesizedSimpleIdentifierList()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/runtime/Resources$ExInst/str()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_129(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_118(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_128(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_117(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/math/BigDecimal/divide(java.math.BigDecimal)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_127(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_116(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/TableOverOpt()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_126(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_115(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/ParseException/ParseException()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlAsOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_125(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_124(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlSampleSpec/createTableSample(boolean,float,int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/CompoundIdentifier()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_133(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_122(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/math/BigDecimal/floatValue()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/UnsignedNumericLiteral()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlSampleSpec/createTableSample(boolean,float)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_132(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_121(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/ParenthesizedQueryOrCommaList(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlSampleSpec/createNamed(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/ExtendList()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_131(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_120(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlNodeList/toArray()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_130(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/getPos()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlAsOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/ExtendedTableRef()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/parser/impl/SqlParserImpl/IntLiteral()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlLiteral/stringValue(org.apache.calcite.sql.SqlNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#org/apache/calcite/sql/SqlOperator/isDynamicFunction()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/clear()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/iterator()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/addResult(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#org/apache/calcite/sql/SqlOperator/isDeterministic()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#org/apache/calcite/rex/RexVisitorImpl/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/reduceCasts(org.apache.calcite.rex.RexCall)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#org/apache/calcite/util/Util/last(java.util.List,int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/Deque/pop()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getInput(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/target(com.google.common.base.Function,int,int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlAggFunction/unwrap(java.lang.Class)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil$InputFinder/bits(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/discard(boolean)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/intersect(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexBuilder/identityProjects(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getIndicatorCount()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlSplittableAggFunction/split(org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.util.mapping.Mappings$TargetMapping)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.util.List)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateJoinTransposeRule$1/AggregateJoinTransposeRule$1(org.apache.calcite.rel.rules.AggregateJoinTransposeRule,java.util.Map)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/apply2(org.apache.calcite.util.mapping.Mapping,java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlSplittableAggFunction/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateJoinTransposeRule/registry(java.util.List)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateJoinTransposeRule$Side/AggregateJoinTransposeRule$Side(org.apache.calcite.rel.rules.AggregateJoinTransposeRule$1)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/of(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/linq4j/Ord/zip(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlSplittableAggFunction/singleton(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlSplittableAggFunction/other(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/createShiftMapping(int,int%5B%5D)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlSplittableAggFunction$Registry/register(java.lang.Object)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Iterable/iterator()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/union(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/areColumnsUnique(org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/groupKey(org.apache.calcite.util.ImmutableBitSet,boolean,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/field(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/AggregateJoinTransposeRule/keyColumns(org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/splitJoinCondition(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/shift(int)
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#org/apache/calcite/schema/FilterableTable/scan(org.apache.calcite.DataContext,java.util.List)
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#org/apache/calcite/runtime/Resources$ExInst/ex()
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#org/apache/calcite/runtime/CalciteResource/filterableTableInventedFilter(java.lang.String)
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#java/util/Iterator/next()
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#org/apache/calcite/interpreter/Interpreter/getDataContext()
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#com/google/common/collect/ImmutableList/contains(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#org/apache/calcite/runtime/Enumerables/toRow(org.apache.calcite.linq4j.Enumerable)
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#java/util/List/iterator()
org/apache/calcite/interpreter/TableScanNode/createFilterable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.FilterableTable)#org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Interpreter,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow/getInput()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/forAggregation(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lessThanOrEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/block(org.apache.calcite.linq4j.tree.Statement%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/while_(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/ifThenElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getJavaFieldType(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expression/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow$1/EnumerableWindow$1(org.apache.calcite.adapter.enumerable.EnumerableWindow,org.apache.calcite.adapter.enumerable.EnumerableRel$Result)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow/getRowCollationKey(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/AggImplementor/implementReset(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResetContext)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/java/JavaTypeFactory/builder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Arrays/asList(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/for_(org.apache.calcite.linq4j.tree.DeclarationStatement,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/orElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/for_(java.lang.Iterable,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/fieldReference(org.apache.calcite.linq4j.tree.Expression,int,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/impl/WinAggResetContextImpl/WinAggResetContextImpl(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.List,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rex/RexLiteral/getType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/Window$Group/getAggregateCalls(org.apache.calcite.rel.core.Window)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lessThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/arrayIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/preIncrementAssign(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow/getBlockBuilderWinAggFrameResultContextFunction(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,java.util.List,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.DeclarationStatement,org.apache.calcite.adapter.enumerable.PhysType)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow/implementAdd(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,org.apache.calcite.linq4j.tree.DeclarationStatement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/addAll(java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression,boolean)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rex/RexWindowBound/isPreceding()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/Window$Group/collation()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/AggImpState/AggImpState(int,org.apache.calcite.rel.core.AggregateCall,boolean)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rex/RexWindowBound/isUnbounded()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow$WindowRelInputGetter/EnumerableWindow$WindowRelInputGetter(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,int,java.util.List,org.apache.calcite.adapter.enumerable.EnumerableWindow$1)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder(boolean,org.apache.calcite.linq4j.tree.BlockBuilder)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/Window$Group/isAlwaysNonEmpty()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/generateComparator(org.apache.calcite.rel.RelCollation)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/setNewForOldRel(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelCollation)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/util/Util/needToImplement(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rel/logical/LogicalSort/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/getNewForOldRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/sql2rel/RelStructuredTypeFlattener/getNewForOldInputMapping(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.core.Sort)#org/apache/calcite/rel/core/Sort/getInput()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/sql/SqlIntervalQualifier/getFractionalSecondPrecision(org.apache.calcite.rel.type.RelDataTypeSystem)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/sql/SqlIntervalQualifier/getStartPrecision(org.apache.calcite.rel.type.RelDataTypeSystem)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/runtime/CalciteResource/intervalStartPrecisionOutOfRange(int,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/sql/type/SqlTypeName/getMinPrecision()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxScale(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/runtime/CalciteResource/intervalFractionalSecondPrecisionOutOfRange(int,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/rel/type/RelDataTypeFactory/getTypeSystem()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/sql/SqlIntervalQualifier/typeName()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/sql/type/SqlTypeName/getMinScale()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/rel/type/RelDataTypeSystem/getMaxPrecision(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateIntervalQualifier(org.apache.calcite.sql.SqlIntervalQualifier)#org/apache/calcite/sql/SqlIntervalQualifier/isYearMonth()
org/apache/calcite/util/CompositeMap/combinedMap()#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Iterator/hasNext()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/util/CompositeMap/combinedMap()#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Set/iterator()
org/apache/calcite/util/CompositeMap/combinedMap()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Iterator/next()
org/apache/calcite/util/CompositeMap/combinedMap()#com/google/common/collect/ImmutableMap$Builder/put(java.util.Map$Entry)
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Map/entrySet()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#org/apache/calcite/plan/RelOptCost/isLt(org.apache.calcite.plan.RelOptCost)
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#org/apache/calcite/rel/RelNode/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#org/apache/calcite/plan/volcano/RelSubset/getRels()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#org/apache/calcite/plan/volcano/RelSubset/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/StringBuilder/toString()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Set/iterator()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Map$Entry/getValue()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/AbstractCollection/remove(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Map/entrySet()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#org/apache/calcite/util/CompatibleGuava11$Values/map()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/ConstantExpression/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/exitBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/rowTranslator()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/size()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/rexArguments()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/foldAnd(java.util.List)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/rexFilterArgument()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/HashMap/HashMap()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/currentBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/isNullable(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder(boolean,org.apache.calcite.linq4j.tree.BlockBuilder)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/accumulator()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/item(java.lang.String,java.lang.Object)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/core/Aggregate/getGroupType()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/itemIf(java.lang.String,java.lang.Object,boolean)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/nest()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/SingleRel/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/equalsDeep(org.apache.calcite.sql.SqlNode,org.apache.calcite.util.Litmus)
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/ListScope/getMonotonicity(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getMonotonicExprs()
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)#java/util/List/get(int)
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql/validate/OverScope/getMonotonicity(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNode/getMonotonicity(org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#java/util/Iterator/next()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#org/apache/calcite/util/ImmutableIntList/iterator()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#java/lang/Integer/intValue()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#org/apache/calcite/interpreter/Bindables$BindableTableScan/getCluster()
org/apache/calcite/interpreter/Bindables$BindableTableScan/deriveRowType()#java/util/List/get(int)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#org/apache/calcite/util/PartiallyOrderedSet/getChildren(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#org/apache/calcite/util/PartiallyOrderedSet/getNonChildren()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Deque/addAll(java.util.Collection)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#org/apache/calcite/util/PartiallyOrderedSet/getParents(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#org/apache/calcite/util/PartiallyOrderedSet/size()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/HashSet/HashSet()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Deque/pop()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Deque/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/interpreter/Source/receive()
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/interpreter/Sink/send(org.apache.calcite.interpreter.Row)
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/interpreter/JoinNode/run()#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/interpreter/Scalar/execute(org.apache.calcite.interpreter.Context)
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/interpreter/Row/getValues()
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/interpreter/JoinNode/run()#java/util/Iterator/next()
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/interpreter/JoinNode/run()#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/interpreter/Row/asCopy(java.lang.Object%5B%5D)
org/apache/calcite/interpreter/JoinNode/run()#java/lang/Boolean/booleanValue()
org/apache/calcite/interpreter/JoinNode/run()#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/interpreter/JoinNode/run()#java/util/List/iterator()
org/apache/calcite/interpreter/JoinNode/run()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#org/apache/calcite/util/ImmutableBitSet/union(java.lang.Iterable)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#org/apache/calcite/linq4j/Linq4j/product(java.lang.Iterable)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#org/apache/calcite/sql/validate/SqlValidatorUtil/analyzeGroupItem(org.apache.calcite.sql.validate.SqlValidatorScope,java.util.List,java.util.Map,com.google.common.collect.ImmutableList$Builder,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#org/apache/calcite/sql/SqlSelect/getGroup()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#org/apache/calcite/sql/validate/AggregatingSelectScope$Resolved/AggregatingSelectScope$Resolved(org.apache.calcite.sql.validate.AggregatingSelectScope,java.util.List,java.lang.Iterable,java.util.Map)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/util/Set/isEmpty()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/lang/Iterable/iterator()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#com/google/common/collect/Sets/newTreeSet(java.util.Comparator)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/util/Iterator/next()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/util/HashMap/HashMap()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#com/google/common/collect/Ordering/sortedCopy(java.lang.Iterable)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RelSubset/toString()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/Map/keySet()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Constructor,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/RexToLixTranslator$InputGetterImpl(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement,boolean)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Types/of(java.lang.reflect.Type,java.lang.reflect.Type%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCalc/getInput()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/block(org.apache.calcite.linq4j.tree.Statement%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/while_(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCalc/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Blocks/toFunctionBlock(org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/fieldDecl(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCondition(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rex/RexProgram/normalize(org.apache.calcite.rex.RexBuilder,boolean)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCalc/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateProjects(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumUtils/overridingMethodDecl(java.lang.reflect.Method,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/tools/RelBuilder/filter(org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/plan/RelOptUtil/correlationColumns(org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/util/Deque/pop()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/util/Set/size()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/tools/RelBuilder$Frame/RelBuilder$Frame(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.tools.RelBuilder$1)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/sql/SemiJoinType/of(org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/rel/core/RelFactories$CorrelateFactory/createCorrelate(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.sql.SemiJoinType)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/rel/core/JoinRelType/ordinal()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/rel/core/RelFactories$JoinFactory/createJoin(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/tools/RelBuilder$Shifter/RelBuilder$Shifter(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/plan/RelOptUtil/notContainsCorrelation(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.Litmus)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/util/List/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/PhysType/getJavaFieldType(int)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/EnumerableTableScan/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/PhysType/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/JavaRowFormat/field(org.apache.calcite.linq4j.tree.Expression,int,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/fieldExpression(org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/PhysType/convertTo(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType)
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/projects(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getProjectList()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/getProgram()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/getCluster()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgramBuilder/create(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/getProgram()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/requiresDecimalExpansion(org.apache.calcite.rex.RexProgram,boolean)
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/getInput()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getOutputRowType()
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$DecimalShuttle/ReduceDecimalsRule$DecimalShuttle(org.apache.calcite.rel.rules.ReduceDecimalsRule,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/rel/rules/ReduceDecimalsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexProgram/getExprList()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#org/apache/calcite/jdbc/JavaTypeFactoryImpl$SyntheticRecordType/JavaTypeFactoryImpl$SyntheticRecordType(org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.jdbc.JavaTypeFactoryImpl$1)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/List/isEmpty()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#org/apache/calcite/jdbc/JavaTypeFactoryImpl$RecordFieldImpl/JavaTypeFactoryImpl$RecordFieldImpl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType,java.lang.String,java.lang.reflect.Type,boolean,int)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/Iterator/next()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/List/iterator()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/List/size()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/register(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/Map/size()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexFieldAccess/getField()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/only()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Set/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/Util/skip(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptUtil/getVariablesUsed(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/ListScope/getChildren()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidatorScope$Resolve/rowType()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/SqlToRelConverter$CorrelationUse/SqlToRelConverter$CorrelationUse(org.apache.calcite.rel.core.CorrelationId,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidatorScope$Path/steps()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/DeduplicateCorrelateVariables/go(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.core.CorrelationId,java.lang.Iterable,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/access$700(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexFieldAccess/getReferenceExpr()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Set/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/SqlToRelConverter$DeferredLookup/getFieldAccess(org.apache.calcite.rel.core.CorrelationId)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/SqlValidatorScope$ResolvedImpl()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidatorScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/count()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#org/apache/calcite/sql2rel/SqlToRelConverter$DeferredLookup/getOriginalRelName()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/util/NlsString/asSql(boolean,boolean)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlLiteral/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlLiteral/getValue()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/util/NlsString/getCollation()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlLiteral/toValue()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlLiteral/getTypeName()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/literal(java.lang.String)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/newlineAndIndent()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCharStringLiteral/getNlsString()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/util/BitString/toHexString()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(java.lang.String,java.lang.String)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/iterator()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCollation/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getCollation()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMdUtil/checkInputForCollationAndLimit(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollation,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelCollations/shift(org.apache.calcite.rel.RelCollation,int)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getTraitSet()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelCollationTraitDef/canonize(org.apache.calcite.plan.RelTrait)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SortJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/of(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/visitChild(org.apache.calcite.adapter.enumerable.EnumerableRel,int,org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/comparer()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableMinus/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFamily()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeUtil/canConvertStringInCompare(org.apache.calcite.rel.type.RelDataTypeFamily)
org/apache/calcite/sql/type/SqlTypeUtil/isComparable(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/convertExpression(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getTypeFactory()
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/StandardConvertletTable/divide(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.math.BigDecimal)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeFlag(java.lang.Enum)
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertQuarter(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlQuarterFunction,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelTraitSet/getTrait(org.apache.calcite.plan.RelTraitDef)
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCost/isLt(org.apache.calcite.plan.RelOptCost)
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCostFactory/makeTinyCost()
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMetadataQuery/getNonCumulativeCost(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCost/plus(org.apache.calcite.plan.RelOptCost)
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCostFactory/makeInfiniteCost()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/plan/RelOptUtil/createSwappedJoinExprs(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Join,boolean)
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean)
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/JoinRelType/swap()
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/JoinCommuteRule$VariableReplacer(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/JoinCommuteRule/swap(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeUtil/convertTypeToSpec(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlDialect$DatabaseProduct/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlDataTypeSpec/SqlDataTypeSpec(org.apache.calcite.sql.SqlIdentifier,int,int,java.lang.String,java.util.TimeZone,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getScale()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlDialect/supportsCharSet()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlDialect/getDatabaseProduct()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/name()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.type.RelDataType)#java/nio/charset/Charset/name()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/instance()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/filter(java.lang.Iterable)
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/getPlanner()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptPlanner/onCopy(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/JoinPushTransitivePredicatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/newError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getScope()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/fun/SqlCase/getWhenOperands()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/fun/SqlCase/getThenOperands()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/runtime/CalciteResource/mustNotNullInElse()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/runtime/CalciteResource/expectedBoolean()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/fun/SqlCase/getElseOperand()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getCall()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlUtil/isNullLiteral(org.apache.calcite.sql.SqlNode,boolean)
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/fun/SqlCaseOperator/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)#org/apache/calcite/sql/type/SqlTypeUtil/inBooleanFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#org/apache/calcite/plan/RexImplicationChecker/isSupportedUnaryOperators(org.apache.calcite.sql.SqlKind)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Map$Entry/getKey()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/List/size()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Iterator/next()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Map$Entry/getValue()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Map/entrySet()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#org/apache/calcite/sql/SqlOperator/getKind()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#org/apache/calcite/plan/RexImplicationChecker$InputRefUsage/access$100(org.apache.calcite.plan.RexImplicationChecker$InputRefUsage)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#org/apache/calcite/util/Pair/getKey()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#org/apache/calcite/plan/RexImplicationChecker$InputRefUsage/access$000(org.apache.calcite.plan.RexImplicationChecker$InputRefUsage)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#org/apache/calcite/plan/RexImplicationChecker/isEquivalentOp(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlKind)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Set/iterator()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#org/apache/calcite/plan/RexImplicationChecker/isOppositeOp(org.apache.calcite.sql.SqlKind,org.apache.calcite.sql.SqlKind)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/List/get(int)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#java/util/ArrayList/iterator()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/getTypeFactory()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/getScope()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#java/util/ArrayList/add(java.lang.Object)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/fun/SqlCase/getElseOperand()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlUtil/isNullLiteral(org.apache.calcite.sql.SqlNode,boolean)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/fun/SqlCase/getThenOperands()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/validate/SqlValidator/setValidatedNodeType(org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/runtime/CalciteResource/illegalMixingOfTypes()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/newValidationError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromValidator(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/getCall()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/mightMatch(org.apache.calcite.plan.SubstitutionVisitor$UnifyRule,java.lang.Class,java.lang.Class)
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/Object/getClass()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameTypeEnum)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String,boolean)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlAsOperator/getLeftPrec()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlAsOperator/getRightPrec()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/util/Util/skip(java.util.List,int)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameType,java.lang.String,java.lang.String)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlDialect/allowsAs()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/iterator()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/getDialect()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlAsOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/setNeedWhitespace(boolean)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/Integer/toString(int,int)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/String/length()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/String/charAt(int)
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/plan/RelOptUtil/eq(java.lang.String,org.apache.calcite.rel.type.RelDataType,java.lang.String,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.util.Litmus)
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/size()
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/util/Litmus/succeed()
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/Integer/valueOf(int)
org/apache/calcite/rex/RexChecker/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#org/apache/calcite/util/ImmutableBitSet/union(java.lang.Iterable)
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#org/apache/calcite/linq4j/Linq4j/product(java.lang.Iterable)
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/Arrays/asList(java.lang.Object%5B%5D)
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/lang/Iterable/iterator()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#com/google/common/collect/Sets/newLinkedHashSet()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getCluster()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMetadataQuery/getRowCount(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/metadata/RelMetadataQuery/getSelectivity(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getRowType()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/validate/SqlValidatorNamespace/supportsModality(org.apache.calcite.sql.validate.SqlModality)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/getRawSelectScope(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getNode()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#com/google/common/base/Joiner/on(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/SqlSelect/getGroup()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/validate/SelectScope/getChildNames()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/validate/SqlModality/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/runtime/CalciteResource/streamMustOrderByMonotonic()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/runtime/CalciteResource/cannotStreamResultsForNonStreamingInputs(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/runtime/CalciteResource/cannotConvertToRelation(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/runtime/CalciteResource/streamMustGroupByMonotonic()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/getAggregate(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/runtime/CalciteResource/cannotConvertToStream(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/validate/SqlValidatorImpl/hasSortedPrefix(org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#com/google/common/base/Joiner/join(java.lang.Iterable)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/SqlSelect/getOrderList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateModality(org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.validate.SqlModality,boolean)#org/apache/calcite/sql/validate/SqlValidatorUtil/containsMonotonic(org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexRangeRef/getOffset()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getSubQueryExpr(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getValidator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexRangeRef/getType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultiset(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetValueConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/linq4j/function/Function1/apply(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/jdbc/CalcitePrepare$Context/getTypeFactory()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/jdbc/CalcitePrepare$Context/getRootSchema()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/prepare/CalcitePrepareImpl/simplePrepare(org.apache.calcite.jdbc.CalcitePrepare$Context,java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/prepare/CalcitePrepareImpl/createPlannerFactories()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/prepare/CalciteCatalogReader/CalciteCatalogReader(org.apache.calcite.jdbc.CalciteSchema,boolean,java.util.List,org.apache.calcite.adapter.java.JavaTypeFactory)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/config/CalciteConnectionConfig/caseSensitive()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#java/util/List/isEmpty()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/jdbc/CalcitePrepare$Context/config()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long)#org/apache/calcite/jdbc/CalcitePrepare$Context/getDefaultSchemaPath()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/util/ImmutableBitSet/permute(java.util.Map)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rex/RexInputRef/of(int,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/getIndicatorCount()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#com/google/common/collect/Ordering/immutableSortedCopy(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Map/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/AggregateCall/getName()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/util/ImmutableBitSet/permute(java.lang.Iterable,java.util.Map)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/emptySet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getTraitSet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getElementType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getColumnMappings()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/equals(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Object/getClass()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getInputs()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/isIdentity()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getCall()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/copy(org.apache.calcite.plan.RelTraitSet,java.util.List,org.apache.calcite.rex.RexNode,java.lang.reflect.Type,org.apache.calcite.rel.type.RelDataType,java.util.Set)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$UnifyRule/match(org.apache.calcite.plan.SubstitutionVisitor,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/replaceInParent(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/copyMutable(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$UnifyRule/apply(org.apache.calcite.plan.SubstitutionVisitor$UnifyRuleCall)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRels/preOrderTraverseNext(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/undoReplacement(java.util.List)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$UnifyResult/access$300(org.apache.calcite.plan.SubstitutionVisitor$UnifyResult)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRels/access$400(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$UnifyResult/access$200(org.apache.calcite.plan.SubstitutionVisitor$UnifyResult)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/List/isEmpty()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Collection/isEmpty()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRels/equalType(java.lang.String,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,java.lang.String,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.util.Litmus)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/Multimap/remove(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/List/clear()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Map/clear()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/getInputs()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/List/get(int)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Collection/iterator()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$Replacement/SubstitutionVisitor$Replacement(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRels/replace(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/jdbc/CalciteSchema/tableEntry(java.lang.String,org.apache.calcite.schema.Table)
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/jdbc/CalciteSchema$FunctionEntry/getFunction()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/TableMacro/apply(java.util.List)
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/List/isEmpty()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/NavigableMap/get(java.lang.Object)
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/Function/getParameters()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Set/iterator()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Collection/iterator()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/Schema/getFunctions(java.lang.String)
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/jdbc/CalciteSchema/find(java.util.NavigableMap,java.lang.String)
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/jdbc/CalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Map$Entry/getValue()
org/apache/calcite/jdbc/CalciteSchema/getTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/NavigableMap/entrySet()
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/nullifyType(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/isNullable(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$CastImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexShuttle/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Boolean/booleanValue()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexUtil/simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Map/values()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor$TypeRegistrar/go(org.apache.calcite.adapter.enumerable.EnumerableRel$Result)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object%5B%5D)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/block(java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor$TypeRegistrar/EnumerableRelImplementor$TypeRegistrar(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Blocks/toFunctionBlock(org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/fieldDecl(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/Collections2/transform(java.util.Collection,com.google.common.base.Function)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Collections/emptyList()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/classDecl(int,java.lang.String,java.lang.reflect.Type,java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor$2/EnumerableRelImplementor$2(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/rel/core/Values/assertRowType()#org/apache/calcite/rex/RexLiteral/isNullLiteral(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/core/Values/assertRowType()#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Values/assertRowType()#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/core/Values/assertRowType()#org/apache/calcite/sql/type/SqlTypeUtil/canAssignFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/core/Values/assertRowType()#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/core/Values/assertRowType()#java/util/List/size()
org/apache/calcite/rel/core/Values/assertRowType()#java/util/Iterator/next()
org/apache/calcite/rel/core/Values/assertRowType()#org/apache/calcite/rex/RexLiteral/getType()
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Values/assertRowType()#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/core/Values/assertRowType()#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/core/Values/assertRowType()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Values/assertRowType()#java/util/List/iterator()
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int%5B%5D)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenNullLiteral(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/fun/SqlLiteralChainOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/runtime/CalciteResource/illegalBinaryString(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/SqlParserPos/sum(java.util.List)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#java/util/List/toArray(java.lang.Object%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_265(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_264(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_consume_token(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/SqlUtil/newContextException(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/startList(java.lang.Object)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/runtime/CalciteResource/unknownCharacterSet(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/SqlParserUtil/parseString(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/fun/SqlLiteralChainOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/SqlParserUtil/trim(java.lang.String,java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_259(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/SqlParserUtil/checkUnicodeEscapeChar(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/ParseException/ParseException()
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/SqlLiteral/createCharString(java.lang.String,java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_266(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/SqlLiteral/createBinaryString(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_263(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/runtime/CalciteResource/unicodeEscapeUnexpected()
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/SqlParserUtil/getCharacterSet(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_262(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_261(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#java/util/List/get(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/SqlParserPos/sum(org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_260(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/parser/impl/SqlParserImpl/getPos()
org/apache/calcite/sql/parser/impl/SqlParserImpl/StringLiteral()#org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/of(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/getProjects()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/rex/RexInputRef/of(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/List/size()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/getRowType()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/plan/SubstitutionVisitor/access$1700()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/rex/RexBuilder/makeZeroLiteral(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/rex/RexBuilder/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableProject)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexFieldAccess/getType()
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelDecorrelator/access$700(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$600(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelDecorrelator/access$200(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#com/google/common/collect/ImmutableSortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/sql2rel/RelDecorrelator/access$800(org.apache.calcite.sql2rel.RelDecorrelator)
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator$DecorrelateRexShuttle/visitFieldAccess(org.apache.calcite.rex.RexFieldAccess)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#org/apache/calcite/rel/logical/LogicalAggregate/create(org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#org/apache/calcite/util/ImmutableBitSet/of()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#org/apache/calcite/rel/core/RelFactories$FilterFactory/createFilter(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#org/apache/calcite/rex/RexBuilder/getTypeFactory()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexLiteral,java.lang.String)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/negateNullSafe()
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexUtil/simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexUtil/op(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/negate()
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rex/RexUtil/simplifyNot(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rex/RexInputRef/of2(int,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/util/ImmutableBitSet/range(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rex/RexInputRef/of(int,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rex/RexBuilder/constantNull()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rex/RexBuilder/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/AbstractCollection/retainAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Set/iterator()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Map$Entry/getValue()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Set/retainAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#org/apache/calcite/util/CompatibleGuava11$Values/map()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Map/keySet()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Map/entrySet()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/util/regex/Matcher/matches()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/Class/getName()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/RelOptRule/toString()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/Object/getClass()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/String/contains(java.lang.CharSequence)
org/apache/calcite/util/Util/listToString(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/listToString(java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/length()
org/apache/calcite/util/Util/listToString(java.util.List)#java/util/List/iterator()
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMetadataQuery/getAverageColumnSizes(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getRowType()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableNullableList/builder()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableNullableList$Builder/build()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableNullableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/doubleValue()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#org/apache/calcite/rel/RelFieldCollation$Direction/name()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#org/apache/calcite/util/JsonBuilder/map()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#org/apache/calcite/rel/RelCollationImpl/getFieldCollations()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#org/apache/calcite/rel/RelFieldCollation/getDirection()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#org/apache/calcite/rel/RelFieldCollation$NullDirection/name()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/StringBuilder/toString()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/Class/getName()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexLiteral/isNullLiteral(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMdPredicates/projectPredicate(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/mapping/Mappings/create(org.apache.calcite.util.mapping.MappingType,int,int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexNode/isAlwaysTrue()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,java.util.List)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexUtil/isConstant(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/plan/RelOptPredicateList/of(org.apache.calcite.rex.RexBuilder,java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMetadataQuery/getPulledUpPredicates(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#java/util/regex/Matcher/group(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#java/util/regex/Pattern/compile(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#java/util/regex/Matcher/matches()
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#org/apache/calcite/sql/parser/SqlParseException/SqlParseException(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos,int%5B%5D%5B%5D,java.lang.String%5B%5D,java.lang.Throwable)
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#java/lang/Throwable/getMessage()
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#org/apache/calcite/runtime/CalciteContextException/getPosLine()
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#org/apache/calcite/runtime/CalciteContextException/getCause()
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#org/apache/calcite/runtime/CalciteContextException/getPosColumn()
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#java/lang/Integer/parseInt(java.lang.String)
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#org/apache/calcite/sql/parser/SqlParserPos/SqlParserPos(int,int,int,int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#org/apache/calcite/runtime/CalciteContextException/getEndPosColumn()
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#org/apache/calcite/runtime/CalciteContextException/getEndPosLine()
org/apache/calcite/sql/parser/impl/SqlParserImpl/convertException(java.lang.Throwable)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setKeepAlive(boolean)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setSendBufferSize(int)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setOOBInline(boolean)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setSoLinger(boolean,int)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setTcpNoDelay(boolean)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setReceiveBufferSize(int)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setReuseAddress(boolean)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setSoTimeout(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlLiteral/createBoolean(boolean,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlSelect/getSelectList()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/setSourceSelect(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlNodeList/add(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/validate/SqlValidatorUtil/addAlias(org.apache.calcite.sql.SqlNode,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlSelect/SqlSelect(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlIdentifier/star(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlNode/clone()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlJoin/SqlJoin(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/JoinConditionType/symbol(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlNodeList/SqlNodeList(java.util.Collection,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlInsert/getSource()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlInsert/setSource(org.apache.calcite.sql.SqlSelect)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/getCondition()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/getInsertCall()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/JoinType/symbol(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/getTargetTable()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlUpdate/getSourceSelect()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/getSourceTableRef()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/getUpdateCall()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlNodeList/clone()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlMerge/getAlias()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/Sets/cartesianProduct(java.util.List)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Map$Entry/getKey()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RexImplicationChecker/isSatisfiable(org.apache.calcite.rex.RexNode,org.apache.calcite.DataContext)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RexImplicationChecker$InputRefUsage/access$000(org.apache.calcite.plan.RexImplicationChecker$InputRefUsage)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RexImplicationChecker$1/RexImplicationChecker$1(org.apache.calcite.plan.RexImplicationChecker,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Set/iterator()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Map$Entry/getValue()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/apply(org.apache.calcite.rex.RexVisitor,java.util.List,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/eq(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/Strong/isNull(org.apache.calcite.rex.RexNode)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableSet/builder()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RexImplicationChecker$InputUsageFinder/RexImplicationChecker$InputUsageFinder()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/trace/CalciteLogger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableSet$Builder/build()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableSet$Builder/add(java.lang.Object)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/isAlwaysFalse()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/VisitorDataContext/of(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Map/entrySet()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/util/Pair/getValue()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getCopyJoinFieldRefCountsMap()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getProjFields()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/util/ImmutableBitSet/clear(int)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#java/lang/Object/Object()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getInputs()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getJoinTypes()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getRowType()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinFilterFactorBitmap(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getJoinFilter()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/LoptMultiJoin/setJoinFilterRefs()
org/apache/calcite/rel/rules/LoptMultiJoin/LoptMultiJoin(org.apache.calcite.rel.rules.MultiJoin)#org/apache/calcite/rel/rules/MultiJoin/getOuterJoinConditions()
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#org/apache/calcite/rel/type/RelDataTypeImpl/getFieldRecurse(java.util.List,org.apache.calcite.rel.type.RelDataType,int,java.lang.String,boolean)
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#org/apache/calcite/util/Util/matches(boolean,java.lang.String,java.lang.String)
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#com/google/common/collect/Iterables/getLast(java.lang.Iterable)
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#org/apache/calcite/rel/type/RelDataTypeFieldImpl/RelDataTypeFieldImpl(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#java/util/List/iterator()
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#org/apache/calcite/rel/type/RelDataTypeField/isDynamicStar()
org/apache/calcite/rel/type/RelDataTypeImpl/getField(java.lang.String,boolean,boolean)#java/util/List/size()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#org/apache/calcite/materialize/TileKey/TileKey(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.ImmutableList)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#org/apache/calcite/util/ImmutableBitSet/equals(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,java.util.List)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Multimap/remove(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Sets/newLinkedHashSet()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Set/iterator()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map$Entry/getValue()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#org/apache/calcite/materialize/MaterializationService/checkValid(org.apache.calcite.materialize.MaterializationKey)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map$Entry/getKey()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/PriorityQueue/add(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map/get(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#org/apache/calcite/materialize/MaterializationService/allSatisfiable(java.util.List,org.apache.calcite.materialize.TileKey)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/LinkedHashSet/addAll(java.util.Collection)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Iterator/next()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/PriorityQueue/peek()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/List/add(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#org/apache/calcite/jdbc/CalciteSchema/path(java.lang.String)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/List/iterator()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Collection/iterator()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/PriorityQueue/PriorityQueue(int,java.util.Comparator)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map/entrySet()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/PriorityQueue/isEmpty()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/lang/AssertionError/AssertionError()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#org/apache/calcite/util/ImmutableBitSet/contains(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getIndex()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/size()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFieldImpl/RelDataTypeFieldImpl(java.lang.String,int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/addFields(org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/tree/Primitive/of(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/PhysType/fieldClass(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/fieldReference(org.apache.calcite.linq4j.tree.Expression,int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/contains(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getOuterJoinConditions()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getJoinTypes()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/copyOuterJoinInfo(org.apache.calcite.rel.rules.MultiJoin,java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#org/apache/calcite/plan/AbstractRelOptPlanner/AbstractRelOptPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#com/google/common/collect/Maps/newLinkedHashMap()
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#org/apache/calcite/plan/RelOptCostFactory/makeZeroCost()
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#java/util/HashMap/HashMap()
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#java/util/IdentityHashMap/IdentityHashMap()
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#org/apache/calcite/plan/volcano/RuleQueue/RuleQueue(org.apache.calcite.plan.volcano.VolcanoPlanner)
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#com/google/common/collect/LinkedListMultimap/create()
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#com/google/common/collect/LinkedHashMultimap/create()
org/apache/calcite/plan/volcano/VolcanoPlanner/VolcanoPlanner(org.apache.calcite.plan.RelOptCostFactory,org.apache.calcite.plan.Context)#java/util/HashSet/HashSet()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexBuilder/makeZeroLiteral(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/apache/calcite/plan/SubstitutionVisitor$MutableProject/of(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,java.util.List,java.util.List)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/apache/calcite/util/Pair/left(java.util.List)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/apache/calcite/plan/SubstitutionVisitor/access$1700()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(java.util.List,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.rex.RexShuttle)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#org/apache/calcite/sql/validate/SqlValidatorNamespace/getTable()
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/getTable(java.util.List)
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#org/apache/calcite/sql/validate/SqlValidatorTable/getQualifiedName()
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#java/util/List/size()
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#java/util/List/equals(java.lang.Object)
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/matches(java.lang.String,java.lang.String)
org/apache/calcite/sql/validate/ListScope/findChild(java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableIntList/size()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil$RexInputConverter/RelOptUtil$RexInputConverter(org.apache.calcite.rex.RexBuilder,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getCluster()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableIntList/iterator()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/setJoinAdjustments(int%5B%5D,int,int,int,int,int)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptUtil/adjustKeys(java.util.List,int)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getLeftKeys()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRightKeys()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRowType()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableIntList/copyOf(java.lang.Iterable)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getCondition()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRight()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Litmus/succeed()
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/Iterator/next()
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Window/getInput()
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexChecker/RexChecker(java.util.List,org.apache.calcite.rel.RelNode$Context,org.apache.calcite.util.Litmus)
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexChecker/isValid(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Window$1/Window$1(org.apache.calcite.rel.core.Window,int,org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/rel/core/Window/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/util/Util/stringToList(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/ThreadLocal/get()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/adapter/enumerable/RexImpTable$MethodImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/prepare/Prepare$CatalogReader/getTable(java.util.List)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#org/apache/calcite/sql/SqlIdentifier/getSimple()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/List/contains(java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#org/apache/calcite/sql/SqlSyntax/ordinal()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/Collection/isEmpty()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#org/apache/calcite/sql/util/ReflectiveSqlOperatorTable$Key/ReflectiveSqlOperatorTable$Key(java.lang.String,org.apache.calcite.sql.SqlSyntax)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#org/apache/calcite/sql/SqlOperator/getSyntax()
org/apache/calcite/rex/RexFieldCollation/toString()#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexFieldCollation/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexFieldCollation/toString()#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexFieldCollation/toString()#java/util/Iterator/next()
org/apache/calcite/rex/RexFieldCollation/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexFieldCollation/toString()#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/rex/RexFieldCollation/toString()#org/apache/calcite/rex/RexNode/toString()
org/apache/calcite/rex/RexFieldCollation/toString()#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexFieldCollation/toString()#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/createArrayType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/AbstractNamespace/getNode()
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/getTypeFactory()
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeFactory/createMultisetType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/isNullable()
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/AbstractNamespace/toStruct(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/validate/AbstractNamespace/convertToStruct(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/schema/Schemas/parse(org.apache.calcite.jdbc.CalciteConnection,org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.lang.String)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/jdbc/CalciteSchema/add(java.lang.String,org.apache.calcite.schema.Table,com.google.common.collect.ImmutableList)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/jdbc/CalciteMetaImpl/connect(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.adapter.java.JavaTypeFactory)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/jdbc/CalciteConnection/getTypeFactory()
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/materialize/MaterializationService$TableFactory/createTable(org.apache.calcite.jdbc.CalciteSchema,java.lang.String,java.util.List)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/materialize/MaterializationActor$Materialization/MaterializationActor$Materialization(org.apache.calcite.materialize.MaterializationKey,org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.jdbc.CalciteSchema$TableEntry,java.lang.String,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/materialize/MaterializationKey/MaterializationKey()
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/jdbc/CalciteSchema/getTable(java.lang.String,boolean)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/jdbc/CalciteSchema/getTableBySql(java.lang.String)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/jdbc/CalciteSchema/root()
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/schema/Schemas/uniqueTableName(org.apache.calcite.jdbc.CalciteSchema,java.lang.String)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/schema/Table/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineMaterialization(org.apache.calcite.jdbc.CalciteSchema,org.apache.calcite.materialize.TileKey,java.lang.String,java.util.List,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory,boolean,boolean)#org/apache/calcite/materialize/MaterializationActor$QueryKey/MaterializationActor$QueryKey(java.lang.String,org.apache.calcite.jdbc.CalciteSchema,java.util.List)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlNodeList/add(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlNodeList/iterator()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_216(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_215(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_213(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_212(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_210(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/ParenthesizedQueryOrCommaList(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/fun/SqlDatetimeSubtractionOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/IntervalQualifier()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/checkNonQueryExpression(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_consume_token(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlUtil/newContextException(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/startList(java.lang.Object)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/CursorExpression(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#java/util/Iterator/hasNext()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/fun/SqlOverlapsOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlCall/operandCount()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlNodeList/get(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/runtime/CalciteResource/illegalOverlaps()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/SqlParserUtil/toNodeArray(java.util.List)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/runtime/CalciteResource/illegalRowExpression()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/ParenthesizedSimpleIdentifierList()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_217(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_214(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#java/util/Iterator/next()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/ParseException/ParseException()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/fun/SqlRowOperator/createCall(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/jj_2_211(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlNodeList/getParserPosition()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlNodeList/toArray()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/runtime/CalciteResource/illegalMinusDate()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/SqlParserPos/plus(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/getPos()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/fun/SqlRowOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/parser/impl/SqlParserImpl/Expression3(org.apache.calcite.sql.parser.SqlAbstractParserImpl$ExprContext)#org/apache/calcite/sql/parser/impl/SqlParserImpl/AtomicRowExpression()
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#java/util/ArrayList/ArrayList()
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#java/util/Collections/emptyMap()
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#java/lang/Class/getField(java.lang.String)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#org/apache/calcite/avatica/Meta$CursorFactory/record(java.lang.Class,java.util.List,java.util.List)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#java/util/List/size()
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#java/lang/reflect/Field/getType()
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#org/apache/calcite/avatica/AvaticaUtils/toCamelCase(java.lang.String)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#org/apache/calcite/avatica/Meta$Frame/Meta$Frame(long,boolean,java.lang.Iterable)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#org/apache/calcite/jdbc/CalciteMetaImpl/columnMetaData(java.lang.String,int,java.lang.Class,boolean)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String%5B%5D)#org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(java.util.Map,java.util.List,org.apache.calcite.avatica.Meta$CursorFactory,org.apache.calcite.avatica.Meta$Frame)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/jdbc/CalciteConnectionImpl/createDataContext(java.util.Map)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/Map/putAll(java.util.Map)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/sql/SQLException/SQLException(java.lang.String)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/avatica/AvaticaConnection$Trojan/getParameterValues(org.apache.calcite.avatica.AvaticaStatement)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/avatica/MetaImpl/checkParameterValueHasNull(java.util.List)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#com/google/common/collect/Maps/newLinkedHashMap()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/jdbc/CalciteConnectionImpl/getCancelFlag(org.apache.calcite.avatica.Meta$StatementHandle)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/lang/StringBuilder/append(int)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/jdbc/CalcitePrepare$CalciteSignature/enumerable(org.apache.calcite.DataContext)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/jdbc/CalciteConnectionImpl/lookupStatement(org.apache.calcite.avatica.Meta$StatementHandle)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/List/iterator()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/avatica/remote/TypedValue/toLocal()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/asSelect()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.util.List,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/sql/SqlUpdate/SqlUpdate(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/identifierList(java.util.List)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/visitChild(int,org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/core/TableModify/getSourceExpressionList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/result(org.apache.calcite.sql.SqlNode,java.util.Collection,org.apache.calcite.rel.RelNode,java.util.Map)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/sql/SqlInsert/SqlInsert(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/core/TableModify/getOperation()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/core/TableModify/getUpdateColumnList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/exprList(org.apache.calcite.rel.rel2sql.SqlImplementor$Context,java.util.List)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/core/TableModify$Operation/ordinal()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/core/TableModify/getInput()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/core/TableModify/getTable()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/sql/SqlSelect/getWhere()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/aliasContext(java.util.Map,boolean)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/rel2sql/SqlImplementor$Result/asQueryOrValues()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/sql/SqlDelete/SqlDelete(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlSelect,org.apache.calcite.sql.SqlIdentifier)
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#org/apache/calcite/plan/RelOptPlanner/addRule(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#java/util/Iterator/hasNext()
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#org/apache/calcite/tools/RuleSet/iterator()
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#org/apache/calcite/plan/RelOptPlanner/changeTraits(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#org/apache/calcite/plan/RelOptPlanner/clear()
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#org/apache/calcite/plan/RelTraitSet/equals(java.lang.Object)
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#java/util/Iterator/next()
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#org/apache/calcite/plan/RelOptPlanner/setRoot(org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/Programs$RuleSetProgram/run(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)#org/apache/calcite/plan/RelOptPlanner/findBestExp()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/createShiftMapping(int,int%5B%5D)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mappings/isIdentity(org.apache.calcite.util.mapping.Mappings$TargetMapping)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/range(int,int)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/builder()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/fields(org.apache.calcite.util.mapping.Mappings$TargetMapping)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/JoinPushThroughJoinRule/split(org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexPermuteInputsShuttle/RexPermuteInputsShuttle(org.apache.calcite.util.mapping.Mappings$TargetMapping,org.apache.calcite.rel.RelNode%5B%5D)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexPermuteInputsShuttle/visitList(java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/JoinPushThroughJoinRule/onMatchRight(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType,boolean,com.google.common.collect.ImmutableList)
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getVariablesSet()
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getSystemFieldList()
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/discard(java.lang.Object)
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalUnion/create(java.util.List,boolean)
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/stream/LogicalDelta/create(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/stream/StreamRules$DeltaJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter/createJoin(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/setRoot(org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/rex/RexBuilder/makeRangeReference(org.apache.calcite.rel.type.RelDataType,int,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,boolean)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/util/Util/range(int,int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard$1/SqlToRelConverter$Blackboard$1(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode,int,int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/plan/RelOptUtil/createEquiJoinCondition(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rex.RexBuilder)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/Iterator/hasNext()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/TreeSet/addAll(java.util.Collection)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/TreeSet/iterator()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#org/apache/calcite/sql/parser/SqlAbstractParserImpl/access$000()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/TreeSet/TreeSet()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/lang/StringBuilder/toString()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/Iterator/next()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/TreeSet/removeAll(java.util.Collection)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/util/JsonBuilder/list()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/util/JsonBuilder/map()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getTypeName()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlFunctionCategory/isUserDefined()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexFieldAccess/getField()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexFieldAccess/getReferenceExpr()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/Class/getName()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeName/name()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.sql.SqlOperator)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCorrelVariable/getName()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLiteral/getValue2()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlFunction/getFunctionType()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/Object/getClass()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/rel/rules/AggregateStarTableRule/find(com.google.common.collect.ImmutableList,org.apache.calcite.util.Pair)
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/rel/core/AggregateCall/create(org.apache.calcite.sql.SqlAggFunction,boolean,java.util.List,int,int,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.type.RelDataType,java.lang.String)
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/plan/SubstitutionVisitor/getRollup(org.apache.calcite.sql.SqlAggFunction)
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/tools/RelBuilder/peek()
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/rollUp(int,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.materialize.TileKey)#org/apache/calcite/util/ImmutableBitSet/indexOf(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/runtime/CalciteResource/typeNotAssignable(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/type/SqlTypeUtil/areCharacterSetsMismatched(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/getNthExpr(org.apache.calcite.sql.SqlNode,int,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/getFullTypeString()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUpdate/getTargetColumnList()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlNodeList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/type/SqlTypeUtil/canAssignFrom(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkTypeAssignment(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.SqlNode)#org/apache/calcite/rel/type/RelDataType/toString()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexRangeRef/getOffset()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getValidator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getSubQueryExpr(org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/validate/SqlValidator/getValidatedNodeType(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql2rel/SqlRexContext/getRexBuilder()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexRangeRef/getType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataType/getComponentType()
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/sql2rel/StandardConvertletTable/convertMultisetQuery(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlMultisetQueryConstructor,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/adapter/enumerable/EnumerableTableScan/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/rel/logical/LogicalTableScan/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/plan/RelOptTable$ToRelContext/getCluster()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/runtime/Hook/get(java.lang.Object)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/schema/TranslatableTable/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext,org.apache.calcite.plan.RelOptTable)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/plan/RelOptTable/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/prepare/RelOptTableImpl/getRowType()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#java/lang/Boolean/booleanValue()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/rel/type/RelRecordType/RelRecordType(java.util.List)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/prepare/RelOptTableImpl/copy(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/rel/type/RelDataType/isDynamicStruct()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Comparable/compareTo(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Number/intValue()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/String/substring(int,int)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/math/BigDecimal/BigDecimal(long)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/StringBuilder/toString()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/math/BigDecimal/BigDecimal(double)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/String/toUpperCase()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Number/doubleValue()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Number/longValue()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#org/apache/calcite/interpreter/Scalar/execute(org.apache.calcite.interpreter.Context,java.lang.Object%5B%5D)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/RelCollations/contains(java.util.List,org.apache.calcite.util.ImmutableIntList)
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/RelCollations/shift(org.apache.calcite.rel.RelCollation,int)
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/metadata/RelMetadataQuery/collations(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/metadata/RelMdCollation/mergeJoin(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.util.ImmutableIntList)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/runtime/CalciteResource/typeNotComparable(java.lang.String,java.lang.String)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName,int)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/subList(int,int)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getTypeFactory()
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getPrecision()
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/util/Util/pre(boolean,java.lang.String)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeUtil/inCharFamily(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataTypeFactory/createTypeWithCharsetAndCollation(org.apache.calcite.rel.type.RelDataType,java.nio.charset.Charset,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlCollation/equals(java.lang.Object)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/newError(org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeUtil/isBoundedVariableWidth(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getCharset()
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlCollation/getCoercibilityDyadicOperator(org.apache.calcite.sql.SqlCollation,org.apache.calcite.sql.SqlCollation)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeUtil/sameNamedType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/getOperandType(int)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeUtil/inCharOrBinaryFamilies(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/SqlOperatorBinding/collectOperandTypes()
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getFullTypeString()
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelDataType/getCollation()
org/apache/calcite/sql/type/ReturnTypes$9/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/SqlValidatorScope$ResolvedImpl()
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#org/apache/calcite/util/Util/skip(java.util.List)
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/only()
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#org/apache/calcite/util/Util/skipLast(java.util.List)
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#org/apache/calcite/sql/validate/SqlValidatorNamespace/translate(java.lang.String)
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#org/apache/calcite/sql/validate/SqlValidatorScope/resolve(java.util.List,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/SqlQualified/translatedNames()#org/apache/calcite/sql/validate/SqlValidatorScope$ResolvedImpl/count()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/Character/isWhitespace(char)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/toUpperCase()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/indexOf(java.lang.String,int)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#org/apache/calcite/sql/advise/SqlSimpleParser$IdToken/SqlSimpleParser$IdToken(org.apache.calcite.sql.advise.SqlSimpleParser$TokenType,java.lang.String)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#org/apache/calcite/sql/advise/SqlSimpleParser$Token/SqlSimpleParser$Token(org.apache.calcite.sql.advise.SqlSimpleParser$TokenType)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/StringBuilder/toString()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/charAt(int)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/length()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#org/apache/calcite/sql/advise/SqlSimpleParser$Token/SqlSimpleParser$Token(org.apache.calcite.sql.advise.SqlSimpleParser$TokenType,java.lang.String)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/indexOfLineEnd(java.lang.String,int)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/substring(int,int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/UnaryExpression/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/box(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Primitive)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/runtime/SqlFunctions/initcap(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/ofBox(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/equal(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/unbox(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Primitive)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/of(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/util/SortedSet/add(java.lang.Object)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#org/apache/calcite/util/Util/discard(java.lang.Object)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#org/apache/calcite/sql/parser/SqlParserUtil/getTokenVal(java.lang.String)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#org/apache/calcite/sql/parser/SqlParseException/getTokenImages()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#org/apache/calcite/sql/parser/SqlAbstractParserImpl/ReInit(java.io.Reader)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#org/apache/calcite/sql/parser/SqlParseException/getExpectedTokenSequences()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#org/apache/calcite/util/Util/newInternal(java.lang.Throwable,java.lang.String)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/virtualCall(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.lang.String)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/util/SortedSet/isEmpty()
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#org/apache/calcite/rel/convert/ConverterRule/convert(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#java/util/Iterator/hasNext()
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#org/apache/calcite/rel/convert/ConverterRule/getOutTrait()
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#java/util/Iterator/next()
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#org/apache/calcite/rel/convert/ConverterRule/getInTrait()
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#org/apache/calcite/rel/RelNode/getConvention()
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#java/util/Collection/iterator()
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/ConventionTraitDef/changeConvention(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,org.apache.calcite.plan.Convention,com.google.common.collect.Multimap)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/rel/RelFieldCollation$Direction/values()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/rel/RelFieldCollation$Direction/ordinal()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/rel/core/JoinRelType/ordinal()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/sql/type/SqlTypeFamily/values()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/rel/core/JoinRelType/values()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/sql/SqlDialect$DatabaseProduct/values()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/rel/RelFieldCollation$NullDirection/ordinal()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/rel/RelFieldCollation$NullDirection/values()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/sql/SqlDialect$DatabaseProduct/ordinal()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/sql/SqlKind/values()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/sql/type/SqlTypeName/values()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/sql/type/SqlTypeName/ordinal()
java+initializer:///org/apache/calcite/rel/rel2sql/SqlImplementor$1/SqlImplementor$1$initializer#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/util/Util/range(int)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/getOperandCount()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/type/SqlSingleOperandTypeChecker/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/type/CompositeOperandTypeChecker$Composition/ordinal()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/next()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/type/SqlOperandTypeChecker/checkOperandTypes(org.apache.calcite.sql.SqlCallBinding,boolean)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/lang/Integer/intValue()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/util/List/iterator()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlCallBinding/getCall()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/SqlOperandCountRange/isValidCount(int)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/Integer/toString(int,int)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/length()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/charAt(int)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/rules/CalcRelSplitter$RelType/access$000(org.apache.calcite.rel.rules.CalcRelSplitter$RelType)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/rules/CalcRelSplitter/computeTopologicalOrdering(org.apache.calcite.rex.RexNode%5B%5D,java.util.List)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/rules/CalcRelSplitter$MaxInputFinder/maxInputFor(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/rules/CalcRelSplitter/count(boolean%5B%5D)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/util/Arrays/fill(boolean%5B%5D,boolean)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/util/Iterator/next()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/util/Set/iterator()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/rules/CalcRelSplitter$RelType/canImplement(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/rules/CalcRelSplitter/firstSet(boolean%5B%5D)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/rules/CalcRelSplitter$MaxInputFinder/CalcRelSplitter$MaxInputFinder(int%5B%5D)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/rules/CalcRelSplitter/getCohorts()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rex/RexProgram/getInputRowType()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#java/util/List/iterator()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode%5B%5D,int,int%5B%5D,int%5B%5D)#org/apache/calcite/rel/rules/CalcRelSplitter/findCohort(java.util.List,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/runtime/CalciteResource/argumentMustHaveScaleZero(java.lang.String)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/runtime/Resources$ExInst/ex()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getType()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexBuilder/makeCall(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rex.RexNode%5B%5D)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isDecimal(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/sql/SqlOperator/getName()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/accessValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/sql/type/SqlTypeUtil/isExactNumeric(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandMod(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/PushProjector(org.apache.calcite.rel.core.Project,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rules.PushProjector$ExprCondition,org.apache.calcite.tools.RelBuilder)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/getAdjustments()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getJoinType()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/isSemiJoinDone()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/convertRefsAndExprs(org.apache.calcite.rex.RexNode,java.util.List,int%5B%5D)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/tools/RelBuilderFactory/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptSchema)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/createNewProject(org.apache.calcite.rel.RelNode,int%5B%5D)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCondition()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/PushProjector/locateAllRefs()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rex.RexNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,boolean)
org/apache/calcite/rel/rules/ProjectJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getSystemFieldList()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlCall/getKind()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlCall/getOperandList()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNode/isA(java.util.Set)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/runtime/CalciteResource/needQueryOp(java.lang.String)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNode/toString()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorImpl/validateQuery(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlCall/getOperator()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlOperator/deriveType(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlCall)
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/RelTraitSet/difference(org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/RelTraitDef/canConvert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.plan.RelTrait,org.apache.calcite.plan.RelTrait,org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/RelTraitSet/getTrait(org.apache.calcite.plan.RelTraitDef)
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/RelTraitSet/size()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/volcano/AbstractConverter/AbstractConverter(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,org.apache.calcite.plan.RelTraitDef,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/RelOptCluster/getPlanner()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/Convention/useAbstractConvertersForConversion(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/RelTrait/getTraitDef()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/volcano/RelSubset/getConvention()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/RelTrait/satisfies(org.apache.calcite.plan.RelTrait)
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/volcano/RelSubset/getTraitSet()
org/apache/calcite/plan/volcano/RelSet/addAbstractConverters(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.volcano.RelSubset,boolean)#org/apache/calcite/plan/volcano/VolcanoPlanner/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#java/lang/Integer/intValue()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNode/getKind()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/newValidationError(org.apache.calcite.sql.SqlNode,org.apache.calcite.runtime.Resources$ExInst)
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNumericLiteral/getScale()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/util/Util/newInternal(java.lang.String)
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/orderByRangeMismatch()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/rowMustBeNonNegativeIntegral()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlCall/operand(int)
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/runtime/CalciteResource/orderByDataTypeProhibitsRange()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNode/validate(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNumericLiteral/longValue(boolean)
org/apache/calcite/sql/SqlWindow/validateFrameBoundary(org.apache.calcite.sql.SqlNode,boolean,org.apache.calcite.sql.type.SqlTypeFamily,org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/sql/SqlNumericLiteral/isExact()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/sql/SqlSelectKeyword/symbol(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/List/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/sql/SqlOperator/createCall(org.apache.calcite.sql.SqlLiteral,org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/List/iterator()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/rel2sql/SqlImplementor$Context/field(int)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/List/toArray(java.lang.Object%5B%5D)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#org/apache/calcite/adapter/java/Array/componentIsNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#org/apache/calcite/adapter/java/Map/keyIsNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#org/apache/calcite/adapter/java/Array/maximumCardinality()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#org/apache/calcite/adapter/java/Map/value()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#java/lang/reflect/Field/getType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#org/apache/calcite/adapter/java/Array/component()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#org/apache/calcite/adapter/java/Map/key()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#org/apache/calcite/linq4j/tree/Types$ArrayType/Types$ArrayType(java.lang.reflect.Type,boolean,long)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#org/apache/calcite/adapter/java/Map/valueIsNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/fieldType(java.lang.reflect.Field)#org/apache/calcite/linq4j/tree/Types$MapType/Types$MapType(java.lang.reflect.Type,boolean,java.lang.reflect.Type,boolean)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#java/sql/DatabaseMetaData/getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#java/sql/ResultSet/next()
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#org/apache/calcite/avatica/SqlType/valueOf(int)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#java/sql/ResultSet/getString(int)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#java/sql/ResultSet/getBoolean(int)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#org/apache/calcite/avatica/SqlType/ordinal()
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeImpl/proto(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#java/sql/ResultSet/close()
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/nullable(boolean)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/SqlTypeFactoryImpl(org.apache.calcite.rel.type.RelDataTypeSystem)
org/apache/calcite/adapter/jdbc/JdbcSchema/getRelDataType(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)#java/sql/ResultSet/getInt(int)
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlCallBinding/getValidator()
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/util/List/size()
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlCallBinding/newValidationSignatureError()
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/util/List/get(int)
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/rel/type/RelDataType/isStruct()
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/validate/SqlValidator/deriveType(org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql/type/OperandTypes$4/checkSingleOperandType(org.apache.calcite.sql.SqlCallBinding,org.apache.calcite.sql.SqlNode,int,boolean)#org/apache/calcite/sql/SqlCallBinding/getScope()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableValues/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferCustom()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/newArrayInit(java.lang.reflect.Type,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableValues/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableMultimap/entries()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableMultimap/builder()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableCollection/iterator()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableList/contains(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableMultimap$Builder/build()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/lang/String/toLowerCase()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorUtil/getAlias(org.apache.calcite.sql.SqlNode,int)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlAsOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode%5B%5D)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/SqlIdentifier(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/addSelect(java.util.List,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/TableMacro/apply(java.util.List)
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/List/isEmpty()
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Iterator/next()
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/Function/getParameters()
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/jdbc/SimpleCalciteSchema/tableEntry(java.lang.String,org.apache.calcite.schema.Table)
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Set/iterator()
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/Schema/getFunctionNames()
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#java/util/Collection/iterator()
org/apache/calcite/jdbc/SimpleCalciteSchema/getImplicitTableBasedOnNullaryFunction(java.lang.String,boolean)#org/apache/calcite/schema/Schema/getFunctions(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#org/apache/calcite/rex/RexInputRef/of(int,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#org/apache/calcite/adapter/enumerable/PhysType/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableAggregate$2/rexArguments()#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$100(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Set/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Set/remove(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$600(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#org/apache/calcite/sql2rel/RelDecorrelator$CorelMap/access$300(org.apache.calcite.sql2rel.RelDecorrelator$CorelMap)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Set/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/Character/isISOControl(char)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/Character/isJavaIdentifierPart(char)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/Integer/toString(int,int)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/String/length()
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/StringBuilder(int)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/Character/isJavaIdentifierStart(char)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/String/charAt(int)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/util/regex/Matcher/matches()
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlOrderBy$Operator/getRightPrec()
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/sep(java.lang.String)
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/startList(org.apache.calcite.sql.SqlWriter$FrameTypeEnum)
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlOrderBy$Operator/unparseListClause(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlNode/unparse(org.apache.calcite.sql.SqlWriter,int,int)
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/keyword(java.lang.String)
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlOrderBy$Operator/getLeftPrec()
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/endList(org.apache.calcite.sql.SqlWriter$Frame)
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlWriter/newlineAndIndent()
org/apache/calcite/sql/SqlOrderBy$Operator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlOrderBy$Operator/getName()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/LogicalProject(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalWindow/getRowType()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType,java.util.List)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ProjectWindowTransposeRule$1/ProjectWindowTransposeRule$1(org.apache.calcite.rel.rules.ProjectWindowTransposeRule,org.apache.calcite.util.ImmutableBitSet,int)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalWindow/getInput()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelFieldCollation/copy(int)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Window$RexWinAggCall/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/RexInputRef(int,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/BitSets/toIter(org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalWindow/getTraitSet()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalWindow/getCluster()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Iterable/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ProjectRemoveRule/isTrivial(org.apache.calcite.rel.core.Project)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ProjectWindowTransposeRule/findReference(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalWindow)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Window$Group/Window$Group(org.apache.calcite.util.ImmutableBitSet,boolean,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rex.RexWindowBound,org.apache.calcite.rel.RelCollation,java.util.List)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelCollations/of(java.util.List)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/addAll(java.lang.Iterable)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ProjectWindowTransposeRule/getAdjustedIndex(int,org.apache.calcite.util.ImmutableBitSet,int)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getChildExps()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(org.apache.calcite.rel.type.RelDataTypeField)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/replaceInParent(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/getInputs()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$UnifyResult/access$300(org.apache.calcite.plan.SubstitutionVisitor$UnifyResult)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$UnifyResult/access$200(org.apache.calcite.plan.SubstitutionVisitor$UnifyResult)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/toString()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor$MutableRel/deep()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/util/List/isEmpty()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.plan.SubstitutionVisitor$MutableRel)#org/apache/calcite/plan/SubstitutionVisitor/apply(org.apache.calcite.plan.SubstitutionVisitor$UnifyRule,org.apache.calcite.plan.SubstitutionVisitor$MutableRel,org.apache.calcite.plan.SubstitutionVisitor$MutableRel)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rex/RexBuilder/makeZeroLiteral(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mappings/createIdentity(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/getSourceCount()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/getTargetOpt(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/trimChild(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.type.RelDataType,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql2rel/RelFieldTrimmer/result(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/isIdentity()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimChildRestore(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/handle(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/String/valueOf(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/foldOr(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable/access$1000(boolean,org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/plan/RelOptUtil/createDistinctRel(org.apache.calcite.rel.RelNode)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/sql2rel/RelDecorrelator/getCorRel(org.apache.calcite.sql2rel.RelDecorrelator$Correlation)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/rex/RexBuilder/makeLiteral(boolean)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/HashMap/HashMap()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/lang/Iterable/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/List/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/plan/RelOptUtil/createProject(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/rel/logical/LogicalJoin/create(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode,java.util.Set,org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/SortedMap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/ArrayList/ArrayList()
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/plan/RelOptUtil/getFieldTypeList(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Iterator/hasNext()
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/List/add(java.lang.Object)
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/util/ImmutableIntList/copyOf(java.lang.Iterable)
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/schema/Table/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Iterator/next()
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List,java.util.List)
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#java/lang/Integer/valueOf(int)
org/apache/calcite/schema/impl/StarTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/metadata/RelMdSize/averageTypeValueSize(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/TableScan/getRowType()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/util/regex/Matcher/find()
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/util/regex/Matcher/group()
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/util/BitSets/contains(java.util.BitSet,org.apache.calcite.util.ImmutableBitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptOptimizeJoinRule/computeJoinCardinality(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getOuterJoinFactors(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/util/BitSets/toIter(java.util.BitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/isNullGenerating(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getJoinRemovalFactor(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/BitSet/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/lang/Double/doubleValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/LoptMultiJoin/getFactorWeights()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/getBestNextFactor(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.BitSet,java.util.BitSet,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/lang/Iterable/iterator()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Deque/addLast(java.lang.Object)
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#org/apache/calcite/util/graph/DirectedGraph/getOutwardEdges(java.lang.Object)
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Deque/removeFirst()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Deque/isEmpty()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/List/iterator()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Deque/add(java.lang.Object)
