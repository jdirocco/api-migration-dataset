org/apache/calcite/adapter/druid/DruidQuery/planAsTimeSeries(java.util.List,org.apache.calcite.adapter.druid.DruidJsonFilter,java.util.List,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidQuery$JsonLimit,org.apache.calcite.adapter.druid.DruidJsonFilter)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.lang.Integer,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Filter)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,java.util.List,java.util.List,int)
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,java.util.TimeZone,boolean)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set,java.util.Map)
org/apache/calcite/adapter/druid/DruidQuery/computeProjectAsScan(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)
org/apache/calcite/adapter/druid/DruidJsonFilter/toDruidLiteral(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidQuery/computeSort(java.lang.Integer,java.util.List,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List)
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)
org/apache/calcite/adapter/druid/DruidJsonFilter/toInKindDruidFilter(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidQuery/computeProjectGroupSet(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidExpressions/escape(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/planAsTopN(java.util.List,org.apache.calcite.adapter.druid.DruidJsonFilter,java.util.List,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidQuery$JsonLimit,org.apache.calcite.adapter.druid.DruidJsonFilter)
org/apache/calcite/adapter/druid/DruidQuery/toDruidColumn(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidRules$DruidHavingFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/adapter/druid/DruidJsonFilter/toBoundDruidFilter(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.lang.String,org.apache.calcite.rel.core.AggregateCall,org.apache.calcite.rex.RexNode,java.lang.String,java.lang.String,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$ScanQuery/toQuery()
org/apache/calcite/adapter/druid/DruidSqlCastConverter/toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseFieldForName(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser,java.lang.String)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/toISOPeriodFormat(org.apache.calcite.adapter.druid.Granularity$Type)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/literalValue(org.apache.calcite.rex.RexNode,java.util.TimeZone)
org/apache/calcite/adapter/druid/DruidJsonFilter/toEqualityKindDruidFilter(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rex.RexNode,java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/computeDruidJsonAgg(java.util.List,java.util.List,org.apache.calcite.rel.core.Project,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidQuery/planAsGroupBy(java.util.List,org.apache.calcite.adapter.druid.DruidJsonFilter,java.util.List,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidQuery$JsonLimit,org.apache.calcite.adapter.druid.DruidJsonFilter)
org/apache/calcite/adapter/druid/DruidExpressions/toDruidExpression(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/druid/DruidQuery/extendQuery(org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,java.util.TimeZone,boolean)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateProjectRule/optimizeFilteredAggregations(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate)
org/apache/calcite/adapter/druid/DruidJsonFilter/toDruidFilters(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/adapter/druid/DruidRules$DruidPostAggregationProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
