org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)
