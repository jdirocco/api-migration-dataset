org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#java/lang/String/toLowerCase()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilters(java.util.List)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/toString()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/druid/DruidQuery$JsonSelector/DruidQuery$JsonSelector(java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.adapter.druid.DruidQuery$1)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/druid/DruidQuery$JsonCompositeFilter/DruidQuery$JsonCompositeFilter(java.lang.String,java.util.List,org.apache.calcite.adapter.druid.DruidQuery$1)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/druid/DruidQuery$Translator/tr(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/druid/DruidQuery$JsonBound/DruidQuery$JsonBound(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,boolean,boolean,org.apache.calcite.adapter.druid.DruidQuery$1)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexUtil/isConstant(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translateFilter(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/extendQuery(org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getTraitSet()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/signature()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(char)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/isValidSignature(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#java/text/SimpleDateFormat/parse(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#org/apache/calcite/adapter/druid/DruidConnectionImpl/expect(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/getCurrentName()
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/getText()
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#java/util/Date/getTime()
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/nextToken()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/extendQuery(org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getTraitSet()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/canProjectAll(java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(char)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/isValidSignature(java.lang.String)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/signature()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#java/lang/Integer/intValue()
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#org/apache/calcite/adapter/druid/DruidQuery/writeArray(com.fasterxml.jackson.core.JsonGenerator,java.util.List)
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#org/joda/time/Interval/toString()
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#com/fasterxml/jackson/core/JsonGenerator/writeNumber(int)
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidQuery/writeObject(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)#org/apache/calcite/adapter/druid/DruidQuery$Json/write(com.fasterxml.jackson.core.JsonGenerator)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/util/Litmus/fail(java.lang.String,java.lang.Object%5B%5D)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/AbstractRelNode/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/List/size()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/joda/time/chrono/ISOChronology/getInstanceUTC()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/adapter/druid/DruidQuery/isValidSignature(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/adapter/druid/DruidQuery/isValidFilter(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/RelNode/getInputs()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/adapter/druid/DruidQuery/signature()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rex/RexLiteral/intValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/RelNode/getTable()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/adapter/druid/DruidQuery/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/joda/time/Interval/getChronology()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.InputStream,com.fasterxml.jackson.databind.JavaType)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#org/apache/calcite/runtime/HttpUtils/post(java.lang.String,java.lang.CharSequence,java.util.Map,int,int)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/Set/iterator()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#org/apache/calcite/adapter/druid/DruidConnectionImpl$DruidType/valueOf(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/Map$Entry/getValue()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#com/fasterxml/jackson/databind/ObjectMapper/getTypeFactory()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/Map$Entry/getKey()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/io/InputStream/close()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#com/fasterxml/jackson/databind/type/TypeFactory/constructCollectionType(java.lang.Class,java.lang.Class)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/Map/entrySet()
org/apache/calcite/adapter/druid/DruidConnectionImpl/metadata(java.lang.String,java.lang.String,java.util.List,java.util.Map,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonGenerator/writeEndObject()
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonGenerator/writeBooleanField(java.lang.String,boolean)
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonGenerator/writeArrayFieldStart(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonGenerator/writeStartObject()
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonGenerator/close()
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonGenerator/writeStringField(java.lang.String,java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonGenerator/writeEndArray()
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.Writer)
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonFactory/JsonFactory()
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#java/io/StringWriter/StringWriter()
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#java/io/StringWriter/toString()
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/metadataQuery(java.lang.String,java.util.List)#org/apache/calcite/adapter/druid/DruidQuery/writeFieldIf(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.InputStream,com.fasterxml.jackson.databind.JavaType)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#org/apache/calcite/runtime/HttpUtils/post(java.lang.String,java.lang.CharSequence,java.util.Map,int,int)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#com/fasterxml/jackson/databind/ObjectMapper/getTypeFactory()
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#com/fasterxml/jackson/databind/type/TypeFactory/constructCollectionType(java.lang.Class,java.lang.Class)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#com/google/common/collect/ImmutableSet/copyOf(java.util.Collection)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#java/io/InputStream/close()
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidConnectionImpl/tableNames()#org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/lang/Integer/intValue()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/SortedSet/size()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/List/isEmpty()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/SortedSet/iterator()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#com/google/common/collect/ImmutableSet/contains(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/SortedSet/contains(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#org/apache/calcite/adapter/druid/DruidQuery/getRowType()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#org/apache/calcite/plan/RelOptUtil$InputReferencedVisitor/RelOptUtil$InputReferencedVisitor()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#com/google/common/collect/TreeRangeSet/create()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#com/google/common/collect/TreeRangeSet/asRanges()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/druid/DruidDateTimeUtils/toInterval(java.util.List)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)#com/google/common/collect/TreeRangeSet/add(com.google.common.collect.Range)
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableSet/contains(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)#java/lang/Object/Object()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/adapter/druid/DruidQuery/getTopNode()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/util/ImmutableBitSet/nth(int)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/plan/RelOptUtil/isPureLimit(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/adapter/druid/DruidRules/access$800(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rel/core/Aggregate/getGroupCount()
org/apache/calcite/adapter/druid/DruidRules$DruidSortRule/validSortLimit(org.apache.calcite.rel.core.Sort,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rex/RexLiteral/intValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/item(java.lang.String,java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/plan/RelOptTable/getQualifiedName()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelFieldCollation/shortString()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/RelWriter/itemIf(java.lang.String,java.lang.Object,boolean)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/core/TableScan/getTable()
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/druid/DruidQuery/explainTerms(org.apache.calcite.rel.RelWriter)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/plan/RelOptTable/getRowType()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/util/Util/skip(java.util.List,int)
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rel/RelFieldCollation/getDirection()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#com/google/common/collect/ImmutableList/size()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/druid/DruidQuery/deriveQuerySpec()#org/apache/calcite/rex/RexLiteral/intValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/runtime/HttpUtils/post(java.lang.String,java.lang.CharSequence,java.util.Map,int,int)
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/io/InputStream/close()
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidConnectionImpl/request(org.apache.calcite.adapter.druid.QueryType,java.lang.String,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#com/google/common/collect/Range/upperBoundType()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#com/google/common/collect/Range/lowerBoundType()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#java/util/Calendar/getTime()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#org/joda/time/Interval/getEndMillis()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#org/joda/time/chrono/ISOChronology/getInstanceUTC()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#org/joda/time/Interval/getStartMillis()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#org/joda/time/Interval/Interval(long,long,org.joda.time.Chronology)
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#java/util/Date/getTime()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#com/google/common/collect/Range/upperEndpoint()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#com/google/common/collect/Range/hasLowerBound()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#com/google/common/collect/Range/lowerEndpoint()
org/apache/calcite/adapter/druid/DruidDateTimeUtils$1/apply(com.google.common.collect.Range)#com/google/common/collect/Range/hasUpperBound()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/interpreter/Sink/send(org.apache.calcite.interpreter.Row)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#com/fasterxml/jackson/core/JsonParser/getCurrentName()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/util/List/size()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/interpreter/Row/newBuilder(int)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/adapter/druid/DruidConnectionImpl/parseFields(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/interpreter/Row$RowBuilder/build()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/adapter/druid/DruidConnectionImpl/expect(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/adapter/druid/DruidConnectionImpl/expect(com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.core.JsonToken)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte%5B%5D)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#com/fasterxml/jackson/core/JsonParser/getCurrentToken()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#com/fasterxml/jackson/core/JsonFactory/createParser(java.io.InputStream)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#com/fasterxml/jackson/core/JsonParser/getIntValue()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#com/fasterxml/jackson/core/JsonParser/close()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#com/fasterxml/jackson/core/JsonFactory/JsonFactory()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/adapter/druid/QueryType/ordinal()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/String/String(byte%5B%5D)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/adapter/druid/DruidConnectionImpl/extractTimestampField(com.fasterxml.jackson.core.JsonParser)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/avatica/AvaticaUtils/readFullyToBytes(java.io.InputStream)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/interpreter/Row$RowBuilder/reset()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/adapter/druid/DruidConnectionImpl/parseFields(java.util.List,java.util.List,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#com/fasterxml/jackson/core/JsonParser/nextToken()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parse(org.apache.calcite.adapter.druid.QueryType,java.io.InputStream,org.apache.calcite.interpreter.Sink,java.util.List,java.util.List,org.apache.calcite.adapter.druid.DruidConnectionImpl$Page)#org/apache/calcite/interpreter/Row$RowBuilder/set(int,java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/fasterxml/jackson/core/JsonGenerator/writeEndObject()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/io/IOException/printStackTrace()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/List/size()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/config/CalciteConnectionProperty/wrap(java.util.Properties)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery$Translator/access$000(org.apache.calcite.adapter.druid.DruidQuery$Translator,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery/writeFieldIf(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidTable/getRowType(org.apache.calcite.rel.type.RelDataTypeFactory)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/lang/Integer/intValue()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/fasterxml/jackson/core/JsonGenerator/writeBooleanField(java.lang.String,boolean)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/fasterxml/jackson/core/JsonGenerator/writeFieldName(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/fasterxml/jackson/core/JsonGenerator/writeStartObject()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/fasterxml/jackson/core/JsonGenerator/close()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/fasterxml/jackson/core/JsonGenerator/writeStringField(java.lang.String,java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/List/isEmpty()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/avatica/ConnectionConfigImpl$PropEnv/getInt()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery$JsonAggregation/DruidQuery$JsonAggregation(java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.adapter.druid.DruidQuery$1)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/fasterxml/jackson/core/JsonGenerator/writeNumberField(java.lang.String,int)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/fasterxml/jackson/core/JsonFactory/createGenerator(java.io.Writer)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#com/fasterxml/jackson/core/JsonFactory/JsonFactory()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/QueryType/ordinal()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery$QuerySpec/DruidQuery$QuerySpec(org.apache.calcite.adapter.druid.QueryType,java.lang.String,java.util.List)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/Properties/Properties()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery$JsonCollation/DruidQuery$JsonCollation(java.lang.String,java.lang.String,org.apache.calcite.adapter.druid.DruidQuery$1)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/io/StringWriter/StringWriter()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/List/clear()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/io/StringWriter/toString()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery$Translator/DruidQuery$Translator(org.apache.calcite.adapter.druid.DruidTable,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery$JsonLimit/DruidQuery$JsonLimit(java.lang.String,java.lang.Integer,com.google.common.collect.ImmutableList,org.apache.calcite.adapter.druid.DruidQuery$1)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractGranularity(org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery/getCluster()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidQuery/getQuery(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,java.util.List,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List,java.util.List,java.util.List,java.lang.Integer)#org/apache/calcite/adapter/druid/DruidQuery/writeField(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validProject(org.apache.calcite.rel.core.Project,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Iterables/any(java.lang.Iterable,com.google.common.base.Predicate)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/signature()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/extendQuery(org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getTraitSet()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(char)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/isValidSignature(java.lang.String)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidRules/access$700()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#org/apache/calcite/adapter/druid/DruidConnectionImpl/expect(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#com/fasterxml/jackson/core/JsonParser/getCurrentName()
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#com/fasterxml/jackson/core/JsonToken/ordinal()
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidConnectionImpl/expectScalarField(com.fasterxml.jackson.core.JsonParser,java.lang.String)#com/fasterxml/jackson/core/JsonParser/nextToken()
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#org/apache/calcite/schema/impl/AbstractTable/AbstractTable()
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#org/joda/time/chrono/ISOChronology/getInstanceUTC()
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#com/google/common/collect/ImmutableSet/copyOf(java.util.Collection)
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/druid/DruidTable/DruidTable(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,org.apache.calcite.rel.type.RelProtoDataType,java.util.Set,java.lang.String,java.util.List)#org/joda/time/Interval/getChronology()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#java/lang/Integer/intValue()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/util/ImmutableBitSet$Builder/set(int)
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rel/type/RelDataType/getFieldNames()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractGranularity(org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/util/ImmutableBitSet/builder()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rel/core/Project/getProjects()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/util/ImmutableBitSet$Builder/build()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/druid/DruidRules/checkTimestampRefOnQuery(org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.adapter.druid.DruidQuery)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#com/google/common/collect/Range/isConnected(com.google.common.collect.Range)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#java/util/List/isEmpty()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractRanges(org.apache.calcite.rex.RexNode,boolean)#com/google/common/collect/Range/intersection(com.google.common.collect.Range)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/core/AggregateCall/getType()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/lang/Integer/intValue()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/sql/SqlAggFunction/getKind()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/core/AggregateCall/isDistinct()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/adapter/druid/DruidQuery$JsonAggregation/DruidQuery$JsonAggregation(java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.adapter.druid.DruidQuery$1)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery/getJsonAggregation(java.util.List,java.lang.String,org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/adapter/druid/DruidQuery$JsonCardinalityAggregation/DruidQuery$JsonCardinalityAggregation(java.lang.String,java.lang.String,java.util.List,org.apache.calcite.adapter.druid.DruidQuery$1)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Iterables/any(java.lang.Iterable,com.google.common.base.Predicate)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/copy(org.apache.calcite.plan.RelTraitSet,java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/signature()
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/extendQuery(org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.adapter.druid.DruidQuery)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(char)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/isValidSignature(java.lang.String)
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidRules/access$700()
org/apache/calcite/adapter/druid/DruidRules$DruidAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getGroupSets()
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/util/Map/get(java.lang.Object)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#org/joda/time/chrono/ISOChronology/getInstanceUTC()
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/adapter/druid/DruidTable/create(org.apache.calcite.adapter.druid.DruidSchema,java.lang.String,java.util.List,java.util.Map,java.util.Set,java.lang.String,org.apache.calcite.adapter.druid.DruidConnectionImpl)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/adapter/druid/DruidConnectionImpl/DruidConnectionImpl(java.lang.String,java.lang.String)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/util/Util/first(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#org/joda/time/Interval/Interval(java.lang.Object,org.joda.time.Chronology)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#java/util/Set/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidTableFactory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/schema/SchemaPlus/unwrap(java.lang.Class)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/adapter/druid/DruidQuery$Translator/tr(org.apache.calcite.rex.RexNode,int,boolean)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/lang/Object/toString()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#com/google/common/collect/ImmutableSet/contains(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexNode/getKind()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/rex/RexLiteral/getValue2()
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/druid/DruidQuery$Translator/translate(org.apache.calcite.rex.RexNode,boolean)#org/apache/calcite/adapter/druid/DruidDateTimeUtils/extractGranularity(org.apache.calcite.rex.RexCall)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/composeConjunction(org.apache.calcite.rex.RexBuilder,java.lang.Iterable,boolean)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getTraitSet()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/splitFilters(org.apache.calcite.rex.RexBuilder,org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rex.RexNode,int)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexUtil/simplify(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptCluster/getRexBuilder()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidDateTimeUtils/createInterval(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCluster()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCondition()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/extendQuery(org.apache.calcite.adapter.druid.DruidQuery,org.apache.calcite.rel.RelNode)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/isValidFilter(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/Util/last(java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/getRowType()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/extendQuery(org.apache.calcite.adapter.druid.DruidQuery,java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(char)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/isValidSignature(java.lang.String)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/adapter/druid/DruidQuery/signature()
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/RelOptRuleCall/rel(int)
org/apache/calcite/adapter/druid/DruidRules$DruidFilterRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/copy(org.apache.calcite.plan.RelTraitSet,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/Range/closed(java.lang.Comparable,java.lang.Comparable)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexCall/getOperands()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/Range/atMost(java.lang.Comparable)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/Range/greaterThan(java.lang.Comparable)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/adapter/druid/DruidDateTimeUtils/literalValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#java/util/Calendar/compareTo(java.util.Calendar)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/Range/atLeast(java.lang.Comparable)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/Range/lessThan(java.lang.Comparable)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/util/Util/skip(java.util.List)
org/apache/calcite/adapter/druid/DruidDateTimeUtils/leafToRanges(org.apache.calcite.rex.RexCall,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/getShortValue()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/text/SimpleDateFormat/parse(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonToken/ordinal()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/getCurrentName()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#org/apache/calcite/avatica/ColumnMetaData$Rep/ordinal()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/lang/Short/valueOf(short)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/getByteValue()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/getIntValue()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/getDoubleValue()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/lang/Double/valueOf(double)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/lang/Byte/valueOf(byte)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/util/List/get(int)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/getText()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/util/Date/getTime()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/getLongValue()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#com/fasterxml/jackson/core/JsonParser/nextToken()
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/adapter/druid/DruidConnectionImpl/parseField(java.util.List,java.util.List,int,org.apache.calcite.interpreter.Row$RowBuilder,com.fasterxml.jackson.core.JsonParser)#org/apache/calcite/interpreter/Row$RowBuilder/set(int,java.lang.Object)
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#com/google/common/collect/ImmutableMap/entrySet()
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/add(java.lang.String,org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Map$Entry/getKey()
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory/builder()
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Map$Entry/getValue()
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/nullable(boolean)
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidTable$MapRelProtoDataType/apply(org.apache.calcite.rel.type.RelDataTypeFactory)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte%5B%5D)
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)#java/io/InputStream/close()
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)#org/apache/calcite/avatica/AvaticaUtils/readFullyToBytes(java.io.InputStream)
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/druid/DruidConnectionImpl/traceResponse(java.io.InputStream)#java/lang/String/String(byte%5B%5D)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#java/util/SortedSet/size()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/plan/RelOptUtil$InputReferencedVisitor/RelOptUtil$InputReferencedVisitor()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rex/RexBuilder/makeInputRef(org.apache.calcite.rel.RelNode,int)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule$1/DruidRules$DruidProjectRule$1(java.util.List,org.apache.calcite.rex.RexBuilder,java.util.List)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectRule/splitProjects(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)#org/apache/calcite/util/ImmutableBitSet/get(int)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)#java/util/Iterator/next()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)#java/util/List/contains(java.lang.Object)
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)#java/util/List/iterator()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)#org/apache/calcite/rel/core/Aggregate/getGroupSet()
org/apache/calcite/adapter/druid/DruidRules$DruidProjectAggregateRule/validAggregate(org.apache.calcite.rel.core.Aggregate,int)#org/apache/calcite/rel/core/Aggregate/getAggCallList()
