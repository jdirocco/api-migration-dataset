org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/PhysType/fieldClass(int)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/getTypeFactory()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/rel/type/RelDataType/getFieldCount()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/util/List/toArray(java.lang.Object%5B%5D)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Primitive/ofBoxOr(java.lang.reflect.Type)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/JdbcToSparkConverter/getInput()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/JdbcToSparkConverter/getRowType()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/jdbc/JdbcRel/getConvention()
org/apache/calcite/adapter/spark/JdbcToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/JdbcToSparkConverter/generateSql(org.apache.calcite.sql.SqlDialect)
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/net/InetAddress/getHostAddress()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#org/apache/calcite/adapter/spark/HttpServer/iterable(java.util.Enumeration)
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/util/Iterator/hasNext()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/net/InetAddress/getLocalHost()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/net/InetAddress/isLoopbackAddress()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/net/InterfaceAddress/getAddress()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/util/Iterator/next()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/net/NetworkInterface/getNetworkInterfaces()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/lang/Iterable/iterator()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/net/InetAddress/getHostName()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/net/NetworkInterface/getInterfaceAddresses()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/net/InetAddress/isLinkLocalAddress()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/net/NetworkInterface/getName()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/lang/System/getenv(java.lang.String)
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/util/List/iterator()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/spark/HttpServer/findLocalIpAddress()#org/apache/calcite/adapter/spark/HttpServer/logWarning(java.lang.String)
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/String/hashCode()
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/invoke/SerializedLambda/getImplMethodKind()
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/invoke/SerializedLambda/getFunctionalInterfaceMethodName()
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/invoke/SerializedLambda/getFunctionalInterfaceClass()
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/invoke/SerializedLambda/getImplMethodSignature()
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/invoke/SerializedLambda/getFunctionalInterfaceMethodSignature()
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/invoke/SerializedLambda/getImplClass()
org/apache/calcite/adapter/spark/SparkRules/$deserializeLambda$(java.lang.invoke.SerializedLambda)#java/lang/invoke/SerializedLambda/getImplMethodName()
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/Class/forName(java.lang.String)
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/util/concurrent/atomic/AtomicInteger/getAndIncrement()
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/Class/getName()
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/io/File/getAbsolutePath()
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/apache/calcite/util/javac/JavaCompilerArgs/setDestdir(java.lang.String)
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/apache/calcite/util/javac/JavaCompilerArgs/setSource(java.lang.String,java.lang.String)
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/apache/calcite/util/javac/JaninoCompiler/getArgs()
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/apache/calcite/util/javac/JaninoCompiler/compile()
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/apache/calcite/util/javac/JaninoCompiler/JaninoCompiler()
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/Class/getConstructor(java.lang.Class%5B%5D)
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/spark/SparkHandlerImpl/compile(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/apache/calcite/util/javac/JavaCompilerArgs/setFullClassName(java.lang.String)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/handler/DefaultHandler/DefaultHandler()
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/Server/setHandler(org.eclipse.jetty.server.Handler)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/ServerConnector/setPort(int)
org/apache/calcite/adapter/spark/HttpServer/start()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/handler/HandlerList/setHandlers(org.eclipse.jetty.server.Handler%5B%5D)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/Server/manage(java.lang.Object)
org/apache/calcite/adapter/spark/HttpServer/start()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/Server/start()
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/Server/setConnectors(org.eclipse.jetty.server.Connector%5B%5D)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/ServerConnector/setSoLingerTime(int)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/handler/ResourceHandler/ResourceHandler()
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/ServerConnector/getLocalPort()
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/ServerConnector/ServerConnector(org.eclipse.jetty.server.Server)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/Server/Server(org.eclipse.jetty.util.thread.ThreadPool)
org/apache/calcite/adapter/spark/HttpServer/start()#java/io/File/getAbsolutePath()
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/handler/HandlerList/HandlerList()
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/handler/ResourceHandler/setResourceBase(java.lang.String)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/util/thread/QueuedThreadPool/QueuedThreadPool()
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/util/thread/QueuedThreadPool/setDaemon(boolean)
org/apache/calcite/adapter/spark/HttpServer/start()#org/eclipse/jetty/server/ServerConnector/setIdleTimeout(long)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/spark/SparkRel/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/spark/SparkToEnumerableConverter$SparkImplementorImpl/SparkToEnumerableConverter$SparkImplementorImpl(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/spark/SparkToEnumerableConverter/getInput()
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/spark/SparkToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/spark/SparkToEnumerableConverter/getRowType()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRules$SparkValues/getRowType()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/util/Iterator/next()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/getTypeFactory()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/newArrayInit(java.lang.reflect.Type,java.lang.Iterable)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRules$SparkValues/getCluster()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/getRootExpression()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/rel/type/RelDataTypeField/getType()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/util/List/iterator()
org/apache/calcite/adapter/spark/SparkRules$SparkValues/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/visitInput(org.apache.calcite.adapter.spark.SparkRel,int,org.apache.calcite.adapter.spark.SparkRel)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRules$SparkCalc/getInput()
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateProjects(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/getTypeFactory()
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/PhysType/getJavaRowType()
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/not(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Types/of(java.lang.reflect.Type,java.lang.reflect.Type%5B%5D)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/rex/RexProgram/getCondition()
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression%5B%5D)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCondition(org.apache.calcite.rex.RexProgram,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/PhysType/record(java.util.List)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/RexToLixTranslator$InputGetterImpl(java.util.List)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRules$SparkCalc/getRowType()
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/adapter/spark/SparkRules$SparkCalc/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/getRootExpression()
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/EnumerableToSparkConverter/getRowType()
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/getTypeFactory()
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression%5B%5D)
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/EnumerableToSparkConverter/getInput()
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/adapter/spark/SparkRel$Implementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/spark/EnumerableToSparkConverter/implementSpark(org.apache.calcite.adapter.spark.SparkRel$Implementor)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaRDD/map(org.apache.spark.api.java.function.Function)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#java/lang/Object/toString()
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaRDD/distinct()
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaRDD/take(int)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaSparkContext/textFile(java.lang.String)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaRDD/cache()
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#java/io/PrintStream/println(long)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaRDD/collect()
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaRDD/count()
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaPairRDD/collect()
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#java/io/PrintStream/print(java.lang.String)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaSparkContext/JavaSparkContext(java.lang.String,java.lang.String)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaRDD/groupBy(org.apache.spark.api.java.function.Function)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaRDD/flatMap(org.apache.spark.api.java.function.FlatMapFunction)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaPairRDD/map(org.apache.spark.api.java.function.Function)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/spark/api/java/JavaSparkContext/parallelize(java.util.List)
org/apache/calcite/adapter/spark/SparkRules/main(java.lang.String%5B%5D)#org/apache/calcite/adapter/spark/SparkRules$1/SparkRules$1()
