org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore$InternalSetListener/event(org.onosproject.store.service.SetEvent)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/updateLink(org.onosproject.incubator.net.virtual.VirtualLink,org.onosproject.incubator.net.tunnel.TunnelId,org.onosproject.net.Link$State)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/activate()
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/handleCreateOrUpdateTunnel(org.onosproject.incubator.net.tunnel.Tunnel,org.onosproject.incubator.net.tunnel.Tunnel$State)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations%5B%5D)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore/lambda$updateMeterState$12(org.onosproject.net.meter.Meter,org.onosproject.net.meter.MeterKey,org.onosproject.incubator.store.meter.impl.MeterData)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelName,org.onosproject.net.Annotations%5B%5D)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/internalRelease(org.onosproject.incubator.net.resource.label.LabelResourceRequest)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/queryTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore/deleteMeter(org.onosproject.net.meter.Meter)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/addLink(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint,org.onosproject.net.Link$State,org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/store/mcast/impl/DistributedMcastStore/activate()
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/destroyDevicePool(org.onosproject.net.DeviceId)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/internalApply(org.onosproject.incubator.net.resource.label.LabelResourceRequest)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore$InternalMapEventListener/event(org.onosproject.store.service.MapEvent)
org/onosproject/incubator/store/routing/impl/LocalRouteStore$RouteTable/update(org.onosproject.incubator.net.routing.Route)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/activate()
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/releaseToDevicePool(com.google.common.collect.Multimap)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/applyFromDevicePool(org.onosproject.net.DeviceId,long)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore$InternalTunnelChangeEventListener/event(org.onosproject.store.service.EventuallyConsistentMapEvent)
org/onosproject/incubator/store/routing/impl/LocalRouteStore/updateNextHop(org.onlab.packet.IpAddress,org.onlab.packet.MacAddress)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore/updateMeter(org.onosproject.net.meter.Meter)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore/activate()
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/addPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,org.onosproject.net.PortNumber,org.onosproject.net.Port)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/addNetwork(org.onosproject.incubator.net.virtual.TenantId)
org/onosproject/incubator/store/mcast/impl/DistributedMcastStore$McastMapListener/event(org.onosproject.store.service.MapEvent)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/activate()
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations%5B%5D)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/queryTunnel(org.onosproject.incubator.net.tunnel.Tunnel$Type)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/releaseToGlobalPool(java.util.Set)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore$InternalMapListener/event(org.onosproject.store.service.MapEvent)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/create(org.onosproject.incubator.net.resource.label.LabelResourcePool)
