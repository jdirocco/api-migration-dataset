org/onosproject/net/intent/impl/ObjectiveTracker/doIntentUpdate()
org/onosproject/net/proxyarp/impl/ProxyArpManager/flood(org.onlab.packet.Ethernet,org.onosproject.net.ConnectPoint)
org/onosproject/cfg/impl/ComponentConfigManager/triggerUpdate(java.lang.String)
org/onosproject/net/intent/impl/ObjectiveTracker/lambda$updateTrackedResources$20(org.onosproject.core.ApplicationId,boolean,org.onosproject.net.intent.Intent)
org/onosproject/net/device/impl/DeviceManager$InternalDeviceProviderService/deviceDisconnected(org.onosproject.net.DeviceId)
org/onosproject/net/resource/impl/LinkResourceManager/requestResources(org.onosproject.net.resource.link.LinkResourceRequest)
org/onosproject/net/flow/impl/FlowRuleManager$FlowOperationsProcessor/process(java.util.Set)
org/onosproject/net/flow/impl/FlowRuleManager$InternalFlowRuleProviderService/pushFlowMetrics(org.onosproject.net.DeviceId,java.lang.Iterable)
org/onosproject/net/intent/impl/compiler/OpticalConnectivityIntentCompiler/checkWavelengthContinuity(org.onosproject.net.resource.link.LinkResourceAllocations,org.onosproject.net.Path)
org/onosproject/net/flow/impl/FlowRuleManager$InternalFlowRuleProviderService/checkRuleLiveness(org.onosproject.net.flow.FlowEntry,org.onosproject.net.flow.FlowEntry)
org/onosproject/net/intent/impl/compiler/MultiPointToSinglePointIntentCompiler/compile(org.onosproject.net.intent.MultiPointToSinglePointIntent,java.util.List,java.util.Set)
org/onosproject/net/flow/impl/FlowRuleManager$InternalFlowRuleProviderService/flowRemoved(org.onosproject.net.flow.FlowEntry)
org/onosproject/net/host/impl/HostMonitor/sendArpNdpRequest(org.onlab.packet.IpAddress)
org/onosproject/net/statistic/impl/StatisticManager/min(org.onosproject.net.Path)
org/onosproject/net/intent/impl/compiler/MplsPathIntentCompiler/generateRules(org.onosproject.net.intent.MplsPathIntent,org.onosproject.net.resource.link.LinkResourceAllocations)
org/onosproject/net/intent/impl/IntentManager/applyIntentData(java.util.Optional,org.onosproject.net.flow.FlowRuleOperations$Builder,org.onosproject.net.intent.impl.IntentManager$Direction)
org/onosproject/net/flow/impl/FlowRuleManager$InternalFlowRuleProviderService/flowMissing(org.onosproject.net.flow.FlowEntry)
org/onosproject/net/proxyarp/impl/ProxyArpManager/replyNdp(org.onlab.packet.Ethernet,org.onosproject.net.ConnectPoint)
org/onosproject/net/proxyarp/impl/ProxyArpManager$InternalLinkListener/event(org.onosproject.net.link.LinkEvent)
org/onosproject/net/statistic/impl/StatisticManager/max(org.onosproject.net.Path)
org/onosproject/app/impl/ApplicationManager$InternalStoreDelegate/notify(org.onosproject.app.ApplicationEvent)
org/onosproject/net/packet/impl/PacketManager$InternalDeviceListener/lambda$event$24(org.onosproject.net.device.DeviceEvent)
org/onosproject/net/proxyarp/impl/ProxyArpManager/buildNdpReply(org.onlab.packet.Ip6Address,org.onlab.packet.MacAddress,org.onlab.packet.Ethernet)
org/onosproject/net/intent/impl/ObjectiveTracker$TopologyChangeHandler/run()
org/onosproject/net/intent/impl/IntentCleanup/modified(org.osgi.service.component.ComponentContext)
org/onosproject/net/intent/impl/compiler/OpticalPathIntentCompiler/createReverseRules(org.onosproject.net.intent.OpticalPathIntent)
org/onosproject/net/intent/impl/IntentManager$1/onError(org.onosproject.net.flow.FlowRuleOperations)
org/onosproject/net/intent/impl/compiler/PathIntentCompiler/compile(org.onosproject.net.intent.PathIntent,java.util.List,java.util.Set)
org/onosproject/net/intent/impl/compiler/OpticalCircuitIntentCompiler/connectPorts(org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)
org/onosproject/net/intent/impl/IntentManager/apply(java.util.Optional,java.util.Optional)
org/onosproject/net/intent/impl/IntentCleanup/resubmitCorrupt(org.onosproject.net.intent.IntentData,boolean)
org/onosproject/cfg/impl/ComponentConfigManager/loadExistingValues(java.lang.String)
org/onosproject/net/proxyarp/impl/ProxyArpManager/findPortsInSubnet(org.onlab.packet.IpAddress)
org/onosproject/net/topology/impl/PathManager/getPaths(org.onosproject.net.ElementId,org.onosproject.net.ElementId,org.onosproject.net.topology.LinkWeight)
org/onosproject/net/packet/impl/PacketManager/pushRule(org.onosproject.net.Device,org.onosproject.net.packet.PacketRequest)
org/onosproject/net/intent/impl/compiler/OpticalConnectivityIntentCompiler/staticPort(org.onosproject.net.ConnectPoint)
org/onosproject/net/intent/impl/compiler/MplsIntentCompiler/createPathIntent(org.onosproject.net.Path,org.onosproject.net.intent.MplsIntent)
org/onosproject/net/device/impl/DeviceManager$InternalDeviceProviderService/lambda$deviceDisconnected$22(org.onosproject.net.DeviceId,org.onosproject.net.MastershipRole,java.lang.Throwable)
org/onosproject/net/intent/impl/compiler/LinkCollectionIntentCompiler/compile(org.onosproject.net.intent.LinkCollectionIntent,java.util.List,java.util.Set)
org/onosproject/net/intent/impl/phase/Compiling/execute()
org/onosproject/net/intent/impl/compiler/OpticalConnectivityIntentCompiler$1/weight(org.onosproject.net.topology.TopologyEdge)
org/onosproject/net/host/impl/HostMonitor/buildNdpRequest(org.onlab.packet.IpAddress,org.onlab.packet.IpAddress,org.onlab.packet.MacAddress,org.onlab.packet.VlanId)
org/onosproject/net/intent/impl/compiler/MplsPathIntentCompiler/transitFlow(org.onosproject.net.PortNumber,org.onosproject.net.Link,org.onosproject.net.intent.MplsPathIntent,org.onosproject.net.resource.link.MplsLabel,org.onosproject.net.resource.link.MplsLabel)
org/onosproject/net/intent/impl/ObjectiveTracker/trackIntent(org.onosproject.net.intent.IntentData)
org/onosproject/net/intent/impl/compiler/OpticalCircuitIntentCompiler/staticPort(org.onosproject.net.ConnectPoint)
org/onosproject/net/flowobjective/impl/FlowObjectiveManager/setupPipelineHandler(org.onosproject.net.DeviceId)
org/onosproject/net/intent/impl/compiler/PointToPointIntentCompiler/compile(org.onosproject.net.intent.PointToPointIntent,java.util.List,java.util.Set)
org/onosproject/net/intent/impl/compiler/OpticalConnectivityIntentCompiler/compile(org.onosproject.net.intent.OpticalConnectivityIntent,java.util.List,java.util.Set)
org/onosproject/net/intent/impl/IntentManager$1/onSuccess(org.onosproject.net.flow.FlowRuleOperations)
org/onosproject/net/intent/impl/compiler/PointToPointIntentCompiler/createPathIntent(org.onosproject.net.Path,org.onosproject.net.intent.PointToPointIntent)
org/onosproject/net/proxyarp/impl/ProxyArpManager/sendTo(org.onlab.packet.Ethernet,org.onosproject.net.ConnectPoint)
org/onosproject/cfg/impl/ConfigPropertyDefinitions/read(java.io.InputStream)
org/onosproject/net/intent/impl/compiler/OpticalPathIntentCompiler/createRules(org.onosproject.net.intent.OpticalPathIntent)
org/onosproject/net/device/impl/DeviceManager$InternalDeviceProviderService/updatePorts(org.onosproject.net.DeviceId,java.util.List)
org/onosproject/cluster/impl/MastershipManager/setRole(org.onosproject.cluster.NodeId,org.onosproject.net.DeviceId,org.onosproject.net.MastershipRole)
org/onosproject/cfg/impl/ComponentConfigManager/registerProperties(java.lang.Class)
org/onosproject/net/flow/impl/FlowRuleManager/getFlowRulesById(org.onosproject.core.ApplicationId)
org/onosproject/net/intent/impl/compiler/OpticalCircuitIntentCompiler/findOpticalConnectivityIntent(org.onosproject.net.intent.OpticalCircuitIntent)
org/onosproject/net/intent/impl/compiler/PathIntentCompiler/createFlowRule(org.onosproject.net.flow.TrafficSelector,org.onosproject.net.flow.TrafficTreatment,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint,boolean)
org/onosproject/net/device/impl/DeviceManager$InternalDeviceProviderService/deviceConnected(org.onosproject.net.DeviceId,org.onosproject.net.device.DeviceDescription)
org/onosproject/net/proxyarp/impl/ProxyArpManager/replyArp(org.onlab.packet.Ethernet,org.onosproject.net.ConnectPoint)
org/onosproject/net/intent/impl/compiler/MplsPathIntentCompiler/egressFlow(org.onosproject.net.PortNumber,org.onosproject.net.Link,org.onosproject.net.intent.MplsPathIntent,org.onosproject.net.resource.link.MplsLabel)
org/onosproject/event/impl/CoreEventDispatcher$Watchdog/run()
org/onosproject/net/intent/impl/compiler/HostToHostIntentCompiler/createPathIntent(org.onosproject.net.Path,org.onosproject.net.Host,org.onosproject.net.Host,org.onosproject.net.intent.HostToHostIntent)
org/onosproject/net/flow/impl/FlowRuleManager$InternalStoreDelegate/notify(org.onosproject.net.flow.FlowRuleBatchEvent)
org/onosproject/net/intent/impl/compiler/LinkCollectionIntentCompiler/createRules(org.onosproject.net.intent.LinkCollectionIntent,org.onosproject.net.DeviceId,java.util.Set,java.util.Set)
org/onosproject/net/intent/impl/IntentCleanup/cleanup()
org/onosproject/net/link/impl/LinkManager/removeLinks(java.util.Set,boolean)
org/onosproject/net/device/impl/DeviceManager/handleMastershipEvent(org.onosproject.mastership.MastershipEvent)
org/onosproject/net/intent/impl/compiler/OpticalCircuitIntentCompiler/compile(org.onosproject.net.intent.OpticalCircuitIntent,java.util.List,java.util.Set)
org/onosproject/net/intent/impl/compiler/HostToHostIntentCompiler/invertPath(org.onosproject.net.Path)
org/onosproject/net/flow/impl/FlowRuleManager$FlowOperationsProcessor/fail(org.onosproject.net.DeviceId,java.util.Set)
org/onosproject/net/group/impl/GroupManager$InternalGroupStoreDelegate/notify(org.onosproject.net.group.GroupEvent)
org/onosproject/net/host/impl/HostMonitor/run(org.jboss.netty.util.Timeout)
org/onosproject/net/intent/impl/compiler/TwoWayP2PIntentCompiler/compile(org.onosproject.net.intent.TwoWayP2PIntent,java.util.List,java.util.Set)
org/onosproject/net/flowobjective/impl/FlowObjectiveManager$InternalStoreDelegate/notify(org.onosproject.net.flowobjective.ObjectiveEvent)
org/onosproject/net/flowobjective/impl/FlowObjectiveManager$ObjectiveInstaller/run()
org/onosproject/net/device/impl/DeviceManager/activate()
org/onosproject/net/intent/impl/compiler/MplsPathIntentCompiler/ingressFlow(org.onosproject.net.PortNumber,org.onosproject.net.Link,org.onosproject.net.intent.MplsPathIntent,org.onosproject.net.resource.link.MplsLabel)
org/onosproject/cluster/impl/MastershipManager/balanceRoles()
org/onosproject/net/host/impl/HostMonitor/sendArpNdpProbe(org.onosproject.net.DeviceId,org.onosproject.net.Port,org.onlab.packet.IpAddress,org.onlab.packet.IpAddress,org.onlab.packet.MacAddress,org.onlab.packet.VlanId)
org/onosproject/cluster/impl/MastershipManager/balanceBuckets(org.onosproject.cluster.ControllerNode,org.onosproject.cluster.ControllerNode,java.util.Map,int)
org/onosproject/net/device/impl/DeviceManager$InternalDeviceProviderService/portStatusChanged(org.onosproject.net.DeviceId,org.onosproject.net.device.PortDescription)
org/onosproject/event/impl/CoreEventDispatcher$DispatchLoop/process(org.onosproject.event.Event)
org/onosproject/net/proxyarp/impl/ProxyArpManager$InternalDeviceListener/event(org.onosproject.net.device.DeviceEvent)
org/onosproject/net/host/impl/HostMonitor/buildArpRequest(org.onlab.packet.IpAddress,org.onlab.packet.IpAddress,org.onlab.packet.MacAddress,org.onlab.packet.VlanId)
org/onosproject/net/device/impl/DeviceManager/reassertRole(org.onosproject.net.DeviceId,org.onosproject.net.MastershipRole)
org/onosproject/net/flow/impl/FlowRuleManager/getFlowRulesByGroupId(org.onosproject.core.ApplicationId,short)
org/onosproject/net/intent/impl/IntentManager/activate()
org/onosproject/net/proxyarp/impl/ProxyArpManager/forward(org.onlab.packet.Ethernet,org.onosproject.net.ConnectPoint)
org/onosproject/net/statistic/impl/StatisticManager/load(org.onosproject.net.Link,org.onosproject.core.ApplicationId,java.util.Optional)
org/onosproject/net/resource/impl/LinkResourceManager/getAvailableMplsLabels(org.onosproject.net.Link)
org/onosproject/net/intent/impl/compiler/MplsIntentCompiler/compile(org.onosproject.net.intent.MplsIntent,java.util.List,java.util.Set)
org/onosproject/net/intent/impl/compiler/MplsPathIntentCompiler/assignMplsLabel(org.onosproject.net.intent.MplsPathIntent)
org/onosproject/net/resource/impl/LinkResourceManager/getAvailableResources(org.onosproject.net.Link)
org/onosproject/net/intent/impl/ObjectiveTracker/ObjectiveTracker()
org/onosproject/net/proxyarp/impl/ProxyArpManager/determinePortLocations()
org/onosproject/net/intent/impl/compiler/SinglePointToMultiPointIntentCompiler/compile(org.onosproject.net.intent.SinglePointToMultiPointIntent,java.util.List,java.util.Set)
org/onosproject/net/resource/impl/LinkResourceManager/getAvailableLambdas(org.onosproject.net.Link)
org/onosproject/net/intent/impl/IntentManager$IntentBatchProcess/waitForFutures(java.util.List)
