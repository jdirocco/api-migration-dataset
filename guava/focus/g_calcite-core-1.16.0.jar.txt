org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/List/isEmpty()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/build()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/next()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Set/iterator()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Collection/iterator()
org/apache/calcite/jdbc/SimpleCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap/containsKey(java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/rel/rules/AggregateReduceFunctionsRule/reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#java/util/Map/get(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#java/sql/Connection/close()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#java/util/IdentityHashMap/IdentityHashMap()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#java/sql/DatabaseMetaData/getDatabaseProductVersion()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#java/sql/DatabaseMetaData/getDatabaseProductName()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#javax/sql/DataSource/getConnection()
org/apache/calcite/adapter/jdbc/JdbcUtils$DialectPool/get(org.apache.calcite.sql.SqlDialectFactory,javax.sql.DataSource)#java/sql/Connection/getMetaData()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/Map/values()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/Map/isEmpty()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rex/RexUtil$CnfHelper/pull(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil$CnfHelper/toCnf2(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/util/ArrayList/ArrayList()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/ReflectUtil$2/lookupMethod(java.lang.Object)#java/lang/Object/getClass()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/volcano/RelSubset/getRowType()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexPermuteInputsShuttle/visitList(java.util.List,java.util.List)
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/plan/volcano/RelSubset/getConvention()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/JoinAssociateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#org/apache/calcite/sql/SqlKind/reverse()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/splitJoinCondition(java.util.List,java.util.List,org.apache.calcite.rex.RexNode,java.util.List,java.util.List,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/List/equals(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$Side/of(org.apache.calcite.util.ImmutableBitSet,int)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptUtil$Side/ordinal()
org/apache/calcite/plan/RelOptUtil/pushDownEqualJoinConditions(org.apache.calcite.rex.RexNode,int,int,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/RelOptUtil/inferViewPredicates(java.util.Map,java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/util/Map$Entry/getKey()
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/util/Set/iterator()
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#com/google/common/collect/Multimap/asMap()
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/util/Map$Entry/getValue()
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/util/Map/entrySet()
org/apache/calcite/plan/RelOptUtil/findAllTables(org.apache.calcite.rel.RelNode)#java/util/Collection/iterator()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/removeAll(java.util.Collection)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/RelOptUtil/classifyFilters(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.rel.core.JoinRelType,boolean,boolean,boolean,java.util.List,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/lang/Integer/intValue()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/createProjectJoinRel(java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createRenameRel(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptUtil$SubQueryType/ordinal()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/RelOptUtil/createExistsPlan(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelOptUtil$SubQueryType,org.apache.calcite.plan.RelOptUtil$Logic,boolean)#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/util/mapping/Mapping/getSource(int)
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/util/mapping/MappingType/isSingleSource()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/projectMapping(org.apache.calcite.rel.RelNode,org.apache.calcite.util.mapping.Mapping,java.util.List,org.apache.calcite.rel.core.RelFactories$ProjectFactory)#org/apache/calcite/util/mapping/MappingType/isMandatorySource()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/List/size()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/BitSet/BitSet(int)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getRowType()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/List/iterator()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/lang/Integer/intValue()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/BitSet/set(int)
org/apache/calcite/plan/RelOptUtil/projectMultiJoin(org.apache.calcite.rel.rules.MultiJoin,org.apache.calcite.rel.logical.LogicalProject)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/JoinRelType/cancelNullsOnRight()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#org/apache/calcite/rel/core/JoinRelType/cancelNullsOnLeft()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/RelOptUtil/simplifyJoin(org.apache.calcite.rel.RelNode,com.google.common.collect.ImmutableList,org.apache.calcite.rel.core.JoinRelType)#java/util/List/get(int)
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Set/size()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/Set/iterator()
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/getVariablesSetAndUsed(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/deduplicateColumns(java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptUtil/deduplicateColumns(java.util.List,java.util.List)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/plan/RelOptUtil/deduplicateColumns(java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptUtil/deduplicateColumns(java.util.List,java.util.List)#java/lang/Iterable/iterator()
org/apache/calcite/plan/RelOptUtil/deduplicateColumns(java.util.List,java.util.List)#java/util/HashSet/HashSet()
org/apache/calcite/plan/RelOptUtil/deduplicateColumns(java.util.List,java.util.List)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/plan/RelOptUtil/deduplicateColumns(java.util.List,java.util.List)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/deduplicateColumns(java.util.List,java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/RelOptUtil/deduplicateColumns(java.util.List,java.util.List)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Deque/pop()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/Deque/isEmpty()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/isDependent(org.apache.calcite.util.graph.DirectedGraph,java.util.List,int,int)#java/util/List/get(int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/List/size()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/Set/iterator()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#com/google/common/collect/Sets/newHashSet(java.lang.Object[])
org/apache/calcite/rel/rules/ProjectToWindowRule$WindowedAggRelSplitter/getCohorts()#java/util/List/get(int)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/math/BigDecimal/BigDecimal(double,java.math.MathContext)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Long/longValue()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/nio/charset/Charset/name()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/math/BigDecimal/stripTrailingZeros()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/util/Calendar/getTimeZone()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/math/BigDecimal/BigDecimal(long)
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/intValue()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Number/doubleValue()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Number/longValue()
org/apache/calcite/rex/RexBuilder/clean(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/signum()
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/divide(java.math.BigDecimal,java.math.RoundingMode)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexBuilder/multiplyDivide(org.apache.calcite.rex.RexNode,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Iterator/next()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/List/iterator()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Map$Entry/getKey()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Set/iterator()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Map$Entry/getValue()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#java/util/Map/entrySet()
org/apache/calcite/rex/RexBuilder/makeLiteral(java.lang.Object,org.apache.calcite.rel.type.RelDataType,boolean)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigDecimal/scale()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigDecimal/unscaledValue()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigInteger/abs()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigInteger/longValue()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/lang/AssertionError/AssertionError(int)
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigDecimal/equals(java.lang.Object)
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/lang/String/length()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigInteger/toString()
org/apache/calcite/rex/RexBuilder/makeExactLiteral(java.math.BigDecimal)#java/math/BigDecimal/valueOf(long,int)
org/apache/calcite/util/CompositeMap/combinedMap()#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Iterator/hasNext()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/util/CompositeMap/combinedMap()#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Set/iterator()
org/apache/calcite/util/CompositeMap/combinedMap()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Iterator/next()
org/apache/calcite/util/CompositeMap/combinedMap()#com/google/common/collect/ImmutableMap$Builder/put(java.util.Map$Entry)
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Map/entrySet()
org/apache/calcite/util/CompositeMap/combinedMap()#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/Iterator/hasNext()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/List/size()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/Iterator/next()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#org/apache/calcite/util/PrecedenceClimbingParser$Type/ordinal()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql/parser/SqlParserUtil/convert(org.apache.calcite.util.PrecedenceClimbingParser$Token)#java/util/List/get(int)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/String/length()
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/math/BigInteger/BigInteger(java.lang.String,int)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/math/BigInteger/toByteArray()
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/parser/SqlParserUtil/parseBinaryString(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#org/apache/calcite/avatica/util/Casing/ordinal()
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/substring(int,int)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/endsWith(java.lang.String)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/calcite/sql/parser/SqlParserUtil/strip(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.calcite.avatica.util.Casing)#java/lang/String/length()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableUnion/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableUnion/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/JoinCommuteRule$VariableReplacer/go(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#org/apache/calcite/linq4j/tree/Expressions/multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/divide(java.math.BigDecimal,java.math.RoundingMode)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#org/apache/calcite/linq4j/tree/Expressions/divide(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/multiplyDivide(org.apache.calcite.linq4j.tree.Expression,java.math.BigDecimal,java.math.BigDecimal)#java/math/BigDecimal/intValueExact()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expressions/foldOr(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/adapter/enumerable/NullPolicy/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expressions/box(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#org/apache/calcite/linq4j/tree/Expressions/foldAnd(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/HashMap/HashMap()
org/apache/calcite/adapter/enumerable/RexImpTable/implementNullSemantics(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,org.apache.calcite.adapter.enumerable.NullPolicy,org.apache.calcite.adapter.enumerable.NotNullImplementor)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#java/util/List/isEmpty()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#java/util/Set/removeAll(java.util.Collection)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#java/util/Map/values()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#java/util/Set/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerMaterializations()#org/apache/calcite/plan/Context/unwrap(java.lang.Class)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/io/PrintWriter/flush()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/io/StringWriter/StringWriter()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/io/StringWriter/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/HashSet/HashSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenance(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/VolcanoPlanner$2/go(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/io/PrintWriter/println(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#org/apache/calcite/avatica/util/Spaces/append(java.io.PrintWriter,int)
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/provenanceRecurse(java.io.PrintWriter,org.apache.calcite.rel.RelNode,int,java.util.Set)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/io/PrintWriter/println()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RelSubset/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(double)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#com/google/common/collect/Ordering/from(java.util.Comparator)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/RelNode/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#com/google/common/collect/Ordering/immutableSortedCopy(java.lang.Iterable)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RelSubset/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RelSubset/getRowType()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/dump(java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/VolcanoPlanner/registerClass(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#com/google/common/collect/ImmutableList/copyOf(java.lang.Object[])
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Deque/peek()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/Double/valueOf(double)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getDigest()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/List/size()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Deque/isEmpty()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSubset/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/registerImpl(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.volcano.RelSet)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object[])
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoRuleMatch/onMatch()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlannerPhase/values()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/io/PrintWriter/flush()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/io/StringWriter/StringWriter()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoPlannerPhase/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/lang/Math/max(int,int)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/io/StringWriter/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/apache/calcite/plan/volcano/VolcanoRuleMatch/getRule()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/plan/volcano/VolcanoPlanner/findBestExp()#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Set/size()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/volcano/VolcanoPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#org/apache/calcite/plan/volcano/VolcanoPlanner/subClasses(java.lang.Class)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#com/google/common/collect/SetMultimap/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/lang/Object/getClass()
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#com/google/common/collect/SetMultimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/addRule(org.apache.calcite.plan.RelOptRule)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/volcano/AbstractConverter/getInput()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#com/google/common/collect/ImmutableList/size()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/volcano/RelSubset/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/ensureRootConverters()#org/apache/calcite/plan/volcano/RelSubset/getCluster()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#com/google/common/collect/Multimap/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#com/google/common/collect/SetMultimap/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/IdentityHashMap/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/List/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#java/util/Map/clear()
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/plan/volcano/VolcanoPlanner/clear()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#org/apache/calcite/rel/RelNode/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#org/apache/calcite/plan/volcano/RelSubset/getDescription()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/validate()#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getDigest()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object[])
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/IdentityHashMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/RelSubset/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/List/remove(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoPlanner/rename(org.apache.calcite.rel.RelNode)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/util/regex/Matcher/find()
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/util/regex/Matcher/group()
org/apache/calcite/plan/volcano/VolcanoPlanner/normalizePlan(java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Object/toString()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/size()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getInput()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCorrelate/getCluster()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/of(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableMinus/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableMinus/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/interpreter/JoinNode/run()#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/interpreter/JoinNode/run()#java/util/Iterator/next()
org/apache/calcite/interpreter/JoinNode/run()#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/JoinNode/run()#java/lang/Boolean/booleanValue()
org/apache/calcite/interpreter/JoinNode/run()#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/interpreter/JoinNode/run()#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/interpreter/JoinNode/run()#java/util/List/iterator()
org/apache/calcite/interpreter/JoinNode/run()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/List/contains(java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#org/apache/calcite/sql/SqlSyntax/ordinal()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/util/Collection/isEmpty()
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/util/ReflectiveSqlOperatorTable/lookupOperatorOverloads(org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.sql.SqlFunctionCategory,org.apache.calcite.sql.SqlSyntax,java.util.List)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/ThreadLocal/get()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SequenceImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/clear()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/entrySet()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/SortedSet/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/LinkedListMultimap/create()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Collection/isEmpty()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelFieldCollation$Direction/of(org.apache.calcite.sql.validate.SqlMonotonicity)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/sql/validate/SqlMonotonicity/ordinal()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/util/TreeSet/TreeSet()
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdCollation/project(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#com/google/common/collect/ImmutableMap/entrySet()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rel/rules/ReduceExpressionsRule$RexReplacer/mutate(java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/iterator()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#com/google/common/collect/ImmutableMap/isEmpty()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#org/apache/calcite/rel/rules/ReduceExpressionsRule$CaseShuttle/mutate(java.util.List)
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/ReduceExpressionsRule/reduceExpressionsInternal(org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexSimplify,java.util.List,org.apache.calcite.plan.RelOptPredicateList)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeCase(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeDivide(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/powerOfTen(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/decodeValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makePlus(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeExactLiteral(long)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeIsNegative(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$FloorExpander/makeScaleFactor(int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableSet/first()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/navigableKeySet()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/size()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/keySet()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/isEmpty()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/TreeMap/TreeMap()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/containsKey(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/containsKey(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/remove(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateProjectPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/NavigableMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#java/lang/String/charAt(int)
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#java/lang/String/length()
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#org/apache/calcite/runtime/GeoFunctions$JoinStyle/of(java.lang.String)
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#java/lang/Integer/valueOf(java.lang.String)
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#java/lang/Integer/intValue()
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#java/lang/String/hashCode()
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#java/lang/String/indexOf(int,int)
org/apache/calcite/runtime/GeoFunctions/ST_Buffer(org.apache.calcite.runtime.GeoFunctions$Geom,double,java.lang.String)#org/apache/calcite/runtime/GeoFunctions$CapStyle/of(java.lang.String)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/validate/AliasNamespace/translate(java.lang.String)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/transform(java.util.List,com.google.common.base.Function)
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil$DnfHelper/toDnf(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getInputs()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getCondition()
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/enumerable/EnumerableSemiJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/entrySet()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/values()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Lists/newArrayList(java.lang.Object[])
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getCluster()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates/getPredicates(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/JoinRelType/ordinal()
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/SemiJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Aggregate)#java/util/List/get(int)
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Iterator/hasNext()
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Map/get(java.lang.Object)
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/List/size()
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Iterator/next()
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#java/lang/Integer/valueOf(int)
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#java/util/List/iterator()
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/schema/impl/ModifiableViewTable/getNewColumnMapping(org.apache.calcite.schema.Table,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.rel.type.RelDataTypeFactory)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableUncollect/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/toArray(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/primitives/Ints/toArray(java.util.Collection)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableUncollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableUncollect/getInput()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(java.util.Collection)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/makeMultiply(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#java/math/BigDecimal/pow(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/makeApproxLiteral(java.math.BigDecimal)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/makeDivide(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/scaleDown(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/accessValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/expandTimes(org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/rel/rules/ReduceDecimalsRule$BinaryArithmeticExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/logical/LogicalProject/getCluster()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/core/SemiJoin/getSystemFieldList()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/List/get(int)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/logical/LogicalProject/getNamedProjects()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/core/SemiJoin/getCondition()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/core/SemiJoin/getRight()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/List/size()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#java/util/List/iterator()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/adjustCondition(org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.core.SemiJoin)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getLeftKeys()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRightKeys()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRight()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/SemiJoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/Long/longValue()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/doubleValue()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/intValue()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/Double/valueOf(double)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/Long/valueOf(long)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/Byte/valueOf(byte)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/longValue()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/Short/valueOf(short)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/Float/valueOf(float)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/Class/cast(java.lang.Object)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/unscaledValue()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/floatValue()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/shortValue()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/math/BigInteger/longValue()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/byteValue()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/math/BigDecimal/negate()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/Long/valueOf(long)
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlLiteral/value(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/String/charAt(int)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/String/length()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#org/apache/calcite/sql/SqlLiteral/getParserPosition()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/StringBuilder/append(char)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/Integer/parseInt(java.lang.String,int)
org/apache/calcite/sql/SqlLiteral/unescapeUnicode(char)#java/lang/String/substring(int,int)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/lang/Boolean/booleanValue()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rex/RexUtil$ExprSimplifier/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/lowerBoundType()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/atMost(java.lang.Comparable)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/greaterThan(java.lang.Comparable)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/lessThan(java.lang.Comparable)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/upperEndpoint()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/hasLowerBound()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/util/Collections/replaceAll(java.util.List,java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/upperBoundType()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/singleton(java.lang.Comparable)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/lang/Comparable/compareTo(java.lang.Object)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/isEmpty()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/util/Iterator/next()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/atLeast(java.lang.Comparable)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/util/List/iterator()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/contains(java.lang.Comparable)
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/lowerEndpoint()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#com/google/common/collect/Range/hasUpperBound()
org/apache/calcite/rex/RexSimplify/processRange(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.Map,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.lang.Comparable,org.apache.calcite.sql.SqlKind)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexLiteral/toString()
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/List/size()
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/List/iterator()
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/HashSet/HashSet()
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/Set/size()
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/Iterator/next()
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rex/RexSimplify/simplifyCase(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#org/apache/calcite/rex/RexLiteral/toString()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/List/size()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/List/remove(int)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#com/google/common/collect/Multimap/keySet()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Collections/disjoint(java.util.Collection,java.util.Collection)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/List/isEmpty()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#com/google/common/collect/ArrayListMultimap/create()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Iterator/next()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/HashMap/HashMap()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Set/containsAll(java.util.Collection)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Set/iterator()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/List/get(int)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/List/iterator()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Collection/iterator()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/HashSet/HashSet()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/List/remove(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyAnd2ForUnknownAsFalse(java.util.List,java.util.List,java.lang.Class)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/Strong$Policy/ordinal()
org/apache/calcite/rex/RexSimplify/simplifyIsNotNull(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#com/google/common/collect/Range/all()
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#java/util/Iterator/next()
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#com/google/common/collect/Range/encloses(com.google.common.collect.Range)
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#java/util/List/iterator()
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#com/google/common/collect/Range/isConnected(com.google.common.collect.Range)
org/apache/calcite/rex/RexSimplify/residue(org.apache.calcite.rex.RexNode,com.google.common.collect.Range,java.util.List,java.lang.Class)#com/google/common/collect/Range/intersection(com.google.common.collect.Range)
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/negateNullSafe()
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#java/util/Iterator/next()
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#java/util/List/iterator()
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/negate()
org/apache/calcite/rex/RexSimplify/simplifyNot(org.apache.calcite.rex.RexCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Constructor,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Types/of(java.lang.reflect.Type,java.lang.reflect.Type[])
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCalc/getInput()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/block(org.apache.calcite.linq4j.tree.Statement[])
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/while_(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCalc/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Blocks/toFunctionBlock(org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/fieldDecl(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCalc/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement,boolean)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCalc/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/BiRel/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/util/List/size()
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Join/isValid(org.apache.calcite.util.Litmus,org.apache.calcite.rel.RelNode$Context)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/setExtendedClass(java.lang.Class)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/setImplementedInterfaces(java.lang.Class[])
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/Class/getConstructor(java.lang.Class[])
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/getClazz()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/cook(org.codehaus.janino.Scanner)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/ClassBodyEvaluator()
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/setClassName(java.lang.String)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/ClassBodyEvaluator/setParentClassLoader(java.lang.ClassLoader)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#org/codehaus/janino/Scanner/Scanner(java.lang.String,java.io.Reader)
org/apache/calcite/rex/RexExecutable/compile(java.lang.String,java.lang.Object)#java/lang/Class/getClassLoader()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/linq4j/function/Function1/apply(java.lang.Object)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Arrays/asList(java.lang.Object[])
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rex/RexExecutable/reduce(org.apache.calcite.rex.RexBuilder,java.util.List,java.util.List)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExtractProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/Object/toString()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/util/List/toArray()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/util/Arrays/toString(java.lang.Object[])
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#org/apache/calcite/runtime/Resources$ExInst/ex(java.lang.Throwable)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/Class/getConstructor(java.lang.Class[])
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/getModifiers()
org/apache/calcite/schema/impl/TableFunctionImpl/apply(java.util.List)#java/lang/reflect/Method/toString()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/Class/forName(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/typeNameToClass(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexSlot/getName()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlFunctionCategory/isUserDefined()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/Class/getName()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeName/name()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexCorrelVariable/getName()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rex.RexNode)#java/lang/Object/getClass()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/allowsPrec()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/allowsScale()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/type/SqlTypeName/name()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/Integer/intValue()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/List/get(int)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/Number/longValue()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/Number/doubleValue()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/math/BigDecimal/valueOf(double)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toRex(org.apache.calcite.rel.RelInput,java.lang.Object)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/Class/getCanonicalName()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/lang/Object/getClass()
org/apache/calcite/rel/externalize/RelJson/toJson(java.lang.Object)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#org/apache/calcite/rel/RelFieldCollation$Direction/name()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJson/toJson(org.apache.calcite.rel.RelCollationImpl)#org/apache/calcite/rel/RelFieldCollation$NullDirection/name()
org/apache/calcite/rel/core/AggregateCall/toString()#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/AggregateCall/toString()#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/calcite/rel/core/AggregateCall/toString()#java/util/Iterator/next()
org/apache/calcite/rel/core/AggregateCall/toString()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/AggregateCall/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/AggregateCall/toString()#org/apache/calcite/sql/SqlAggFunction/getName()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Set/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#com/google/common/collect/ArrayListMultimap/create()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Collection/isEmpty()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#com/google/common/collect/BiMap/inverse()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#com/google/common/base/Preconditions/checkArgument(boolean)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/generateMapping(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,org.apache.calcite.util.ImmutableBitSet,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/List/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Set/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/List/get(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/List/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/util/mapping/Mapping/inverse()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/util/mapping/Mapping/getTargetOpt(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/util/mapping/Mapping/getTarget(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/sql/SqlAggFunction/getKind()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#com/google/common/collect/ArrayListMultimap/create()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/rex/RexInputRef/toString()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/get(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewAggregateRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/TableNamespace/checkExtendedColumnTypes(org.apache.calcite.sql.SqlNodeList)#java/lang/Integer/intValue()
org/apache/calcite/sql/validate/TableNamespace/checkExtendedColumnTypes(org.apache.calcite.sql.SqlNodeList)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/sql/validate/TableNamespace/checkExtendedColumnTypes(org.apache.calcite.sql.SqlNodeList)#java/util/Iterator/next()
org/apache/calcite/sql/validate/TableNamespace/checkExtendedColumnTypes(org.apache.calcite.sql.SqlNodeList)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql/validate/TableNamespace/checkExtendedColumnTypes(org.apache.calcite.sql.SqlNodeList)#java/util/List/get(int)
org/apache/calcite/sql/validate/TableNamespace/checkExtendedColumnTypes(org.apache.calcite.sql.SqlNodeList)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/TableNamespace/checkExtendedColumnTypes(org.apache.calcite.sql.SqlNodeList)#com/google/common/collect/Iterables/find(java.lang.Iterable,com.google.common.base.Predicate)
org/apache/calcite/sql/validate/TableNamespace/checkExtendedColumnTypes(org.apache.calcite.sql.SqlNodeList)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/validate/TableNamespace/checkExtendedColumnTypes(org.apache.calcite.sql.SqlNodeList)#java/util/List/iterator()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getCluster()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getLeftKeys()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRightKeys()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRowType()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getCondition()
org/apache/calcite/rel/rules/SemiJoinJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SemiJoin/getRight()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/List/clear()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Correlate/getRight()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/rel/core/Correlate/getLeft()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#org/apache/calcite/sql/SemiJoinType/ordinal()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/RelMdColumnUniqueness/areColumnsUnique(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$UserDefinedAggReflectiveImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/get(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/util/List/size()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/AssertionError/AssertionError(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/util/List/get(int)
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#org/apache/calcite/rex/RexLocalRef/getType()
org/apache/calcite/rex/RexProgramBuilder$RegisterInputShuttle/visitLocalRef(org.apache.calcite.rex.RexLocalRef)#java/lang/StringBuilder/toString()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/List/size()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/Iterator/next()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/List/get(int)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/schema/Schemas/resolve(org.apache.calcite.rel.type.RelDataTypeFactory,java.lang.String,java.util.Collection,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/schema/Schemas/path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)#java/util/Iterator/hasNext()
org/apache/calcite/schema/Schemas/path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/schema/Schemas/path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)#java/util/Iterator/next()
org/apache/calcite/schema/Schemas/path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/schema/Schemas/path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)#java/lang/AssertionError/AssertionError()
org/apache/calcite/schema/Schemas/path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/schema/Schemas/path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/schema/Schemas/path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)#java/lang/String/isEmpty()
org/apache/calcite/schema/Schemas/path(org.apache.calcite.jdbc.CalciteSchema,java.lang.Iterable)#java/lang/Iterable/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#org/apache/calcite/rel/core/JoinRelType/ordinal()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/metadata/RelMdPredicates$JoinConditionBasedPredicateInference/inferPredicates(boolean)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/Character/toUpperCase(char)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/reflect/Method/getName()
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/String/substring(int)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/StringBuilder/append(char)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/StringBuilder/toString()
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/runtime/Resources$Element/deriveKey()#java/lang/String/charAt(int)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#com/google/common/collect/TreeRangeSet/create()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#com/google/common/collect/ImmutableRangeSet/complement()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#com/google/common/collect/RangeSet/add(com.google.common.collect.Range)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#com/google/common/collect/RangeSet/removeAll(com.google.common.collect.RangeSet)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#com/google/common/collect/RangeSet/complement()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#com/google/common/collect/ImmutableRangeSet/copyOf(com.google.common.collect.RangeSet)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#com/google/common/collect/Range/isEmpty()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareFloorCeil(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral,org.apache.calcite.avatica.util.TimeUnitRange,boolean)#com/google/common/collect/ImmutableRangeSet/of()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#java/util/Deque/peek()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#java/util/Map/putAll(java.util.Map)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#java/util/List/isEmpty()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#java/util/Iterator/next()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#java/util/Map/clear()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#java/util/List/iterator()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#com/google/common/collect/ImmutableMap/copyOf(java.util.Map)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/visitList(java.util.List,boolean[])#com/google/common/collect/ImmutableSortedSet/iterator()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/Range/hasLowerBound()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/TreeRangeSet/create()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/ImmutableRangeSet/complement()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Set/iterator()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/math/BigDecimal/intValue()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Calendar/set(int,int,int)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Calendar/clone()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/RangeSet/removeAll(com.google.common.collect.RangeSet)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/RangeSet/complement()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/ImmutableRangeSet/copyOf(com.google.common.collect.RangeSet)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/RangeSet/asRanges()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#org/apache/calcite/avatica/util/TimeUnitRange/ordinal()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Iterator/next()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#java/util/Calendar/clear()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/RangeSet/add(com.google.common.collect.Range)
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/ImmutableRangeSet/of()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/Range/lowerEndpoint()
org/apache/calcite/rel/rules/DateRangeRules$ExtractShuttle/compareExtract(org.apache.calcite.sql.SqlKind,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexLiteral)#com/google/common/collect/Range/hasUpperBound()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/getValue(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/List/size()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/convertArguments(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List,org.apache.calcite.schema.Function,org.apache.calcite.sql.SqlIdentifier,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/FunctionExpression/compile()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/util/Collections/emptyList()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.BlockStatement,java.lang.Iterable)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#java/lang/Object/getClass()
org/apache/calcite/sql/validate/SqlUserDefinedTableMacro/coerce(java.lang.Object,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/FunctionExpression$Invokable/dynamicInvoke(java.lang.Object[])
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/size()
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/get(int)
org/apache/calcite/sql/SqlSplittableAggFunction$AbstractSumSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getTraitSet()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getInput()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSets()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/interpreter/Bindables$BindableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/java/JavaTypeFactory/createJavaType(java.lang.Class)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Types/toClass(java.lang.reflect.Type)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Types/getElementType(java.lang.reflect.Type)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expression/getNodeType()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/util/List/get(int)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/util/BuiltInMethod/ordinal()
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/prepare/LixToRelTranslator/translate(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/sql/type/CompositeOperandTypeChecker$Composition/ordinal()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/util/Iterator/next()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/lang/Integer/intValue()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql/type/CompositeOperandTypeChecker/check(org.apache.calcite.sql.SqlCallBinding)#java/util/List/iterator()
org/apache/calcite/rel/core/Correlate/deriveRowType()#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/sql/SemiJoinType/ordinal()
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/calcite/rel/core/Correlate/deriveRowType()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Correlate/deriveRowType()#org/apache/calcite/rel/core/Correlate/getCluster()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCluster()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getTraitSet()
org/apache/calcite/plan/SubstitutionVisitor$FilterOnProjectRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Aggregate/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/Aggregate/deriveRowType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,boolean,org.apache.calcite.util.ImmutableBitSet,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/Class/getMethods()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#com/google/common/collect/ImmutableMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#org/apache/calcite/schema/impl/ScalarFunctionImpl/classHasPublicZeroArgsConstructor(java.lang.Class)
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/reflect/Method/getModifiers()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#com/google/common/collect/ImmutableMultimap/builder()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/reflect/Method/getName()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#com/google/common/collect/ImmutableMultimap$Builder/build()
org/apache/calcite/schema/impl/ScalarFunctionImpl/createAll(java.lang.Class)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/HashSet/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/HashSet/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalCorrelate/getCorrelationId()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRequiredColumns()
org/apache/calcite/sql2rel/RelDecorrelator$AdjustProjectForCountAggregateRule/onMatch2(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalAggregate)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/core/SemiJoin/getRightKeys()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Set/iterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#com/google/common/collect/Ordering/immutableSortedCopy(java.lang.Iterable)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/core/SemiJoin/getLeftKeys()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/keySet()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/chooseBestSemiJoin(org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rel/core/SemiJoin/getCondition()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/List/size()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/rules/LoptSemiJoinOptimizer$LcsTable/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/findSemiJoinIndexByCost(org.apache.calcite.rel.rules.LoptMultiJoin,java.util.List,int,int)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/ListIterator/remove()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/ListIterator/hasNext()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/List/remove(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/ListIterator/next()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/util/List/listIterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/validateKeys(org.apache.calcite.rel.RelNode,java.util.List,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Set/iterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/keySet()
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptSemiJoinOptimizer/makePossibleSemiJoins(org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/RelCollationImpl/toString()#java/util/Iterator/hasNext()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/RelCollationImpl/toString()#java/util/Iterator/next()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/RelCollationImpl/toString()#org/apache/calcite/rel/RelFieldCollation$Direction/defaultNullDirection()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/append(char)
org/apache/calcite/rel/RelCollationImpl/toString()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/toString()
org/apache/calcite/rel/RelCollationImpl/toString()#java/lang/StringBuilder/append(int)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/model/JsonSchema$Type/ordinal()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Set/iterator()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/String/substring(int)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Map/entrySet()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Map$Entry/getKey()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/String/length()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Iterator/next()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#org/apache/calcite/config/CalciteConnectionConfig/schema()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/Class/getName()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/lang/Object/getClass()
org/apache/calcite/jdbc/Driver$1/model(org.apache.calcite.jdbc.CalciteConnectionImpl)#java/util/Map$Entry/getValue()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonView)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonCustomTable)#java/util/Iterator/hasNext()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonCustomTable)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonCustomTable)#java/util/Iterator/next()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonCustomTable)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonCustomTable)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonCustomTable)#java/util/List/iterator()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonCustomTable)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonCustomTable)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonCustomTable)#org/apache/calcite/avatica/AvaticaUtils/instantiatePlugin(java.lang.Class,java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/append(int)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#org/apache/calcite/schema/SchemaPlus/getTableNames()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/util/Set/size()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/model/ModelHandler/visit(org.apache.calcite.model.JsonMaterialization)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#java/io/File/File(java.lang.String)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#org/apache/calcite/model/ModelHandler$ExtraOperand/ordinal()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#org/apache/calcite/model/ModelHandler$ExtraOperand/values()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#java/io/File/getParentFile()
org/apache/calcite/model/ModelHandler/operandMap(org.apache.calcite.model.JsonSchema,java.util.Map)#com/google/common/collect/ImmutableMap$Builder/putAll(java.util.Map)
org/apache/calcite/model/ModelHandler/checkRequiredAttributes(java.lang.Object,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/checkRequiredAttributes(java.lang.Object,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/checkRequiredAttributes(java.lang.Object,java.lang.String[])#java/lang/Object/getClass()
org/apache/calcite/model/ModelHandler/checkRequiredAttributes(java.lang.Object,java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/checkRequiredAttributes(java.lang.Object,java.lang.String[])#java/lang/Class/getField(java.lang.String)
org/apache/calcite/model/ModelHandler/checkRequiredAttributes(java.lang.Object,java.lang.String[])#java/lang/Class/getSimpleName()
org/apache/calcite/model/ModelHandler/checkRequiredAttributes(java.lang.Object,java.lang.String[])#java/lang/reflect/Field/get(java.lang.Object)
org/apache/calcite/model/ModelHandler/checkRequiredAttributes(java.lang.Object,java.lang.String[])#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/model/ModelHandler/checkRequiredAttributes(java.lang.Object,java.lang.String[])#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/Class/forName(java.lang.String)
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#com/google/common/collect/ImmutableMultimap/entries()
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#com/google/common/collect/ImmutableCollection/iterator()
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/util/Map$Entry/getKey()
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/util/Iterator/next()
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/addFunctions(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean)#java/util/Map$Entry/getValue()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/util/List/iterator()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/model/ModelHandler/stringList(java.lang.Object)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/TreeMap/TreeMap(java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/SortedMap/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/Collection/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/Collection/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/SortedMap/putAll(java.util.Map)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/TreeMap/TreeMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/util/SortedMap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateInputWithValueGenerator(org.apache.calcite.rel.RelNode,org.apache.calcite.sql2rel.RelDecorrelator$Frame)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/TreeMap/TreeMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/HashMap/HashMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#com/google/common/collect/ImmutableSortedMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalProject)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalJoin/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalProject/getNamedProjects()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalJoin/getCluster()
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator/projectJoinOutputWithNullability(org.apache.calcite.rel.logical.LogicalJoin,org.apache.calcite.rel.logical.LogicalProject,int)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/TreeMap/TreeMap(java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Map/putAll(java.util.Map)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/ImmutableSortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/logical/LogicalJoin/getInput(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/ImmutableSortedMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/logical/LogicalJoin/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalJoin)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/HashSet/HashSet()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#com/google/common/collect/ImmutableSortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/HashMap/HashMap()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/lang/Iterable/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/List/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/createValueGenerator(java.lang.Iterable,int,java.util.SortedMap)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rel/logical/LogicalProject/getNamedProjects()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/aggregateCorrelatorOutput(org.apache.calcite.rel.core.Correlate,org.apache.calcite.rel.logical.LogicalProject,java.util.Set)#org/apache/calcite/rel/core/Correlate/getLeft()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#com/google/common/collect/ImmutableSortedMap/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#com/google/common/collect/ImmutableSortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/getNewForOldInputRef(org.apache.calcite.rel.RelNode,java.util.Map,org.apache.calcite.rex.RexInputRef)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Set/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Set/remove(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Set/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/checkCorVars(org.apache.calcite.rel.logical.LogicalCorrelate,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getInput()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSortedMap/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSortedMap/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/AssertionError/AssertionError(boolean)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/NavigableMap/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSortedMap/keySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/TreeMap/TreeMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/HashMap/HashMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/NavigableMap/descendingMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSortedSet/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Set/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/NavigableMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#com/google/common/collect/ImmutableSortedMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalAggregate)#java/util/NavigableMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/ArrayList/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Map/putAll(java.util.Map)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/remove(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/TreeMap/TreeMap(java.util.SortedMap)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableSortedSet/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableSortedMap/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableSortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getInput(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/keySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/putAll(java.util.Map)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#com/google/common/collect/ImmutableSortedMap/keySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/HashMap/HashMap()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Set/iterator()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/entrySet()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getCorrelationId()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRequiredColumns()
org/apache/calcite/sql2rel/RelDecorrelator/decorrelateRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/avatica/util/TimeUnit/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/divide(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/math/BigDecimal/divideToIntegralValue(java.math.BigDecimal)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/math/BigDecimal/longValue()
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$ExtractImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Object/toString()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupCount()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/size()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalJoin/getRowType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getInput()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCorrelate/getCluster()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/sql2rel/RelDecorrelator$RemoveCorrelationForScalarAggregateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Values/getRowType()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Values,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getRowType()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/metadata/RelMdSize/averageColumnSizes(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/rules/AggregateStarTableRule$2/inverse()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/schema/impl/StarTable$StarTableScan/getTable()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Project/getTraitSet()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#com/google/common/collect/ImmutableList/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/AggregateStarTableRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.schema.impl.StarTable$StarTableScan)#org/apache/calcite/schema/impl/StarTable$StarTableScan/getCluster()
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/String/charAt(int)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/Integer/toString(int)
org/apache/calcite/util/XmlOutput$StringEscaper/escapeString(java.lang.String)#java/lang/String/length()
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/reflect/Field/getName()
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/reflect/Field/get(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/util/Map/get(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/reflect/Field/getType()
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/Class/getFields()
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/createTableMap()#java/util/Collections/singleton(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/Class/isArray()
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#org/apache/calcite/linq4j/Linq4j/asEnumerable(java.lang.Object[])
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#org/apache/calcite/linq4j/Linq4j/asEnumerable(java.lang.Iterable)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#org/apache/calcite/linq4j/Linq4j/asEnumerable(java.util.List)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#org/apache/calcite/linq4j/tree/Primitive/asList(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/toEnumerable(java.lang.Object)#java/lang/Object/getClass()
org/apache/calcite/adapter/java/ReflectiveSchema/createFunctionMap()#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/java/ReflectiveSchema/createFunctionMap()#java/lang/Class/getMethods()
org/apache/calcite/adapter/java/ReflectiveSchema/createFunctionMap()#com/google/common/collect/ImmutableMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema/createFunctionMap()#com/google/common/collect/ImmutableMultimap/builder()
org/apache/calcite/adapter/java/ReflectiveSchema/createFunctionMap()#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/java/ReflectiveSchema/createFunctionMap()#com/google/common/collect/ImmutableMultimap$Builder/build()
org/apache/calcite/adapter/java/ReflectiveSchema/createFunctionMap()#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/adapter/java/ReflectiveSchema/createFunctionMap()#java/lang/reflect/Method/getReturnType()
org/apache/calcite/adapter/java/ReflectiveSchema/createFunctionMap()#java/lang/String/equals(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/AbstractCollection/retainAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Set/iterator()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Map$Entry/getValue()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Set/retainAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Map/keySet()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Map/entrySet()
org/apache/calcite/util/CompatibleGuava11$Values/retainAll(java.util.Collection)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#com/google/common/base/Objects/equal(java.lang.Object,java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Set/iterator()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Map$Entry/getValue()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/AbstractCollection/remove(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Map/entrySet()
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/remove(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/AbstractCollection/removeAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Set/removeAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Set/iterator()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Map$Entry/getValue()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Map/keySet()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Map/entrySet()
org/apache/calcite/util/CompatibleGuava11$Values/removeAll(java.util.Collection)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/flattenProjection(org.apache.calcite.sql2rel.RelStructuredTypeFlattener$RewriteRexShuttle,org.apache.calcite.rex.RexNode,java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRight()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getRequiredColumns()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getLeft()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCorrelate)#org/apache/calcite/rel/logical/LogicalCorrelate/getCorrelationId()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/logical/LogicalCalc/getCluster()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/logical/LogicalCalc/getProgram()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/logical/LogicalCalc/getInput()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rel/logical/LogicalCalc/getRowType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/rewriteRel(org.apache.calcite.rel.logical.LogicalCalc)#org/apache/calcite/rex/RexLocalRef/getType()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/ArrayList/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#com/google/common/collect/SortedSetMultimap/keySet()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#com/google/common/collect/SortedSetMultimap/putAll(java.lang.Object,java.lang.Iterable)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#com/google/common/collect/SortedSetMultimap/removeAll(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(com.google.common.collect.SortedSetMultimap)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/SortedMap/keySet()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Set/iterator()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelStructuredTypeFlattener/updateRelInMap(java.util.SortedMap)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/getProperty(java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/Properties()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/io/InputStream/close()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/System/getProperties()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Enumeration/nextElement()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/keys()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/lang/Class/getClassLoader()
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Properties/load(java.io.InputStream)
org/apache/calcite/util/SaffronProperties$Helper/instance()#java/util/Enumeration/hasMoreElements()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/Integer/toString(int,int)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/length()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/impl/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/charAt(int)
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/String/length()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/String/substring(int,int)
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/toString()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Values$1/apply(com.google.common.collect.ImmutableList)#java/lang/String/endsWith(java.lang.String)
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/getRowType()
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/List/isEmpty()
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/getInput()
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/List/get(int)
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/List/iterator()
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/Iterator/next()
org/apache/calcite/adapter/elasticsearch/ElasticsearchSort/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/PrintWriter/flush()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/StringWriter/StringWriter()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/equals(java.lang.Object)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/Class/getName()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/volcano/RelSubset/getDescription()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/StringWriter/toString()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/Object/getClass()
org/apache/calcite/plan/volcano/RelSubset$CheapestPlanReplacer/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#org/apache/calcite/avatica/util/DateTimeUtils$PrecisionTime/getCalendar()
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#org/apache/calcite/avatica/util/DateTimeUtils/parsePrecisionDateTimeLiteral(java.lang.String,java.text.DateFormat,java.util.TimeZone,int)
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/util/Calendar/setTimeZone(java.util.TimeZone)
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/lang/String/substring(int,int)
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/util/TimeZone/getID()
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/util/Calendar/get(int)
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/lang/String/indexOf(int)
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
org/apache/calcite/util/TimeWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/lang/String/substring(int)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getConvention()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getTraitSet()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getConvention()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/contains(java.lang.Object)
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/SortProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#com/google/common/collect/Iterables/filter(java.lang.Iterable,java.lang.Class)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#com/google/common/collect/ImmutableSortedSet/size()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/Map/get(java.lang.Object)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/List/clear()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/List/get(int)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/List/iterator()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/SortedSet/add(java.lang.Object)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/lang/Math/min(double,double)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/lang/Integer/intValue()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/ArrayList/ArrayList()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/BitSet/or(java.util.BitSet)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/SortedSet/size()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/Iterator/hasNext()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#com/google/common/collect/ImmutableSortedSet/copyOf(java.lang.Iterable)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/Iterator/next()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/HashMap/HashMap()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/lang/Iterable/iterator()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#com/google/common/collect/ImmutableSortedSet/iterator()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/Set/iterator()
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/profile/SimpleProfiler$Run/profile(java.lang.Iterable)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/BiMap/containsValue(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/BiMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/HashBiMap/create(java.util.Map)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/Multimap/isEmpty()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/Multimap/asMap()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#java/util/Map/entrySet()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/HashBiMap/create()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#java/util/Collection/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#java/util/List/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateTableMappings(com.google.common.collect.Multimap)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Set/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapColumnTableReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#org/apache/commons/lang3/tuple/Triple/getRight()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#com/google/common/collect/Multimap/entries()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#org/apache/commons/lang3/tuple/Triple/getMiddle()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#com/google/common/collect/BiMap/get(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexTableInputRef/getIndex()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#com/google/common/collect/BiMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#com/google/common/collect/ArrayListMultimap/create()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#com/google/common/collect/BiMap/inverse()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/Set/equals(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/Set/containsAll(java.util.Collection)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#org/apache/commons/lang3/tuple/Triple/getLeft()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#org/apache/calcite/rex/RexTableInputRef/getType()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/Collections/disjoint(java.util.Collection,java.util.Collection)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/List/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/List/get(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#com/google/common/collect/ArrayListMultimap/create()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#com/google/common/collect/Multimap/putAll(com.google.common.collect.Multimap)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/List/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/compensatePartial(java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.Set,com.google.common.collect.Multimap)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Set/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateSwapTableColumnReferencesLineage(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#com/google/common/collect/Multimap/containsKey(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Set/removeAll(java.util.Collection)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule/generateEquivalenceClasses(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object[])
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/List/size()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/Arrays/toString(java.lang.Object[])
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/volcano/VolcanoRuleCall/getRule()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/List/isEmpty()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/volcano/VolcanoPlanner/checkCancel()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/Double/doubleValue()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/apache/calcite/plan/volcano/VolcanoPlanner/isRuleExcluded(org.apache.calcite.plan.RelOptRule)
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/plan/volcano/VolcanoRuleCall/onMatch()#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/VolcanoRuleCall/getRule()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/List/size()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/List/get(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/VolcanoRuleCall/setChildRels(org.apache.calcite.rel.RelNode,java.util.List)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/List/contains(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/volcano/VolcanoRuleCall/getChildRels(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/Collection/iterator()
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/matchRecurse(int)#org/apache/calcite/plan/RelOptRuleOperandChildPolicy/ordinal()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Map/isEmpty()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/RelTraitPropagationVisitor/go(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object[])
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Set/iterator()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Map/entrySet()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object[])
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Arrays/toString(java.lang.Object[])
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Map$Entry/getKey()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/volcano/VolcanoRuleCall/getRule()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/append(int)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#java/util/Map$Entry/getValue()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/apache/calcite/plan/volcano/VolcanoRuleCall/getPlanner()
org/apache/calcite/plan/volcano/VolcanoRuleCall/transformTo(org.apache.calcite.rel.RelNode,java.util.Map)#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/Arrays/fill(int[],int)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#com/google/common/collect/Ordering/natural()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/calcite/rex/RexProgram/deduceCollations(java.util.List,int,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgram/createIdentity(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/SetOp/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/sql/Connection/createStatement()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/sql/Statement/unwrap(java.lang.Class)
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#org/apache/calcite/config/CalciteConnectionProperty/camelName()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/lang/Object/getClass()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/util/Properties/Properties()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/lang/Class/getName()
org/apache/calcite/tools/Frameworks/withPrepare(org.apache.calcite.tools.Frameworks$PrepareAction)#java/sql/DriverManager/getConnection(java.lang.String,java.util.Properties)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/util/List/iterator()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/materialize/Lattice$Builder/resolveArgs(java.lang.Object)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/equal(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOn(int)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumUtils/joinSelector(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSubset/getTraitSet()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/lang/Iterable/iterator()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/HashSet/HashSet()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/Set/isEmpty()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#org/apache/calcite/plan/volcano/RelSubset/getCluster()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/List/remove(java.lang.Object)
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/RelSet/mergeWith(org.apache.calcite.plan.volcano.VolcanoPlanner,org.apache.calcite.plan.volcano.RelSet)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/Class/getFields()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/util/List/isEmpty()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/util/List/size()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/reflect/Field/getModifiers()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/reflect/Field/getName()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/reflect/Field/getType()
org/apache/calcite/rel/type/RelDataTypeFactoryImpl/fieldsOf(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/avatica/AvaticaParameter/AvaticaParameter(boolean,int,int,int,java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/avatica/Meta$CursorFactory/deduce(java.util.List,java.lang.Class)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/prepareSql(org.apache.calcite.sql.SqlNode,java.lang.Class,org.apache.calcite.sql.validate.SqlValidator,boolean)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/SqlKind/belongsTo(java.util.Collection)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/AssertionError/AssertionError()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/prepare2_(org.apache.calcite.jdbc.CalcitePrepare$Context,org.apache.calcite.jdbc.CalcitePrepare$Query,java.lang.reflect.Type,long,org.apache.calcite.prepare.CalciteCatalogReader,org.apache.calcite.plan.RelOptPlanner)#org/apache/calcite/sql/parser/SqlParseException/getMessage()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/List/isEmpty()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/HashMap/HashMap()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/util/List/get(int)
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/prepare/CalcitePrepareImpl/analyze_(org.apache.calcite.sql.validate.SqlValidator,java.lang.String,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.RelRoot,boolean)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/avatica/ColumnMetaData/array(org.apache.calcite.avatica.ColumnMetaData$AvaticaType,java.lang.String,org.apache.calcite.avatica.ColumnMetaData$Rep)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/avatica/ColumnMetaData$Rep/of(java.lang.reflect.Type)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/avatica/ColumnMetaData/struct(java.util.List)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/prepare/CalcitePrepareImpl/avaticaType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/avatica/ColumnMetaData/scalar(int,java.lang.String,org.apache.calcite.avatica.ColumnMetaData$Rep)
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#java/util/Set/isEmpty()
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#java/util/HashSet/HashSet()
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#java/util/Set/size()
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl$PatternValidator/visit(org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/runtime/Hook/get(java.lang.Object)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#java/util/Iterator/next()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#org/apache/calcite/prepare/RelOptTableImpl/getColumnStrategies()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#java/util/List/get(int)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#java/util/List/iterator()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#java/lang/Boolean/booleanValue()
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/prepare/RelOptTableImpl/toRel(org.apache.calcite.plan.RelOptTable$ToRelContext)#java/util/List/contains(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/Map/entrySet()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#[I/clone()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/addOnJoinFieldRefCounts(java.util.List,int,org.apache.calcite.rex.RexNode,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getInput(int)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#com/google/common/collect/ImmutableMap/get(java.lang.Object)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/JoinToMultiJoinRule/combineInputs(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelNode,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getInput(int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableMap/entrySet()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/isEmpty()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getRowType()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getCluster()
org/apache/calcite/rel/rules/UnionPullUpConstantsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/Ordering/immutableSortedCopy(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateProjectMergeRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.Project)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/util/List/get(int)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/WithItemNamespace/translate(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/adapter/java/JavaTypeFactory/createJavaType(java.lang.Class)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/List/size()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/Iterator/next()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/List/iterator()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/adapter/java/JavaTypeFactory/builder()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/interpreter/AggregateNode/getAccumulator(org.apache.calcite.rel.core.AggregateCall,boolean)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/lang/Integer/intValue()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#com/google/common/collect/ImmutableSortedMap/of()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/lang/Math/max(int,int)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/size()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/values()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/lastKey()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/lang/Integer/valueOf(int)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/firstKey()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/Collection/iterator()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/SortedMap/isEmpty()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/TreeMap/TreeMap()
org/apache/calcite/util/ImmutableBitSet/closure(java.util.SortedMap)#java/util/Iterator/next()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/allowsNoPrecNoScale()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecNoScale()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/nio/charset/Charset/forName(java.lang.String)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecScale(boolean,boolean)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#org/apache/calcite/sql/type/SqlTypeName/get(java.lang.String)
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlDataTypeSpec/deriveType(org.apache.calcite.rel.type.RelDataTypeFactory,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/Collections/emptyMap()
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/HashMap/HashMap(java.util.Map)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/Collections/unmodifiableMap(java.util.Map)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/Map/putAll(java.util.Map)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/List/size()
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/NestedBlockBuilderImpl/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)#java/util/Map/isEmpty()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/size()
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/util/List/get(int)
org/apache/calcite/sql/SqlSplittableAggFunction$CountSplitter/topSplit(org.apache.calcite.rex.RexBuilder,org.apache.calcite.sql.SqlSplittableAggFunction$Registry,int,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.AggregateCall,int,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/RelCollations/of(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/RelCollations/of(java.util.List)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/RelCollations/of(java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/RelCollations/of(java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/RelCollations/of(java.util.List)#java/util/HashSet/HashSet()
org/apache/calcite/rel/RelCollations/of(java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/RelCollations/of(java.util.List)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/RelCollations/of(java.util.List)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/RelCollations/of(java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/RelCollations/of(java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Collection/size()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/HashMultimap/create()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Map/values()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Collection/size()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getRowType()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/HashMultimap/create()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getCluster()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Collection/iterator()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/TableScan/getRowType()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#com/google/common/collect/Sets/newHashSet(java.lang.Object[])
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.TableScan,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/TableScan/getCluster()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#java/util/Set/isEmpty()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#java/util/Map/keySet()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/createAllPossibleExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,org.apache.calcite.util.ImmutableBitSet,java.util.Map,java.util.Map)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/rel/metadata/RelMdExpressionLineage/getExpressionLineage(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)#java/lang/Object/getClass()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/plan/SubstitutionVisitor/applicableRules(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/Multimap/remove(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/List/isEmpty()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/Collection/isEmpty()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/List/clear()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/Map/clear()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/List/get(int)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/util/Collection/iterator()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/SubstitutionVisitor/go(org.apache.calcite.rel.mutable.MutableRel)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/SortedMap/values()
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/SortedMap/size()
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/lang/String/compareTo(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/TreeMap/TreeMap()
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/plan/SubstitutionVisitor/canonizeNode(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode)#java/util/Collection/iterator()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#java/lang/Integer/intValue()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#java/lang/Integer/valueOf(int)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/unifyAggregates(org.apache.calcite.rel.mutable.MutableAggregate,org.apache.calcite.rel.mutable.MutableAggregate)#java/lang/AssertionError/AssertionError(boolean)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/util/List/isEmpty()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/SubstitutionVisitor/matchRecurse(org.apache.calcite.rel.mutable.MutableRel)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Map/isEmpty()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdUniqueKeys/getUniqueKeys(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator$InputGetterImpl/field(org.apache.calcite.linq4j.tree.BlockBuilder,int,java.lang.reflect.Type)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableInterpreter/getInput()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getRootExpression()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableInterpreter/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableInterpreter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlSelectOperator/unparseListClause(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlKind)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlJoin$SqlJoinOperator/getRightPrec()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/List/isEmpty()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlSelectOperator/unparseListClause(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#java/util/Iterator/next()
org/apache/calcite/sql/SqlSelectOperator/unparse(org.apache.calcite.sql.SqlWriter,org.apache.calcite.sql.SqlCall,int,int)#org/apache/calcite/sql/SqlJoin$SqlJoinOperator/getLeftPrec()
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#com/google/common/collect/ImmutableSortedMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#com/google/common/collect/ImmutableSortedMap$Builder/build()
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#java/util/Iterator/next()
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#com/google/common/collect/ImmutableSortedMap/naturalOrder()
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#java/util/Map/entrySet()
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#com/google/common/collect/ImmutableSortedSet/copyOf(java.util.Collection)
org/apache/calcite/rel/core/Match/copyMap(java.util.Map)#java/util/Set/iterator()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlNumericLiteral/bigDecimalValue()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlUnnestOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlBinaryOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlSpecialOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/runtime/Resources$ExInst/str()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/math/BigDecimal/divide(java.math.BigDecimal)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlAsOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/math/BigDecimal/floatValue()
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/parser/impl/SqlParserImpl/TableRef2(boolean)#org/apache/calcite/sql/SqlAsOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/appendIfNotNull(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableSort/getInput()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableSort/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableSort/getRowType()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/util/HashMap/HashMap()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/io/File/File(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/codehaus/janino/util/ClassFile/getSourceResourceName(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/apache/calcite/util/javac/JaninoCompiler$JaninoCompilerArgs/getClassLoader()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/StringBuilder/toString()
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/codehaus/janino/util/resource/MapResourceFinder/MapResourceFinder(java.util.Map)
org/apache/calcite/util/javac/JaninoCompiler/compile()#org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/loadClass(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler/compile()#java/lang/String/getBytes(java.nio.charset.Charset)
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getJoinType()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getLeft()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getRight()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getCorrelationId()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalCorrelate/getRequiredColumns()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableCorrelateRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/List/size()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/Iterator/next()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/List/get(int)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/util/List/iterator()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/ConventionTraitDef/convert(org.apache.calcite.plan.RelOptPlanner,org.apache.calcite.rel.RelNode,org.apache.calcite.plan.Convention,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/SortedSet/add(java.lang.Object)
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/SortedSet/size()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/Set/size()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/core/Match$RexMRAggCall/toString()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/Iterator/next()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/Set/iterator()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/List/iterator()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/SortedSet/iterator()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/TreeSet/TreeSet()
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/core/Match$AggregateFinder/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableLimit/getInput()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableLimit/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableLimit/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/Class/getMethods()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Method/getModifiers()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Method/getReturnType()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/StringBuilder/toString()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/util/EnumSet/contains(java.lang.Object)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/reflect/InvocationTargetException/getCause()
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/runtime/Resources/validate(java.lang.Object,java.util.EnumSet)#java/lang/Object/getClass()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getTraitSet()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AggregateFilterTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#java/util/HashSet/equals(java.lang.Object)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#java/util/List/size()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/rel/rules/FilterJoinRule/perform(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.core.Join)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/newArrayInit(java.lang.reflect.Type,java.lang.Iterable)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/reflect/Method/getName()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/toString(org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/rex/RexExecutorImpl/compile(org.apache.calcite.rex.RexBuilder,java.util.List,org.apache.calcite.adapter.enumerable.RexToLixTranslator$InputGetter,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/Character/isWhitespace(char)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/toUpperCase(java.util.Locale)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/indexOf(java.lang.String,int)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/StringBuilder/toString()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/charAt(int)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/length()
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Tokenizer/nextToken()#java/lang/String/substring(int,int)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object,java.lang.Object)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/fun/SqlSubstringFunction/getAllowedSignatures(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/getPartitionRowCount()
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rowTranslator(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/index()
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/startIndex()
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/divide(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable$NtileImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getInput()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSets()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/add(int)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Object/toString()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/subtract(int)
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelXmlWriter/explainSpecific(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/Set/size()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#org/apache/calcite/sql/type/SqlOperandTypeChecker$Consistency/ordinal()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/StandardConvertletTable/consistentType(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.type.SqlOperandTypeChecker$Consistency,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/size()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/Iterator/next()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/iterator()
org/apache/calcite/sql2rel/StandardConvertletTable/convertCase(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.fun.SqlCase)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlAggFunction/getKind()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateValuesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Map$Entry/getKey()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Set/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Map$Entry/getValue()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/util/Map/entrySet()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/lookupAggregates(org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/toString()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#com/google/common/base/Supplier/get()
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$AggConverter/translateAgg(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.SqlCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/util/Util/stringToList(java.lang.String)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/util/Util/stringToList(java.lang.String)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/String/charAt(int)
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/String/isEmpty()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/StringBuilder/setLength(int)
org/apache/calcite/util/Util/stringToList(java.lang.String)#java/lang/String/length()
org/apache/calcite/util/Util/stringToList(java.lang.String)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/util/Util/stringToList(java.lang.String)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/util/TimeZone/getDSTSavings()
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/util/TimeZone/getRawOffset()
org/apache/calcite/util/Util/appendPosixDaylightTransition(java.util.TimeZone,java.lang.StringBuilder,int,int,int,int,int,int,boolean,boolean)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/listToString(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/listToString(java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/length()
org/apache/calcite/util/Util/listToString(java.util.List)#java/util/List/iterator()
org/apache/calcite/util/Util/listToString(java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Field/getName()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/util/Iterator/hasNext()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/util/Iterator/next()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Class/getName()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/util/Enumeration/nextElement()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Class/getFields()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/io/PrintWriter/println()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Array/get(java.lang.Object,int)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Class/isArray()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Object/toString()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Field/get(java.lang.Object)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Array/getLength(java.lang.Object)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/Object/getClass()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/util/Enumeration/hasMoreElements()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/lang/reflect/Field/getModifiers()
org/apache/calcite/util/Util/print(java.io.PrintWriter,java.lang.Object,int)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/Character/isISOControl(char)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/Character/isJavaIdentifierPart(char)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/Integer/toString(int,int)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/String/length()
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/StringBuilder(int)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/Character/isJavaIdentifierStart(char)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/String/charAt(int)
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/util/regex/Matcher/matches()
org/apache/calcite/util/Util/toJavaId(java.lang.String,int)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/regex/Pattern/compile(java.lang.String)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/Object/toString()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/regex/Matcher/matches()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/TimeZone/getRawOffset()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/Integer/valueOf(java.lang.String)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/lang/Integer/intValue()
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/regex/Matcher/group(int)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/TimeZone/getDisplayName(boolean,int,java.util.Locale)
org/apache/calcite/util/Util/toPosix(java.util.TimeZone,boolean)#java/util/TimeZone/getDSTSavings()
org/apache/calcite/util/Util/toURL(java.io.File)#java/io/File/getAbsolutePath()
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/String/replace(char,char)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/String/charAt(int)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/String/length()
org/apache/calcite/util/Util/toURL(java.io.File)#java/net/URL/URL(java.lang.String)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/System/getProperty(java.lang.String)
org/apache/calcite/util/Util/toURL(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/math/BigDecimal/scale()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/String/length()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/String/substring(int,int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/math/BigDecimal/signum()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/String/substring(int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/Math/min(int,int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/String/charAt(int)
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/math/BigDecimal/unscaledValue()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/lang/StringBuilder/toString()
org/apache/calcite/util/Util/toScientificNotation(java.math.BigDecimal)#java/math/BigInteger/toString()
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/HashMap/HashMap(int)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/List/get(int)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/List/iterator()
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/List/size()
org/apache/calcite/util/Util/firstDuplicate(java.util.List)#java/util/Map/size()
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/PrintStream/print(java.lang.String)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/PrintStream/println()
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#org/apache/calcite/avatica/util/Spaces/append(java.lang.Appendable,int)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/lang/Integer/toString(int)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/lang/String/length()
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/apache/calcite/util/Util/debugCode(java.io.PrintStream,java.lang.String)#java/io/BufferedReader/readLine()
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/Class/forName(java.lang.String)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/Class/getConstructor(java.lang.Class[])
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/java/ReflectiveSchema$Factory/create(org.apache.calcite.schema.SchemaPlus,java.lang.String,java.util.Map)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/type/AssignableOperandTypeChecker/getAllowedSignatures(org.apache.calcite.sql.SqlOperator,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/util/List/size()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/lang/Object/toString()
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/text/MessageFormat/format(java.lang.Object)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/text/MessageFormat/MessageFormat(java.lang.String,java.util.Locale)
org/apache/calcite/sql/SqlUtil/getAliasedSignature(org.apache.calcite.sql.SqlOperator,java.lang.String,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/add(int)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/io/PrintWriter/println(java.lang.Object)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/sql/SqlExplainLevel/ordinal()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/subtract(int)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getId()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/avatica/util/Spacer/spaces(java.lang.StringBuilder)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/externalize/RelWriterImpl/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/getInput()
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/List/iterator()
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/String/split(java.lang.String)
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/Iterator/next()
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/getNamedProjects()
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/util/List/remove(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/String/matches(java.lang.String)
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/implement(org.apache.calcite.adapter.elasticsearch.ElasticsearchRel$Implementor)#org/apache/calcite/adapter/elasticsearch/ElasticsearchProject/getCluster()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Collection/size()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/values()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/HashMultimap/create()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Collection/iterator()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Collection/size()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/HashMultimap/create()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdTableReferences/getTableReferences(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/HashSet/HashSet()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIf(boolean,java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions$FluentList/append(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Primitive/ofBoxOr(java.lang.reflect.Type)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/sql/SqlDialect$CalendarPolicy/ordinal()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#java/util/List/get(int)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/generateGet(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.ParameterExpression,int,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.sql.SqlDialect$CalendarPolicy)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/catch_(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/block(org.apache.calcite.linq4j.tree.Statement[])
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/getInput()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/arrayIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/newArrayBounds(java.lang.reflect.Type,int,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/tryCatch(org.apache.calcite.linq4j.tree.Statement,org.apache.calcite.linq4j.tree.CatchBlock[])
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder(boolean)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/throw_(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/sql/SqlDialect$CalendarPolicy/ordinal()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/getRowType()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/jdbc/JdbcRel/getConvention()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/jdbc/JdbcToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SetopNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/allowsNoPrecNoScale()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecNoScale()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#java/lang/String/length()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecScale(boolean,boolean)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/getNameForJdbcType(int)
org/apache/calcite/adapter/jdbc/JdbcSchema/sqlType(org.apache.calcite.rel.type.RelDataTypeFactory,int,int,int,java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/String/toUpperCase(java.util.Locale)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/String/replace(char,char)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/sql/DatabaseMetaData/getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/sql/ResultSet/next()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/sql/ResultSet/getString(int)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#javax/sql/DataSource/getConnection()
org/apache/calcite/adapter/jdbc/JdbcSchema/computeTables()#java/sql/Connection/getMetaData()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/equals(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/List/get(int)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/Map/remove(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Exception/getCause()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#[Ljava/lang/Object;/clone()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#com/google/common/collect/ImmutableList/indexOf(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/toString()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$1$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/getSimpleName()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/io/PrintWriter/write(java.lang.String)
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/AbstractRelNode$1/explain_(org.apache.calcite.rel.RelNode,java.util.List)#org/apache/calcite/plan/RelTraitSet/iterator()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/metadata/RelMdColumnOrigins/getColumnOrigins(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.metadata.RelMetadataQuery,int)#java/util/List/get(int)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/util/ArrayList/ArrayList()
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/sql/ResultSet/getLong(int)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/sql/ResultSet/wasNull()
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/util/List/add(java.lang.Object)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/sql/ResultSetMetaData/getColumnType(int)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/sql/ResultSet/getObject(int)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/lang/Long/valueOf(long)
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/util/List/toArray()
org/apache/calcite/runtime/ResultSetEnumerable$1$2/apply()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/Map/putAll(java.util.Map)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/jdbc/CalciteConnectionImpl/lookupStatement(org.apache.calcite.avatica.Meta$StatementHandle)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/sql/SQLException/SQLException(java.lang.String)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/avatica/AvaticaConnection$Trojan/getParameterValues(org.apache.calcite.avatica.AvaticaStatement)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/avatica/MetaImpl/checkParameterValueHasNull(java.util.List)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#com/google/common/collect/Maps/newLinkedHashMap()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/lang/StringBuilder/append(int)
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/util/List/iterator()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#org/apache/calcite/avatica/remote/TypedValue/toLocal()
org/apache/calcite/jdbc/CalciteConnectionImpl/enumerable(org.apache.calcite.avatica.Meta$StatementHandle,org.apache.calcite.jdbc.CalcitePrepare$CalciteSignature)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getInputs()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getVariablesSet()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getRight()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/lang/String/hashCode()
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getDatabaseMajorVersion()
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getDatabaseProductVersion()
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/lang/String/trim()
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getDatabaseMinorVersion()
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getDatabaseProductName()
org/apache/calcite/sql/SqlDialectFactoryImpl/create(java.sql.DatabaseMetaData)#java/lang/String/contains(java.lang.CharSequence)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableValues/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferCustom()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/newArrayInit(java.lang.reflect.Type,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableValues/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableValues/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/AssertionError/AssertionError(int)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/util/List/size()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#com/google/common/collect/Iterables/getLast(java.lang.Iterable)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/fun/SqlCaseOperator/inferTypeFromOperands(org.apache.calcite.rel.type.RelDataTypeFactory,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/of(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableIntersect/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableIntersect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getInput()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferCustom()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getGroupCount()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.PseudoField)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/String/length()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/String/substring(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/sql/SqlAggFunction/getName()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableAggregate/getGroupType()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/box(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableAggregate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/lang/StringBuilder/append(int)
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/Iterator/next()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/List/contains(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/List/iterator()
org/apache/calcite/rex/RexProgramBuilder/generateMissingNames()#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/size()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/Iterator/next()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/get(int)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/util/List/iterator()
org/apache/calcite/rex/RexProgramBuilder/add(java.util.List,java.util.List,org.apache.calcite.rex.RexLocalRef,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexShuttle,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#java/util/Iterator/hasNext()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#java/util/List/size()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#java/util/Iterator/next()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object[])
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#java/util/List/iterator()
org/apache/calcite/plan/SubstitutionVisitor$FilterToProjectUnifyRule/invert(org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableRel,org.apache.calcite.rel.mutable.MutableProject)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/util/regex/Matcher/matches()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/Class/getName()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/Object/getClass()
org/apache/calcite/plan/AbstractRelOptPlanner/mapRuleDescription(org.apache.calcite.plan.RelOptRule)#java/lang/String/contains(java.lang.CharSequence)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setReadTimeout(int)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setConnectTimeout(int)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setRequestMethod(java.lang.String)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Iterator/next()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/io/Writer/close()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/io/Writer/write(java.lang.String)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Set/iterator()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/getInputStream()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Map$Entry/getValue()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Map/entrySet()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/io/Writer/flush()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/setDoOutput(boolean)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/util/Map$Entry/getKey()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/net/HttpURLConnection/getOutputStream()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/lang/CharSequence/toString()
org/apache/calcite/runtime/HttpUtils/executeMethod(java.lang.String,java.lang.String,java.lang.CharSequence,java.util.Map,int,int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/util/Arrays/binarySearch(java.lang.Object[],java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/util/Iterator/hasNext()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/util/List/iterator()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/util/Set/size()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/util/Iterator/next()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/util/Map/keySet()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/util/Arrays/sort(java.lang.Object[],int,int)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/util/Set/toArray(java.lang.Object[])
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/clone/ArrayTable$ObjectDictionary/freeze(org.apache.calcite.adapter.clone.ColumnLoader$ValueSet,int[])#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCorrelate/getCorrelVariable()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/sql/SemiJoinType/toLinq4j()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/sql/SemiJoinType/returnsJustFirstInput()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/unbox(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCorrelate/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCorrelate/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Map/values()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Set/iterator()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/List/size()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Iterator/next()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/HashMap/HashMap()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Map/keySet()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/List/iterator()
org/apache/calcite/util/graph/Graphs/makeImmutable(org.apache.calcite.util.graph.DirectedGraph)#java/util/Collection/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/java/JavaTypeFactory/builder()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/java/JavaTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/enumerable/JavaRowFormat/optimize(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/adapter/java/JavaTypeFactory/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/project(java.util.List,boolean,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/tree/Primitive/of(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#java/util/List/contains(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateSelector(org.apache.calcite.linq4j.tree.ParameterExpression,java.util.List,java.util.List,org.apache.calcite.adapter.enumerable.JavaRowFormat)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/Collections/emptyList()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/negate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Primitive$Flavor/ordinal()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Primitive/flavor(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateCollationKey(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/newArrayInit(java.lang.reflect.Type,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions$FluentList/size()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions$FluentList/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Field)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateAccessor(java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/Collections/emptyList()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/negate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/List/size()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Primitive$Flavor/ordinal()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Primitive/flavor(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/PhysTypeImpl/generateComparator(org.apache.calcite.rel.RelCollation)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/lang/Integer/intValue()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/Iterator/next()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/Set/isEmpty()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/Set/iterator()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/List/get(int)
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/TableScan/getCluster()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#org/apache/calcite/rel/core/TableScan/getRowType()
org/apache/calcite/rel/core/TableScan/project(org.apache.calcite.util.ImmutableBitSet,java.util.Set,org.apache.calcite.tools.RelBuilder)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/util/List/size()
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/util/List/get(int)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/util/mapping/Mappings/apply(org.apache.calcite.util.mapping.Mapping,java.util.List)#org/apache/calcite/util/mapping/Mapping/getSource(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/clear()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/iterator()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule$ReducibleExprLocator/analyzeCall(org.apache.calcite.rex.RexCall,org.apache.calcite.rel.rules.ReduceExpressionsRule$ReducibleExprLocator$Constancy)#java/util/Deque/pop()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Comparable/compareTo(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/math/BigDecimal/BigDecimal(double)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Number/intValue()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/String/substring(int,int)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/math/BigDecimal/BigDecimal(long)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/StringBuilder/toString()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Number/doubleValue()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/interpreter/Interpreter$FooCompiler$1/execute(org.apache.calcite.interpreter.Context)#java/lang/Number/longValue()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalUnion/getRowType()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/PruneEmptyRules$1/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/lang/Integer/intValue()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/Iterator/hasNext()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/lang/Math/max(int,int)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/size()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/values()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/BitSet/BitSet()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/lastKey()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/lang/Integer/valueOf(int)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/firstKey()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/Collection/iterator()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/BitSet/length()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#com/google/common/collect/ImmutableSortedMap/of()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/get(java.lang.Object)
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/SortedMap/isEmpty()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/TreeMap/TreeMap()
org/apache/calcite/util/BitSets/closure(java.util.SortedMap)#java/util/Iterator/next()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Iterator/remove()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Set/removeAll(java.util.Collection)
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Map/values()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Map/keySet()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/List/iterator()
org/apache/calcite/util/graph/DefaultDirectedGraph/removeAllVertices(java.util.Collection)#java/util/Collection/iterator()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecNoScale()
org/apache/calcite/sql/fun/SqlLiteralChainOperator/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/iterator()
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#org/apache/calcite/prepare/Prepare$AbstractPreparingTable/unwrap(java.lang.Class)
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#java/util/List/size()
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#org/apache/calcite/prepare/Prepare$AbstractPreparingTable/getRelOptSchema()
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#org/apache/calcite/prepare/Prepare$AbstractPreparingTable/getRowType()
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#java/util/List/subList(int,int)
org/apache/calcite/prepare/Prepare$AbstractPreparingTable/extend(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/util/SortedSet/add(java.lang.Object)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/initList(org.apache.calcite.sql.parser.SqlAbstractParserImpl,java.util.Set,java.lang.String)#java/util/SortedSet/isEmpty()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/Iterator/hasNext()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/TreeSet/addAll(java.util.Collection)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/TreeSet/iterator()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/TreeSet/TreeSet()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/lang/StringBuilder/toString()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/Iterator/next()
org/apache/calcite/sql/parser/SqlAbstractParserImpl$MetadataImpl/constructSql92ReservedWordList()#java/util/TreeSet/removeAll(java.util.Collection)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Array/get(java.lang.Object,int)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Integer/intValue()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(int)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Object/getClass()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/toString()
org/apache/calcite/util/Compatible$Factory$1/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#com/google/common/collect/ImmutableSortedMap/copyOf(java.util.Map)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/util/List/iterator()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/lang/StringBuilder/append(java.lang.CharSequence)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/util/Iterator/next()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#org/apache/calcite/sql/SqlDialect$DatabaseProduct/getDialect()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#org/apache/calcite/sql/SqlAggFunction/getName()
org/apache/calcite/materialize/Lattice/sql(org.apache.calcite.util.ImmutableBitSet,boolean,java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/materialize/Lattice/inputField(java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/Class/getSimpleName()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalProject/getInput()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/Object/getClass()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getRight()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/materialize/Lattice/populate(java.util.List,java.util.List,org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/Iterator/next()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/lang/Iterable/iterator()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/BitSet/set(int)
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/List/size()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/BitSet/cardinality()
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/util/BitSet/set(int,int,boolean)
org/apache/calcite/rel/rules/PushProjector/locateAllRefs()#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/BitSet/nextSetBit(int)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/List/size()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/List/get(int)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/List/iterator()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/PushProjector/createProjectRefsAndExprs(org.apache.calcite.rel.RelNode,boolean,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/lang/Class/getSimpleName()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Map/values()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/lang/Object/getClass()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Collection/iterator()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#org/apache/calcite/plan/volcano/VolcanoRuleMatch/getRule()
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/addMatch(org.apache.calcite.plan.volcano.VolcanoRuleMatch)#org/apache/calcite/plan/volcano/VolcanoPlannerPhase/toString()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#com/google/common/collect/Multimap/remove(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/append(double)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/List/remove(int)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/List/isEmpty()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/util/Comparator/compare(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/popMatch(org.apache.calcite.plan.volcano.VolcanoPlannerPhase)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/lang/Double/valueOf(double)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/lang/Math/min(double,double)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Iterator/remove()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/lang/Double/doubleValue()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Set/iterator()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RuleQueue/boostImportance(java.util.Collection,double)#java/util/Collection/iterator()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#com/google/common/collect/Ordering/sortedCopy(java.lang.Iterable)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#org/apache/calcite/plan/volcano/RelSubset/toString()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/Iterator/hasNext()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/Iterator/next()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/Map/keySet()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/util/List/iterator()
org/apache/calcite/plan/volcano/RuleQueue/dump(java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getTraitSet()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Sort/getTraitSet()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/SortUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/Class/getInterfaces()
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/Class/getSuperclass()
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/reflect/Method/equals(java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/ReflectUtil/lookupVisitMethod(java.lang.Class,java.lang.Class,java.lang.String,java.lang.Class[],java.util.Map)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/ifThenElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rowInPartition(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/negate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/rowTranslator(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/exitBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/nestBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$LeadLagImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalMinus/getRowType()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/PruneEmptyRules$2/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#com/google/common/collect/ImmutableList/of()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#org/apache/calcite/linq4j/Linq4j/product(java.lang.Iterable)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/util/Iterator/next()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/util/Set/isEmpty()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/lang/Iterable/iterator()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#com/google/common/collect/Sets/newTreeSet(java.util.Comparator)
org/apache/calcite/sql/validate/AggregatingSelectScope/resolve()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList/of()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#java/util/Iterator/next()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#java/util/List/iterator()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql/validate/AggregatingSelectScope/getGroupExprs()#com/google/common/base/Supplier/get()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalValues/getRowType()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalValues/getCluster()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/List/size()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/List/get(int)
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#java/util/List/iterator()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/rel/rules/ValuesReduceRule/apply(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalFilter,org.apache.calcite.rel.logical.LogicalValues)#org/apache/calcite/rel/logical/LogicalValues/getTuples()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#com/google/common/collect/ImmutableList/of()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Map$Entry/getKey()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/List/isEmpty()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#com/google/common/collect/ImmutableSortedMap$Builder/build()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Set/iterator()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#com/google/common/collect/ImmutableSortedMap$Builder/ImmutableSortedMap$Builder(java.util.Comparator)
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/lang/AssertionError/AssertionError()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#com/google/common/collect/ImmutableSortedMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/Map$Entry/getValue()
org/apache/calcite/jdbc/CalciteSchema/getTablesBasedOnNullaryFunctions()#java/util/NavigableMap/entrySet()
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/getInput()
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/getRowType()
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/elasticsearch/ElasticsearchToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlBinaryOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlSpecialOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexSubQuery/getOperator()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/math/BigDecimal/toString()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexPatternFieldRef/getIndex()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlPrefixOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/sql/SqlSelectKeyword/symbol(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/List/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/List/iterator()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rel.core.AggregateCall)#java/util/List/toArray(java.lang.Object[])
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/rex/RexOver/getOperands()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/sql/SqlAggFunction/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#org/apache/calcite/sql/SqlBinaryOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rel2sql/SqlImplementor$Context/toSql(org.apache.calcite.rex.RexProgram,org.apache.calcite.rex.RexOver)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/handle(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/String/valueOf(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/foldAnd(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/foldOr(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/not(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$7/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/java/JavaTypeFactory/leastRestrictive(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Types/castIfNecessary(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableMergeJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferArray()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getInputs()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getVariablesSet()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/lang/Double/valueOf(double)
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/util/PriorityQueue/remove(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/lang/Double/doubleValue()
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/lang/StringBuilder/append(boolean)
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/util/PriorityQueue/peek()
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/lang/StringBuilder/append(double)
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/util/PriorityQueue/size()
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/util/Deque/pop()
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/lang/StringBuilder/toString()
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/profile/ProfilerImpl$SurpriseQueue/offer(double)#java/util/PriorityQueue/add(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/rel/core/JoinRelType/name()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/size()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/rules/MultiJoin/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/ConstantExpression/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/exitBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/size()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/foldAnd(java.util.List)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/nestBlock(org.apache.calcite.linq4j.tree.BlockBuilder,java.util.Map)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/HashMap/HashMap()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/currentBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder(boolean,org.apache.calcite.linq4j.tree.BlockBuilder)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/accumulator()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/ifThenElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/ParameterExpression/getType()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/WinAggResultContext/hasRows()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/currentBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/accumulator()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/exitBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/size()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/adapter/enumerable/AggResultContext/nestBlock()
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/StrictAggImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/getCluster()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/getRight()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SemiJoinType/toJoinType()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/getTraitSet()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Correlate/getLeft()
org/apache/calcite/rel/rules/FilterCorrelateRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/avatica/util/DateTimeUtils$PrecisionTime/getFraction()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/math/BigDecimal/BigDecimal(java.lang.String)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/avatica/util/DateTimeUtils$PrecisionTime/getCalendar()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/avatica/util/DateTimeUtils/parsePrecisionDateTimeLiteral(java.lang.String,java.text.DateFormat,java.util.TimeZone,int)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/avatica/util/ByteString/ByteString(byte[])
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/nio/charset/Charset/name()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#org/apache/calcite/avatica/util/DateTimeUtils/parseDateFormat(java.lang.String,java.text.DateFormat,java.util.TimeZone)
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexLiteral/fromJdbcString(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.sql.type.SqlTypeName,java.lang.String)#java/lang/Boolean/booleanValue()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(long)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/lang/Object/toString()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/avatica/util/ByteString/toString(int)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(boolean)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(char)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(java.lang.Object)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/math/BigDecimal/longValue()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/io/PrintWriter/print(java.lang.String)
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexLiteral/printAsJava(java.lang.Comparable,java.io.PrintWriter,org.apache.calcite.sql.type.SqlTypeName,boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/intValue()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#org/apache/calcite/avatica/util/ByteString/getBytes()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/doubleValue()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Double/valueOf(double)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Long/valueOf(long)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Byte/valueOf(byte)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/String/charAt(int)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/abs()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/longValue()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Short/valueOf(short)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Float/valueOf(float)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Class/cast(java.lang.Object)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Character/valueOf(char)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/unscaledValue()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/floatValue()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/shortValue()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/signum()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigInteger/longValue()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/Integer/valueOf(int)
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexLiteral/getValueAs(java.lang.Class)#java/math/BigDecimal/byteValue()
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/util/Iterator/next()
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/lang/StringBuilder/append(char)
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/lang/StringBuilder/length()
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/util/List/iterator()
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/math/BigDecimal/divideAndRemainder(java.math.BigDecimal)
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/lang/String/matches(java.lang.String)
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/lang/StringBuilder/setLength(int)
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/math/BigDecimal/toString()
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexLiteral/intervalString(java.math.BigDecimal)#java/lang/String/endsWith(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/handle(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/String/valueOf(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/foldOr(java.util.List)
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$8/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Set/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Set/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/getCorrelationUse(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/EnumSet/noneOf(java.lang.Class)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertOver(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Set/clear()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object[])
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/translateIn(org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/clear()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#com/google/common/base/Supplier/get()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/createAggImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$AggConverter,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlNode,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMerge(org.apache.calcite.sql.SqlMerge)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUpdate(org.apache.calcite.sql.SqlUpdate)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.fun.SqlInOperator)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.fun.SqlInOperator)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.fun.SqlInOperator)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.fun.SqlInOperator)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.fun.SqlInOperator)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.fun.SqlInOperator)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.fun.SqlInOperator)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.fun.SqlInOperator)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertInToOr(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,java.util.List,org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.fun.SqlInOperator)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/HashMap/HashMap()
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/createSource(org.apache.calcite.plan.RelOptTable,org.apache.calcite.rel.RelNode,org.apache.calcite.schema.ModifiableView,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#org/apache/calcite/prepare/Prepare$CatalogReader/nameMatcher()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertUsing(org.apache.calcite.sql.validate.SqlValidatorNamespace,org.apache.calcite.sql.validate.SqlValidatorNamespace,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertIdentifier(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlIdentifier)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#org/apache/calcite/schema/ColumnStrategy/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/remove(int)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/subList(int,int)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/collectInsertTargets(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rex.RexNode,java.util.List,java.util.List)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#org/apache/calcite/prepare/Prepare$CatalogReader/nameMatcher()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertSelectList(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlSelect,java.util.List)#java/util/TreeSet/TreeSet()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#org/apache/calcite/prepare/Prepare$CatalogReader/nameMatcher()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#com/google/common/base/Supplier/get()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertColumnList(org.apache.calcite.sql.SqlInsert,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/util/Deque/pop()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertFrom(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/substituteSubQuery(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql2rel.SqlToRelConverter$SubQuery)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter/distinctify(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,boolean)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#com/google/common/collect/Maps/newHashMap()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlMatchRecognize$AfterOption/symbol(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#org/apache/calcite/config/NullCollation/last(boolean)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/TreeSet/TreeSet()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/HashSet/HashSet()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter/convertMatchRecognize(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall)#java/util/TreeSet/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/Ord/zip(java.lang.Object[])
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/List/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/isEmpty()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/fun/SqlRowOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#java/util/Collection/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter/convertRowValues(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlNode,java.util.Collection,boolean,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/rel/logical/LogicalValues/getTuples()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter/convertValuesImpl(org.apache.calcite.sql2rel.SqlToRelConverter$Blackboard,org.apache.calcite.sql.SqlCall,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/lang/Math/max(int,int)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeName/allowsPrec()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/nio/charset/Charset/contains(java.nio.charset.Charset)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/List/size()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/isJavaType(org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveStructuredType(java.util.List)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/nio/charset/Charset/equals(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#org/apache/calcite/sql/type/SqlTypeName/allowsPrecScale(boolean,boolean)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/lang/Math/min(int,int)
org/apache/calcite/sql/type/SqlTypeFactoryImpl/leastRestrictiveSqlType(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getCluster()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/getProgram()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getNamedProjects()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/getInput()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalCalc/getRowType()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getProjects()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectCalcMergeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Short/valueOf(short)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Byte/valueOf(byte)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#org/apache/calcite/linq4j/tree/Primitive/ordinal()
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/clone/ArrayTable$BitSlicedPrimitiveArray/getObject(java.lang.Object,int)#java/lang/Character/valueOf(char)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/close()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Connection/createStatement()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/setQueryTimeout(int)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Connection/close()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#org/apache/calcite/linq4j/Linq4j/singletonEnumerator(java.lang.Object)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/Integer/valueOf(int)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/getUpdateCount()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/execute(java.lang.String)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#javax/sql/DataSource/getConnection()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/StringBuilder/toString()
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/runtime/ResultSetEnumerable/enumerator()#java/sql/Statement/getResultSet()
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Iterable/iterator()
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Set/iterator()
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptMaterializations/getApplicableMaterializations(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/base/Supplier/get()
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/base/Suppliers/memoize(com.google.common.base.Supplier)
org/apache/calcite/plan/RelOptMaterializations/useLattices(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/isEmpty()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/size()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/get(int)
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/subList(int,int)
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/plan/RelOptMaterializations/useMaterializedViews(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/util/List/size()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#com/google/common/collect/ImmutableList/copyOf(java.lang.Object[])
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/util/List/isEmpty()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/lang/reflect/Method/getReturnType()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/lang/Class/getName()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/schema/impl/AggregateFunctionImpl/create(java.lang.Class)#java/util/List/get(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#java/util/Set/addAll(java.util.Collection)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#java/util/Collections/disjoint(java.util.Collection,java.util.Collection)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#java/util/Map/values()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$EquivalenceClasses/getEquivalenceClasses()#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/getElementType()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/getCall()
org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableFunctionScan/getCluster()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Collections/emptyList()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/JoinProjectTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/result(org.apache.calcite.sql.SqlNode,java.util.Collection,org.apache.calcite.rel.RelNode,java.util.Map)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/core/TableModify$Operation/ordinal()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/core/TableModify/getInput()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/aliasContext(java.util.Map,boolean)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.TableModify)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#java/util/List/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#org/apache/calcite/rel/RelFieldCollation$Direction/isDescending()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#com/google/common/collect/ImmutableMap/entrySet()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#org/apache/calcite/sql/SqlMatchRecognize$RowsPerMatchOption/symbol(org.apache.calcite.sql.parser.SqlParserPos)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/result(org.apache.calcite.sql.SqlNode,java.util.Collection,org.apache.calcite.rel.RelNode,java.util.Map)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#org/apache/calcite/sql/SqlBinaryOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/matchRecognizeContext(org.apache.calcite.rel.rel2sql.SqlImplementor$Context)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#java/util/SortedSet/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#org/apache/calcite/rel/core/Match/getInput()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#com/google/common/collect/ImmutableSet/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#java/util/List/get(int)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Match)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/sql/SqlSpecialOperator/createCall(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/Deque/size()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/rel/core/Values/getRowType()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/sql/SqlAsOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,java.util.List)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/sql/SqlAsOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#com/google/common/collect/ImmutableMap/of()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/result(org.apache.calcite.sql.SqlNode,java.util.Collection,org.apache.calcite.rel.RelNode,java.util.Map)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/List/size()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/sql/fun/SqlRowOperator/createCall(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/lang/Iterable/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/List/get(int)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#com/google/common/collect/Iterables/get(java.lang.Iterable,int)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/rel/rel2sql/RelToSqlConverter/aliasContext(java.util.Map,boolean)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#java/util/List/iterator()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Values)#org/apache/calcite/sql/SqlSetOperator/createCall(org.apache.calcite.sql.SqlNodeList)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/lang/Integer/intValue()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/List/isEmpty()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rel2sql/RelToSqlConverter/visit(org.apache.calcite.rel.core.Aggregate)#java/util/List/iterator()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/lang/Class/getInterfaces()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/lang/Class/getSuperclass()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/concurrent/ConcurrentMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/List/iterator()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/apply(java.lang.Class)#java/util/concurrent/ConcurrentMap/get(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableMultimap/entries()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableMultimap/builder()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableCollection/iterator()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableList/contains(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider/handlers(org.apache.calcite.rel.metadata.MetadataDef)#com/google/common/collect/ImmutableMultimap$Builder/build()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlAggFunction/getKind()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/remove(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/lang/Long/valueOf(long)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Map/isEmpty()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/lang/StringBuilder/append(long)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Map/entrySet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/rewriteUsingGroupingSets(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/createSelectDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List,int,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#com/google/common/collect/Ordering/immutableSortedCopy(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Map/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/doRewrite(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,int,java.util.List,int,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/sql/SqlAggFunction/getKind()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Set/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#com/google/common/base/Preconditions/checkArgument(boolean)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/SortedSet/headSet(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/SortedSet/size()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/SortedSet/addAll(java.util.Collection)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/SortedSet/iterator()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#com/google/common/collect/Lists/newArrayList(java.lang.Object[])
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/TreeSet/TreeSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/AggregateExpandDistinctAggregatesRule/convertSingletonDistinct(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Filter/getCluster()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Filter/getRowType()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Filter,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getCluster()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Collection/iterator()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Collection/size()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Union/getInput(int)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/values()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/HashMultimap/create()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#org/apache/calcite/rel/core/Join/getInputs()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Collection/size()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/HashMap/HashMap()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/HashMultimap/create()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/RelMdAllPredicates/getAllPredicates(org.apache.calcite.rel.core.Join,org.apache.calcite.rel.metadata.RelMetadataQuery)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/rules/AggregateUnionTransposeRule/transformAggCalls(org.apache.calcite.rel.RelNode,int,java.util.List)#java/lang/Object/getClass()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/register(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.JoinRelType,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/convertExpression(org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/List/iterator()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/List/size()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#com/google/common/collect/ImmutableMap/copyOf(java.util.Map)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/Iterator/next()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/HashMap/HashMap()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/util/List/get(int)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/SqlToRelConverter$Blackboard/lookupExp(org.apache.calcite.sql.validate.SqlQualified)#java/lang/StringBuilder/toString()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Map$Entry/getKey()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#com/google/common/collect/Sets/newHashSetWithExpectedSize(int)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Set/retainAll(java.util.Collection)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Collection/size()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Collection/iterator()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/CompatibleGuava11$EntrySet/retainAll(java.util.Collection)#java/util/Map/keySet()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/isFlattened()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getTable()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getSourceExpressionList()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getCatalogReader()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getUpdateColumnList()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getOperation()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getInput()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableTableModifyRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalTableModify/getTraitSet()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCluster()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalFilter/getCondition()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getRowType()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/isEmpty()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getColumnMappings()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/iterator()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getInputs()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getElementType()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getCluster()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getCall()
org/apache/calcite/rel/rules/FilterTableFunctionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getName()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/StringBuilder/toString()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/reflect/Method/getReturnType()
org/apache/calcite/util/BarfingInvocationHandler/noMethod(java.lang.reflect.Method)#java/lang/Class/getName()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/size()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Sort/explainTerms(org.apache.calcite.rel.RelWriter)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/lang/Iterable/iterator()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/lang/Integer/valueOf(int)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/List/contains(java.lang.Object)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/rel/core/Sort/getInput()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/List/isEmpty()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/List/size()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#java/lang/AssertionError/AssertionError()
org/apache/calcite/tools/RelBuilder/sortLimit(int,int,java.lang.Iterable)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Deque/pop()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Deque/peek()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/size()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/lang/Iterable/iterator()
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/List/equals(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/project(java.lang.Iterable,java.lang.Iterable,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/SortedSet/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableSet/of()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/Integer/intValue()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/Ordering/isStrictlyOrdered(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/Iterables/isEmpty(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/subList(int,int)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/size()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/Double/doubleValue()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/Iterable/iterator()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/util/Deque/pop()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/AssertionError/AssertionError()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/Boolean/booleanValue()
org/apache/calcite/tools/RelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,java.lang.Iterable)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/util/Deque/pop()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/util/Set/size()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/sql/SemiJoinType/of(org.apache.calcite.rel.core.JoinRelType)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#org/apache/calcite/rel/core/JoinRelType/ordinal()
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#org/apache/calcite/rel/core/Values/getRowType()
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#java/util/List/size()
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#java/util/List/equals(java.lang.Object)
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#java/util/Deque/pop()
org/apache/calcite/tools/RelBuilder/rename(java.util.List)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/tools/RelBuilder/values(java.lang.String[],java.lang.Object[])#org/apache/calcite/linq4j/Ord/zip(java.lang.Object[])
org/apache/calcite/tools/RelBuilder/values(java.lang.String[],java.lang.Object[])#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/values(java.lang.String[],java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/values(java.lang.String[],java.lang.Object[])#java/lang/StringBuilder/append(int)
org/apache/calcite/tools/RelBuilder/values(java.lang.String[],java.lang.Object[])#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/values(java.lang.String[],java.lang.Object[])#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/values(java.lang.String[],java.lang.Object[])#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/values(java.lang.String[],java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/values(java.lang.String[],java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#com/google/common/collect/ImmutableSet/contains(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/field(int,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/util/LinkedList/LinkedList()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/setOp(boolean,org.apache.calcite.sql.SqlKind,int)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#java/lang/Iterable/iterator()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/RelFieldCollation$Direction/defaultNullDirection()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#java/util/Deque/push(java.lang.Object)
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/RelBuilder/match(org.apache.calcite.rex.RexNode,boolean,boolean,java.util.Map,java.lang.Iterable,org.apache.calcite.rex.RexNode,java.util.Map,boolean,java.lang.Iterable,java.lang.Iterable,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/math/BigDecimal/valueOf(double)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/Number/longValue()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/Boolean/booleanValue()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/Number/doubleValue()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/tools/RelBuilder/literal(java.lang.Object)#java/lang/Object/getClass()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rex/RexSubQuery/getOperands()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object[])
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/Iterator/next()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/Set/isEmpty()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/rex/RexSubQuery/getKind()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/plan/RelOptUtil$Logic/ordinal()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#java/util/List/iterator()
org/apache/calcite/rel/rules/SubQueryRemoveRule/apply(org.apache.calcite.rex.RexSubQuery,java.util.Set,org.apache.calcite.plan.RelOptUtil$Logic,org.apache.calcite.tools.RelBuilder,int,int)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/ensureType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rex.RexNode,boolean)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/ensureScale(org.apache.calcite.rex.RexNode,int,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/scaleDown(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/util/List/size()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/decodeValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/isA(org.apache.calcite.sql.SqlKind)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/scaleDownDouble(org.apache.calcite.rex.RexNode,int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CastExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/DateRangeRules/replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/DateRangeRules/replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)#com/google/common/collect/ImmutableSortedSet$Builder/addAll(java.lang.Iterable)
org/apache/calcite/rel/rules/DateRangeRules/replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)#com/google/common/collect/ImmutableSortedSet/naturalOrder()
org/apache/calcite/rel/rules/DateRangeRules/replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)#com/google/common/collect/ImmutableSortedSet/contains(java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules/replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)#java/util/Iterator/next()
org/apache/calcite/rel/rules/DateRangeRules/replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/DateRangeRules/replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)#com/google/common/collect/ImmutableSortedSet$Builder/build()
org/apache/calcite/rel/rules/DateRangeRules/replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)#com/google/common/collect/ImmutableSortedSet$Builder/add(java.lang.Object)
org/apache/calcite/rel/rules/DateRangeRules/replaceTimeUnits(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexNode,java.lang.String)#com/google/common/collect/ImmutableSortedSet/iterator()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/linq4j/Enumerable/select(org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/util/List/isEmpty()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/util/List/get(int)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/lang/AssertionError/AssertionError()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/lang/Integer/intValue()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#java/util/Iterator/next()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/core/TableScan/getRowType()
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/linq4j/Enumerable/where(org.apache.calcite.linq4j.function.Predicate1)
org/apache/calcite/interpreter/TableScanNode/createEnumerable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,org.apache.calcite.linq4j.Enumerable,org.apache.calcite.util.ImmutableIntList,java.util.List,org.apache.calcite.util.ImmutableIntList)#org/apache/calcite/rel/core/TableScan/getCluster()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/lang/Integer/intValue()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/util/List/iterator()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/util/Iterator/next()
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#com/google/common/collect/ImmutableList/contains(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#java/lang/Integer/valueOf(int)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/interpreter/TableScanNode/createProjectableFilterable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.ProjectableFilterableTable)#org/apache/calcite/util/ImmutableIntList/contains(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/lang/reflect/Modifier/isPublic(int)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/lang/Class/getFields()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#org/apache/calcite/linq4j/Queryable/select(org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/util/Iterator/next()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/lang/reflect/Field/getModifiers()
org/apache/calcite/interpreter/TableScanNode/createQueryable(org.apache.calcite.interpreter.Compiler,org.apache.calcite.rel.core.TableScan,com.google.common.collect.ImmutableList,org.apache.calcite.util.ImmutableIntList,org.apache.calcite.schema.QueryableTable)#java/util/List/iterator()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/Object/toString()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/String/length()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/util/Collections/emptyList()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/util/Iterator/next()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/String/substring(int,int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/String/substring(int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/util/List/iterator()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/StringBuilder/toString()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/String/equalsIgnoreCase(java.lang.String)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/util/Iterator/hasNext()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/Character/isJavaIdentifierPart(char)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,int,java.lang.String[])#java/lang/String/charAt(int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#org/apache/calcite/sql/validate/SqlValidatorWithHints/validate(org.apache.calcite.sql.SqlNode)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/String/substring(int,int)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/util/List/contains(java.lang.Object)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/util/List/remove(java.lang.Object)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/advise/SqlAdvisor/getCompletionHints(java.lang.String,org.apache.calcite.sql.parser.SqlParserPos)#java/lang/String/substring(int)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$ExecuteResult/Meta$ExecuteResult(java.util.List)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$MetaResultSet/create(java.lang.String,int,boolean,org.apache.calcite.avatica.Meta$Signature,org.apache.calcite.avatica.Meta$Frame)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$PrepareCallback/getMonitor()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$StatementType/ordinal()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$PrepareCallback/execute()
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$PrepareCallback/assign(org.apache.calcite.avatica.Meta$Signature,org.apache.calcite.avatica.Meta$Frame,long)
org/apache/calcite/jdbc/CalciteMetaImpl/prepareAndExecute(org.apache.calcite.avatica.Meta$StatementHandle,java.lang.String,long,int,org.apache.calcite.avatica.Meta$PrepareCallback)#org/apache/calcite/avatica/Meta$PrepareCallback/clear()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/lang/Long/valueOf(long)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/List/size()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/List/get(int)
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#org/apache/calcite/avatica/Meta$ExecuteBatchResult/Meta$ExecuteBatchResult(long[])
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#java/util/List/iterator()
org/apache/calcite/jdbc/CalciteMetaImpl/executeBatch(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List)#com/google/common/primitives/Longs/toArray(java.util.Collection)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#java/util/ArrayList/ArrayList()
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#java/util/Collections/emptyMap()
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#java/lang/Class/getField(java.lang.String)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#org/apache/calcite/avatica/Meta$CursorFactory/record(java.lang.Class,java.util.List,java.util.List)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#java/util/List/size()
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#java/lang/reflect/Field/getType()
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#org/apache/calcite/avatica/AvaticaUtils/toCamelCase(java.lang.String)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#org/apache/calcite/avatica/Meta$Frame/Meta$Frame(long,boolean,java.lang.Iterable)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#org/apache/calcite/jdbc/CalciteMetaImpl/columnMetaData(java.lang.String,int,java.lang.Class,boolean)
org/apache/calcite/jdbc/CalciteMetaImpl/createResultSet(org.apache.calcite.linq4j.Enumerable,java.lang.Class,java.lang.String[])#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$StatementType/canUpdate()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$ExecuteResult/Meta$ExecuteResult(java.util.List)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$MetaResultSet/create(java.lang.String,int,boolean,org.apache.calcite.avatica.Meta$Signature,org.apache.calcite.avatica.Meta$Frame)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#java/lang/Iterable/iterator()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$MetaResultSet/count(java.lang.String,int,long)
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#java/util/Collections/emptyList()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#java/util/Iterator/next()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#java/lang/Number/intValue()
org/apache/calcite/jdbc/CalciteMetaImpl/execute(org.apache.calcite.avatica.Meta$StatementHandle,java.util.List,int)#org/apache/calcite/avatica/Meta$Frame/Meta$Frame(long,boolean,java.lang.Iterable)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/sql/type/SqlTypeName/getJdbcOrdinal()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/sql/type/SqlTypeName/values()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/avatica/MetaImpl$MetaTypeInfo/MetaImpl$MetaTypeInfo(java.lang.String,int,java.lang.Integer,java.lang.String,java.lang.String,short,boolean,short,boolean,boolean,boolean,java.lang.Short,java.lang.Short,java.lang.Integer)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/sql/type/SqlTypeName/getMinScale()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/adapter/java/JavaTypeFactory/getTypeSystem()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#org/apache/calcite/sql/type/SqlTypeName/getName()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#java/lang/Short/valueOf(short)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/jdbc/CalciteMetaImpl/getAllDefaultType()#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Integer/toString(int)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/List/size()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/util/Map/size()
org/apache/calcite/rel/externalize/RelJsonWriter/explain_(org.apache.calcite.rel.RelNode,java.util.List)#java/lang/Object/getClass()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/Class/getInterfaces()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/Class/getSuperclass()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space/find(java.lang.Class,java.lang.reflect.Method)#java/lang/StringBuilder/toString()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/size()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Set/iterator()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/remove(int)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/get(int)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/List/contains(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/PartiallyOrderedSet/add(java.lang.Object)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/size()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Map/values()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/get(int)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/contains(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/HashMap/HashMap()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/Collection/iterator()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/PartiallyOrderedSet/isValid(boolean)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Collections/emptyList()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Collection/size()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/ArrayDeque/ArrayDeque(java.util.Collection)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Deque/pop()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Deque/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/descendants(java.lang.Object,boolean)#java/util/Collection/iterator()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/HashSet/HashSet()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Deque/pop()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Deque/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/isDescendantOfAny(org.apache.calcite.util.PartiallyOrderedSet$Node,java.util.Set)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Deque/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/util/Deque/pop()
org/apache/calcite/util/PartiallyOrderedSet/findParentsChildren(java.lang.Object,java.util.Deque,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Iterator/hasNext()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/lang/StringBuilder/append(int)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Deque/addAll(java.util.Collection)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/HashSet/HashSet()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Deque/pop()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Iterator/next()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Deque/isEmpty()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/List/iterator()
org/apache/calcite/util/PartiallyOrderedSet/out(java.lang.StringBuilder)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/ArrayList/ArrayList()
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/Iterator/hasNext()
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/Deque/poll()
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/Set/add(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/List/size()
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/Iterator/next()
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/Deque/isEmpty()
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/List/add(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/Queue/poll()
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#com/google/common/base/Predicate/apply(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/List/iterator()
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/nextBatch(int)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/lang/Integer/intValue()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/Iterator/hasNext()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/Queue/add(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/Iterator/next()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/Set/iterator()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/List/get(int)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/lang/StringBuilder/append(double)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/Set/add(java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/lang/StringBuilder/toString()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/BitSet/or(java.util.BitSet)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/lang/StringBuilder/append(int)
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/List/size()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/Map/size()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#com/google/common/collect/ImmutableSortedSet/toString()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/lang/Iterable/iterator()
org/apache/calcite/profile/ProfilerImpl$Run/pass(int,java.util.List,java.lang.Iterable)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/startIndex()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/compareRows(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/lessThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/exitBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/greaterThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$RankImplementor/implementNotNullAdd(org.apache.calcite.adapter.enumerable.WinAggContext,org.apache.calcite.adapter.enumerable.WinAggAddContext)#org/apache/calcite/adapter/enumerable/WinAggAddContext/nestBlock()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])#java/lang/StringBuilder/toString()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])#java/util/Iterator/next()
org/apache/calcite/sql/type/SqlTypeUtil/flattenRecordType(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.rel.type.RelDataType,int[])#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/List/size()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/lang/Iterable/iterator()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/nio/charset/Charset/equals(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/type/SqlTypeUtil/isCharTypeComparable(java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/StandardConvertletTable$GreatestConvertlet/convertCall(org.apache.calcite.sql2rel.SqlRexContext,org.apache.calcite.sql.SqlCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Integer/intValue()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/List/isEmpty()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdDistinctRowCount/getDistinctRowCount(org.apache.calcite.rel.core.Project,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.util.ImmutableBitSet,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/util/List/iterator()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/rel/core/Uncollect/deriveUncollectRowType(org.apache.calcite.rel.RelNode,boolean)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableJoin/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions$FluentList/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferArray()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause[])#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause[])#org/apache/calcite/linq4j/tree/Expressions$FluentList/addAll(java.util.Collection)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause[])#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause[])#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendAll(java.lang.Object[])
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause[])#org/apache/calcite/rel/rel2sql/SqlImplementor$Clause/ordinal()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause[])#com/google/common/collect/ImmutableSet/of(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause[])#java/util/Map/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause[])#com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$Result/builder(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.rel2sql.SqlImplementor$Clause[])#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#com/google/common/collect/ImmutableSetMultimap/get(java.lang.Object)
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Set/iterator()
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/dialect/JethroDataSqlDialect/supportsFunction(org.apache.calcite.sql.SqlOperator,org.apache.calcite.rel.type.RelDataType,java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createTopProject(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/List/listIterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/ListIterator/remove()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/ListIterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/ListIterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/addFilters(org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptJoinTree,int,org.apache.calcite.rel.rules.LoptJoinTree,java.util.List,boolean)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/clear()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableOuterJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Set/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/TreeSet/toArray(java.lang.Object[])
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/TreeSet/TreeSet()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/TreeSet/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/TreeSet/addAll(java.util.Collection)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/Map/keySet()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/contains(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/findRemovableSelfJoins(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.LoptMultiJoin)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/List/iterator()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/core/SemiJoin/getLeftKeys()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#org/apache/calcite/rel/core/SemiJoin/getRightKeys()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/util/List/contains(java.lang.Object)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createReplacementSemiJoin(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,org.apache.calcite.rel.rules.LoptJoinTree,int,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/and(java.util.BitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/clear(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/set(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/get(int)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/or(java.util.BitSet)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/List/size()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/cardinality()
org/apache/calcite/rel/rules/LoptOptimizeJoinRule/createOrdering(org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.rules.LoptMultiJoin,org.apache.calcite.rel.rules.LoptSemiJoinOptimizer,int)#java/util/BitSet/BitSet(int)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCluster()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/getTraitSet()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/FilterSetOpTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/SetOp/getRowType()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/lang/Object/toString()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object[])
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/Iterator/hasNext()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/lang/Double/valueOf(double)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/List/subList(int,int)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/List/size()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/List/get(int)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/List/iterator()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/lang/Math/sqrt(double)
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/Iterator/next()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/lang/Long/longValue()
org/apache/calcite/util/Benchmark$Statistician/printDurations()#java/util/Collections/sort(java.util.List)
org/apache/calcite/profile/ProfilerImpl$HllCollector/add(java.lang.Comparable)#com/yahoo/sketches/hll/HllSketch/update(long[])
org/apache/calcite/profile/ProfilerImpl$HllCollector/add(java.lang.Comparable)#com/yahoo/sketches/hll/HllSketch/update(long)
org/apache/calcite/profile/ProfilerImpl$HllCollector/add(java.lang.Comparable)#java/lang/Object/toString()
org/apache/calcite/profile/ProfilerImpl$HllCollector/add(java.lang.Comparable)#com/yahoo/sketches/hll/HllSketch/update(double)
org/apache/calcite/profile/ProfilerImpl$HllCollector/add(java.lang.Comparable)#java/lang/Float/floatValue()
org/apache/calcite/profile/ProfilerImpl$HllCollector/add(java.lang.Comparable)#com/yahoo/sketches/hll/HllSketch/update(java.lang.String)
org/apache/calcite/profile/ProfilerImpl$HllCollector/add(java.lang.Comparable)#java/lang/Number/longValue()
org/apache/calcite/profile/ProfilerImpl$HllCollector/add(java.lang.Comparable)#java/lang/Long/longValue()
org/apache/calcite/profile/ProfilerImpl$HllCollector/add(java.lang.Comparable)#java/lang/Double/doubleValue()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setDebuggingInformation(boolean,boolean,boolean)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/createInstance(java.io.Reader)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/ICompilerFactory/newClassBodyEvaluator()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setClassName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setImplementedInterfaces(java.lang.Class[])
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/CompilerFactoryFactory/getDefaultCompilerFactory()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#java/lang/Class/getClassLoader()
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setParentClassLoader(java.lang.ClassLoader)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableInterpretable/getBindable(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String,int)#org/codehaus/commons/compiler/IClassBodyEvaluator/setExtendedClass(java.lang.Class)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/lang/String/split(java.lang.String)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/util/Collection/size()
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/lang/Class/cast(java.lang.Object)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#org/apache/calcite/config/CalciteConnectionProperty/wrap(java.util.Properties)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/util/Collection/add(java.lang.Object)
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#org/apache/calcite/avatica/ConnectionConfigImpl$PropEnv/getString()
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/util/Collection/toArray(java.lang.Object[])
org/apache/calcite/config/CalciteConnectionConfigImpl/fun(java.lang.Class,java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#org/apache/calcite/linq4j/tree/ConstantExpression/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow$2$1/computeIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.WinAggImplementor$SeekType)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#org/apache/calcite/avatica/util/DateTimeUtils$PrecisionTime/getCalendar()
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#org/apache/calcite/avatica/util/DateTimeUtils/parsePrecisionDateTimeLiteral(java.lang.String,java.text.DateFormat,java.util.TimeZone,int)
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/util/Calendar/setTimeZone(java.util.TimeZone)
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/util/TimeZone/getID()
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/util/Calendar/get(int)
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/lang/String/indexOf(int)
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/lang/String/substring(int,int)
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
org/apache/calcite/util/TimestampWithTimeZoneString/withTimeZone(java.util.TimeZone)#java/lang/String/substring(int)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Map$Entry/getKey()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/List/size()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Iterator/next()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Map$Entry/getValue()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Map/entrySet()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Map/get(java.lang.Object)
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/Set/iterator()
org/apache/calcite/plan/RexImplicationChecker/checkSupport(org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder,org.apache.calcite.plan.RexImplicationChecker$InputUsageFinder)#java/util/List/get(int)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/Sets/cartesianProduct(java.util.List)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Map$Entry/getKey()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Set/iterator()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Map$Entry/getValue()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableSet/builder()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableSet$Builder/build()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableSet$Builder/add(java.lang.Object)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#java/util/Map/entrySet()
org/apache/calcite/plan/RexImplicationChecker/implies2(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/type/RelDataTypeFactory$FieldInfoBuilder/build()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/java/JavaTypeFactory/builder()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/predicate(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rex.RexNode)#org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferArray()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableThetaJoin/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/String/length()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/List/size()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/StringBuilder/StringBuilder(int)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/List/get(int)
org/apache/calcite/util/NlsString/concat(java.util.List)#java/util/List/iterator()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/util/NlsString/concat(java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Set/iterator()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/List/get(int)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Map/entrySet()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/List/size()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Iterator/next()
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rel2sql/SqlImplementor$AliasContext/field(int)#java/util/Map$Entry/getValue()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map$Entry/getKey()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/get(java.lang.Object)
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Set/removeAll(java.util.Collection)
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/values()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Set/iterator()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map$Entry/getValue()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/entrySet()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Map/keySet()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/List/iterator()
org/apache/calcite/util/graph/TopologicalOrderIterator/populate(java.util.Map,java.util.List)#java/util/Collection/iterator()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableModify/getOperation()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Types/toClass(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/rel/core/TableModify$Operation/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableModify/getInput()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableModify/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableTableModify/getCluster()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/greaterThanOrEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression,boolean)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableTableModify/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getCluster()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getTraitSet()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/reduceExpressions(org.apache.calcite.rel.RelNode,java.util.List,org.apache.calcite.plan.RelOptPredicateList,boolean,boolean)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Calc/getInput()
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ReduceExpressionsRule$CalcReduceExpressionsRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/nio/ByteBuffer/clear()
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#com/yahoo/sketches/hll/HllSketch/update(byte[])
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/lang/String/getBytes(java.nio.charset.Charset)
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/util/List/get(int)
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/nio/ByteBuffer/position()
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/nio/ByteBuffer/put(byte[])
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/lang/Object/toString()
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/nio/ByteBuffer/put(byte)
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/nio/ByteBuffer/putFloat(float)
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/nio/ByteBuffer/putLong(long)
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/nio/ByteBuffer/putDouble(double)
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/lang/Long/longValue()
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/util/Arrays/copyOf(byte[],int)
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/lang/Double/doubleValue()
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/lang/Float/floatValue()
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/nio/ByteBuffer/array()
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/nio/ByteBuffer/putInt(int)
org/apache/calcite/profile/ProfilerImpl$HllCompositeCollector/add(java.util.List)#java/lang/Boolean/booleanValue()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/Integer/intValue()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/util/Iterator/hasNext()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/util/Iterator/next()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/util/List/iterator()
org/apache/calcite/schema/impl/StarTable/columnOffset(org.apache.calcite.schema.Table)#java/lang/StringBuilder/toString()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/util/Iterator/hasNext()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/append(int)
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/util/Iterator/next()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#org/apache/calcite/util/mapping/Mappings$AbstractMapping/size()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/append(char)
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#org/apache/calcite/util/mapping/Mappings$AbstractMapping/iterator()
org/apache/calcite/util/mapping/Mappings$AbstractMapping/toString()#java/lang/StringBuilder/toString()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/Map$Entry/getKey()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/lang/String/toUpperCase(java.util.Locale)
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/NavigableMap/get(java.lang.Object)
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/Iterator/next()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/NavigableMap/subMap(java.lang.Object,boolean,java.lang.Object,boolean)
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/Set/iterator()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/List/iterator()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/List/isEmpty()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/Map$Entry/getValue()
org/apache/calcite/util/NameMultimap/range(java.lang.String,boolean)#java/util/NavigableMap/entrySet()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/List/isEmpty()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap$Builder/build()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Iterator/next()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/lang/Iterable/iterator()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#com/google/common/collect/ImmutableSortedMap/containsKey(java.lang.Object)
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/lang/System/currentTimeMillis()
org/apache/calcite/jdbc/CachingCalciteSchema/addImplicitTablesBasedOnNullaryFunctionsToBuilder(com.google.common.collect.ImmutableSortedMap$Builder)#java/util/Collection/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/ConstantExpression/toString()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/math/BigDecimal/valueOf(long)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/list()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/util/Map/get(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expression/getNodeType()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendIfNotNull(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/Number/longValue()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/Boolean/booleanValue()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/Number/doubleValue()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/ExpressionType/ordinal()
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions$FluentList/appendAll(java.lang.Iterable)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#java/math/BigDecimal/valueOf(double)
org/apache/calcite/prepare/CalcitePrepareImpl$EmptyScalarTranslator/toRex(org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/PseudoField/getName()
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#java/util/Set/size()
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#java/util/Iterator/next()
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#java/util/Set/iterator()
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#java/util/List/get(int)
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#org/apache/calcite/runtime/FlatLists$ComparableList/size()
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#org/apache/calcite/runtime/FlatLists$ComparableList/get(int)
org/apache/calcite/profile/ProfilerImpl$CompositeCollector/add(java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/ListIterator/hasNext()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/size()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/ListIterator/next()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/get(int)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#org/apache/calcite/sql/advise/SqlSimpleParser$TokenType/ordinal()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/remove(int)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/subList(int,int)
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/ListIterator/previous()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/clear()
org/apache/calcite/sql/advise/SqlSimpleParser/consumeSelect(java.util.ListIterator,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/List/listIterator()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/util/List/iterator()
org/apache/calcite/sql/advise/SqlSimpleParser/simplifySql(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#java/util/List/size()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#java/util/Iterator/next()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/interpreter/ValuesNode/createRows(org.apache.calcite.interpreter.Compiler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getVariablesSet()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getTraitSet()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getCondition()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getJoinType()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getLeft()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalJoin/getRight()
org/apache/calcite/interpreter/Bindables$BindableJoinRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/handleNull(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/handle(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/handleNull(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/handleNull(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/handleNull(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/handleNull(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/handleNull(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/handleNull(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/handleNull(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/handleNull(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/java/JavaTypeFactory/getTypeSystem()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/sql/type/SqlTypeFamily/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/sql/type/SqlTypeName/getEndUnit()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#java/lang/Math/pow(double,double)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateCast(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/isBox(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateList(java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/function/Function1/apply(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/rex/RexCorrelVariable/getName()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translate0(org.apache.calcite.rex.RexNode,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs,java.lang.reflect.Type)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression,boolean)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateConstructor(java.util.List,org.apache.calcite.sql.SqlKind)#org/apache/calcite/linq4j/tree/Expressions/box(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/math/BigDecimal/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Primitive/ofBoxOr(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/Object/getClass()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Primitive/number(java.lang.Number)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/translateLiteral(org.apache.calcite.rex.RexLiteral,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/UnaryExpression/getType()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/box(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Primitive)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/ofBox(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/equal(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/unbox(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Primitive)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/ordinal()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/of(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexToLixTranslator/convert(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type,java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/lang/Integer/intValue()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/Iterator/hasNext()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/fields()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/peek(int,int)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/size()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/build()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/iterator()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/join(org.apache.calcite.rel.core.JoinRelType,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/aggregateCall(org.apache.calcite.sql.SqlAggFunction,boolean,boolean,org.apache.calcite.rex.RexNode,java.lang.String,org.apache.calcite.rex.RexNode[])
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/push(org.apache.calcite.rel.RelNode)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/ArrayList/ArrayList()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/isEmpty()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/equals(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/Iterator/next()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/field(int,int,int)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/aggregate(org.apache.calcite.tools.RelBuilder$GroupKey,org.apache.calcite.tools.RelBuilder$AggCall[])
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/linq4j/Ord/reverse(java.lang.Iterable)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/lang/Iterable/iterator()
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#org/apache/calcite/tools/PigRelBuilder/and(java.lang.Iterable)
org/apache/calcite/tools/PigRelBuilder/group(org.apache.calcite.tools.PigRelBuilder$GroupOption,org.apache.calcite.tools.PigRelBuilder$Partitioner,int,java.lang.Iterable)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getInput(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getCluster()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/isEmpty()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/HashMap/HashMap()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/linq4j/Ord/zip(java.lang.Iterable)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Iterable/iterator()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AggregateJoinTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Boolean/booleanValue()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Iterator/hasNext()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Multimap/remove(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Sets/newLinkedHashSet()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Set/iterator()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map$Entry/getValue()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map$Entry/getKey()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/PriorityQueue/add(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map/get(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/LinkedHashSet/addAll(java.util.Collection)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Iterator/next()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/PriorityQueue/peek()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/List/add(java.lang.Object)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/List/iterator()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Collection/iterator()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/PriorityQueue/PriorityQueue(int,java.util.Comparator)
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map/entrySet()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/PriorityQueue/isEmpty()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/lang/AssertionError/AssertionError()
org/apache/calcite/materialize/MaterializationService/defineTile(org.apache.calcite.materialize.Lattice,org.apache.calcite.util.ImmutableBitSet,java.util.List,org.apache.calcite.jdbc.CalciteSchema,boolean,boolean,java.lang.String,org.apache.calcite.materialize.MaterializationService$TableFactory)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/setDebuggingInformation(boolean,boolean,boolean)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/createInstance(java.io.Reader)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/ICompilerFactory/newClassBodyEvaluator()
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/setClassName(java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/io/StringReader/StringReader(java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/setImplementedInterfaces(java.lang.Class[])
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/CompilerFactoryFactory/getDefaultCompilerFactory()
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#java/lang/Class/getClassLoader()
org/apache/calcite/interpreter/JaninoRexCompiler/getScalar(org.apache.calcite.linq4j.tree.ClassDeclaration,java.lang.String)#org/codehaus/commons/compiler/IClassBodyEvaluator/setParentClassLoader(java.lang.ClassLoader)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/toString(java.util.List,java.lang.String,boolean)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/classDecl(int,java.lang.String,java.lang.reflect.Type,java.util.List,java.util.List)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/newArrayBounds(java.lang.reflect.Type,int,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/arrayIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#java/lang/reflect/Method/getName()
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#java/lang/Integer/valueOf(int)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/baz(org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.BlockStatement)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/arrayIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Field)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/valueOf(int)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/interpreter/JaninoRexCompiler/compile(java.util.List,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rel/core/Values/assertRowType()#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/core/Values/assertRowType()#java/util/List/size()
org/apache/calcite/rel/core/Values/assertRowType()#java/util/Iterator/next()
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Values/assertRowType()#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/core/Values/assertRowType()#java/util/List/iterator()
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/core/Values/assertRowType()#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/lang/StringBuilder/append(int)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/Iterator/next()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/List/iterator()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/rel/type/RelRecordType/getFieldCount()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#org/apache/calcite/rel/type/RelRecordType/getFieldList()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/Map/size()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(org.apache.calcite.rel.type.RelRecordType)#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$ArrayType/maximumCardinality()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$MapType/getValueType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/ofBox(java.lang.reflect.Type)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive$Flavor/ordinal()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createArrayType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createMapType(org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$ArrayType/getComponentType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/Class/isArray()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$ArrayType/componentIsNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createMultisetType(org.apache.calcite.rel.type.RelDataType,long)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/Class/getComponentType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$MapType/keyIsNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$MapType/valueIsNullable()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createJavaType(java.lang.Class)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Primitive/flavor(java.lang.reflect.Type)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/linq4j/tree/Types$MapType/getKeyType()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createType(java.lang.reflect.Type)#org/apache/calcite/jdbc/JavaTypeFactoryImpl/createTypeWithNullability(org.apache.calcite.rel.type.RelDataType,boolean)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/List/isEmpty()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/Iterator/next()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/List/iterator()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/List/size()
org/apache/calcite/jdbc/JavaTypeFactoryImpl/createSyntheticType(java.util.List)#java/util/Map/size()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/Collections/nCopies(int,java.lang.Object)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql/validate/IdentifierNamespace/validateImpl(org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlIdentifier/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateMatchRecognize(org.apache.calcite.sql.SqlCall)#java/util/Map$Entry/getValue()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateMatchRecognize(org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateMatchRecognize(org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateMatchRecognize(org.apache.calcite.sql.SqlCall)#java/util/Map$Entry/getKey()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateMatchRecognize(org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateMatchRecognize(org.apache.calcite.sql.SqlCall)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateMatchRecognize(org.apache.calcite.sql.SqlCall)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateMatchRecognize(org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateMatchRecognize(org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/validate/SelectScope/resolve(java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,boolean,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/Map$Entry/getKey()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/Map$Entry/getValue()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/expandStar(java.util.List,java.util.Set,java.util.List,boolean,org.apache.calcite.sql.validate.SelectScope,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlIdentifier/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigInteger/valueOf(long)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigDecimal/unscaledValue()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigInteger/equals(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigDecimal/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#org/apache/calcite/sql/SqlLiteral/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/util/Calendar/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateLiteral(org.apache.calcite.sql.SqlLiteral)#java/math/BigInteger/longValue()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/HashSet/HashSet()
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/createTargetRowType(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNodeList,boolean)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql/validate/SqlValidatorImpl/getTableConstructorRowType(org.apache.calcite.sql.SqlCall,org.apache.calcite.sql.validate.SqlValidatorScope)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlBinaryOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SqlValidatorImpl/rewriteUpdateToMerge(org.apache.calcite.sql.SqlUpdate,org.apache.calcite.sql.SqlNode)#org/apache/calcite/sql/SqlUpdate/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#com/google/common/collect/ImmutableList/subList(int,int)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/Collection/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#org/apache/calcite/sql/SqlIdentifier/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/lookupFromHints(org.apache.calcite.sql.SqlNode,org.apache.calcite.sql.validate.SqlValidatorScope,org.apache.calcite.sql.parser.SqlParserPos,java.util.Collection)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/Set/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#com/google/common/collect/Sets/newHashSet()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/SqlNodeList/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateSelectList(org.apache.calcite.sql.SqlNodeList,org.apache.calcite.sql.SqlSelect,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkConstraint(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/intValue()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkConstraint(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkConstraint(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkConstraint(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkConstraint(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#org/apache/calcite/sql/validate/SqlValidatorTable/unwrap(java.lang.Class)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkConstraint(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkConstraint(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/Map/keySet()
org/apache/calcite/sql/validate/SqlValidatorImpl/checkConstraint(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/checkConstraint(org.apache.calcite.sql.validate.SqlValidatorTable,org.apache.calcite.sql.SqlNode,org.apache.calcite.rel.type.RelDataType)#java/util/List/get(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#org/apache/calcite/sql/SqlNodeList/getParserPosition()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/validateDefinitions(org.apache.calcite.sql.SqlMatchRecognize,org.apache.calcite.sql.validate.MatchRecognizeScope)#org/apache/calcite/sql/SqlAsOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlUnresolvedFunction/getFunctionType()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/lang/Integer/toString(int)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/List/size()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/sql/SqlUnresolvedFunction/getNameAsId()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#org/apache/calcite/linq4j/Ord/zip(java.lang.Iterable)
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/lang/Iterable/iterator()
org/apache/calcite/sql/validate/SqlValidatorImpl/performUnconditionalRewrites(org.apache.calcite.sql.SqlNode,boolean)#java/util/List/get(int)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlPostfixOperator/createCall(org.apache.calcite.sql.parser.SqlParserPos,org.apache.calcite.sql.SqlNode[])
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#java/util/List/size()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/fun/SqlCoalesceFunction/validateQuantifier(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#java/util/Iterator/next()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#java/util/List/get(int)
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#java/util/List/iterator()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#java/util/Iterator/hasNext()
org/apache/calcite/sql/fun/SqlCoalesceFunction/rewriteCall(org.apache.calcite.sql.validate.SqlValidator,org.apache.calcite.sql.SqlCall)#org/apache/calcite/sql/SqlCall/getParserPosition()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/rel/type/StructKind/ordinal()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map/isEmpty()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map/size()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map/values()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Iterator/next()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map/keySet()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Collections/sort(java.util.List)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Comparator/compare(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Set/iterator()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/List/get(int)
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map$Entry/getValue()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/List/iterator()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Collection/iterator()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/util/Map/entrySet()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/validate/DelegatingScope/fullyQualify(org.apache.calcite.sql.SqlIdentifier)#org/apache/calcite/sql/SqlIdentifier/getParserPosition()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/prepare/Prepare$PreparingTable/unwrap(java.lang.Class)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/Iterator/next()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/get(int)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/iterator()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/rel/type/StructKind/ordinal()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/isEmpty()
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/subList(int,int)
org/apache/calcite/sql/validate/DelegatingScope/resolveInNamespace(org.apache.calcite.sql.validate.SqlValidatorNamespace,boolean,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/util/Map/get(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/util/Map/size()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#org/apache/calcite/linq4j/tree/Expressions/variable(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/stash(java.lang.Object,java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Types$RecordField/getType()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/constructorDecl(int,java.lang.reflect.Type,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/not(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.PseudoField)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/foldAnd(java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Types$RecordField/nullable()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/fieldDecl(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Type,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Types$RecordField/getModifiers()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/Collections/emptyList()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/classDecl(int,java.lang.String,java.lang.reflect.Type,java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/typeIs(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/equal(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Types$RecordField/getName()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/RuntimeException/getCause()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#com/google/common/collect/ImmutableList/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/classDecl(org.apache.calcite.jdbc.JavaTypeFactoryImpl$SyntheticRecordType)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Map/values()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/list(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/reflect/Method/getName()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Blocks/toFunctionBlock(org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/fieldDecl(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/methodDecl(int,java.lang.reflect.Type,java.lang.String,java.lang.Iterable,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/Collections2/transform(java.util.Collection,com.google.common.base.Function)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Collections/emptyList()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/classDecl(int,java.lang.String,java.lang.reflect.Type,java.util.List,java.util.List)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/block(java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/Iterables/concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/implementRoot(org.apache.calcite.adapter.enumerable.EnumerableRel,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalWindow/getRowType()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalWindow/getInput()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Window$RexWinAggCall/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalWindow/getTraitSet()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalWindow/getCluster()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Iterable/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getChildExps()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/ProjectWindowTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/logical/LogicalProject/getRowType()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableMultimap/builder()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableMultimap$Builder/build()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/rel/metadata/ReflectiveRelMetadataProvider$Space2/create(org.apache.calcite.rel.metadata.MetadataHandler,com.google.common.collect.ImmutableList)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/EnumSet/noneOf(java.lang.Class)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Set/remove(java.lang.Object)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Set/size()
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/rex/LogicVisitor/find(org.apache.calcite.plan.RelOptUtil$Logic,java.util.List,org.apache.calcite.rex.RexNode)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/lang/Object/equals(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/List/size()
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Iterator/next()
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Set/iterator()
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/List/remove(int)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#java/util/Set/remove(java.lang.Object)
org/apache/calcite/util/graph/Graphs$FrozenGraph/findPathsExcluding(java.lang.Object,java.lang.Object,java.util.List,java.util.Set,java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/Iterator/hasNext()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/Set/size()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/List/size()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/List/toArray(java.lang.Object[])
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/Arrays/sort(java.lang.Object[])
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/Iterator/next()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/Map/keySet()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/List/get(int)
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/List/iterator()
org/apache/calcite/adapter/clone/ColumnLoader/load(org.apache.calcite.rel.type.RelDataType,java.util.List,int[])#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/util/Arrays/fill(boolean[],boolean)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/util/Iterator/next()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/lang/String/equals(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/util/Set/iterator()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/CalcRelSplitter/chooseLevels(org.apache.calcite.rex.RexNode[],int,int[],int[])#java/util/List/iterator()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/Iterator/next()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/iterator()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/size()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/toArray(java.lang.Object[])
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#org/apache/calcite/rel/logical/LogicalCalc/getProgram()
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#com/google/common/primitives/Ints/toArray(java.util.Collection)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/util/List/get(int)
org/apache/calcite/rel/rules/CalcRelSplitter/execute()#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/io/PrintWriter/println()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/io/StringWriter/StringWriter()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/io/StringWriter/toString()
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/rel/rules/CalcRelSplitter/traceLevelExpressions(org.apache.calcite.rex.RexNode[],int[],int[],int)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalValues/getTuples()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalValues/getCluster()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalValues,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalValues/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/emptySet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#com/google/common/collect/ImmutableList/copyOf(java.lang.Iterable)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Integer/intValue()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Set/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/emptySet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Join/getInputs()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Join,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/get(int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableModify/getInput()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/emptySet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableModify/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableModify/getTraitSet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/singletonList(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableModify,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Object/getClass()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/SetOp/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.SetOp,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/util/mapping/Mapping/set(int,int)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/size()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Project/getCluster()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.core.Project,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Collections/emptySet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getTraitSet()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getElementType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getColumnMappings()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/equals(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/Object/getClass()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getInputs()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getRowType()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#org/apache/calcite/rel/logical/LogicalTableFunctionScan/getCall()
org/apache/calcite/sql2rel/RelFieldTrimmer/trimFields(org.apache.calcite.rel.logical.LogicalTableFunctionScan,org.apache.calcite.util.ImmutableBitSet,java.util.Set)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/LinkedHashMap/LinkedHashMap()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/HashMap/HashMap()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map$Entry/getKey()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Set/iterator()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map/clear()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map$Entry/getValue()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/clear()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map/entrySet()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/HashMap/HashMap()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/removeAll(java.lang.Object)
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/asMap()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/adapter/elasticsearch/ElasticsearchFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Collection/iterator()
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/System/getProperty(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#org/apache/calcite/adapter/enumerable/RexImpTable$NullAs/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable$SystemFunctionImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,org.apache.calcite.adapter.enumerable.RexImpTable$NullAs)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCollect/getInput()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableCollect/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableCollect/getRowType()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getCluster()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getInputs()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#java/util/List/get(int)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#java/util/List/iterator()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/getOutTrait()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#org/slf4j/Logger/debug(java.lang.String)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#java/util/Iterator/next()
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/jdbc/JdbcRules$JdbcJoinRule/convert(org.apache.calcite.rel.core.Join,boolean)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Set/iterator()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexLocalRef/getIndex()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Iterator/hasNext()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rel/core/Window$RexWinAggCall/getType()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/rex/RexOver/getType()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#com/google/common/collect/LinkedListMultimap/create()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/List/size()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map/size()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Iterator/next()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/HashMap/HashMap()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/IdentityHashMap/IdentityHashMap()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/List/get(int)
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#com/google/common/collect/Multimap/asMap()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/List/iterator()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Collection/iterator()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/util/Map/entrySet()
org/apache/calcite/rel/logical/LogicalWindow/create(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelTraitSet,org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.RelNode,org.apache.calcite.rex.RexProgram)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Map/get(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Map/remove(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/lang/Class/cast(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/List/get(int)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rex/RexUtil/gatherConstraint(java.lang.Class,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,java.util.Map,java.util.Set,org.apache.calcite.rex.RexBuilder)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Map$Entry/getKey()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Set/iterator()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/HashSet/HashSet()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Map/entrySet()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/HashMap/HashMap()
org/apache/calcite/rex/RexUtil/predicateConstants(java.lang.Class,org.apache.calcite.rex.RexBuilder,java.util.List)#java/util/Map$Entry/getValue()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/size()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/next()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/iterator()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexUtil/generateCastExpressions(org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/lang/Integer/intValue()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Map/get(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Iterator/next()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/AggregateNode$AccumulatorList/add(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#java/util/Map/containsKey(java.lang.Object)
org/apache/calcite/interpreter/AggregateNode$Grouping/send(org.apache.calcite.interpreter.Row)#org/apache/calcite/interpreter/AggregateNode$AccumulatorFactory/get()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/ArrayList/ArrayList()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/hasNext()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/size()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/iterator()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/HashSet/HashSet()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/Iterator/next()
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#java/util/List/get(int)
org/apache/calcite/sql/type/TableFunctionReturnTypeInference/inferReturnType(org.apache.calcite.sql.SqlOperatorBinding)#org/apache/calcite/rel/type/RelProtoDataType/apply(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/io/PrintWriter/println()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/io/PrintWriter/flush()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/util/List/iterator()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/trace(java.util.List,java.util.List,java.util.List,int,java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/io/PrintWriter/println(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/io/PrintWriter/println()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/remove()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Double/doubleValue()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/get(int)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/rules/MultiJoin/getCluster()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/io/PrintWriter/println(java.lang.String)
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/MultiJoinOptimizeBushyRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#org/apache/calcite/linq4j/Linq4j/product(java.lang.Iterable)
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/Arrays/asList(java.lang.Object[])
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/lang/Iterable/iterator()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#com/google/common/collect/Sets/newLinkedHashSet()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorUtil/cube(java.util.List)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/lang/StringBuilder/append(int)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/List/iterator()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/validate/SqlValidatorUtil/addFields(java.util.List,java.util.List,java.util.List,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/get(java.sql.DatabaseMetaData)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/get(java.sql.DatabaseMetaData)#java/util/Map/get(java.lang.Object)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/get(java.sql.DatabaseMetaData)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/get(java.sql.DatabaseMetaData)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/get(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getDatabaseProductName()
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/get(java.sql.DatabaseMetaData)#java/lang/AssertionError/AssertionError()
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/get(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getDatabaseProductVersion()
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/get(java.sql.DatabaseMetaData)#java/sql/DatabaseMetaData/getConnection()
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/get(java.sql.DatabaseMetaData)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#java/sql/ResultSet/next()
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#java/sql/ResultSet/getString(int)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#java/sql/Statement/executeQuery(java.lang.String)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#java/sql/ResultSet/close()
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#java/sql/Statement/close()
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#java/sql/Connection/createStatement()
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#com/google/common/collect/LinkedHashMultimap/create()
org/apache/calcite/sql/dialect/JethroDataSqlDialect$JethroInfoCacheImpl/makeInfo(java.sql.Connection)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makePlus(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeDivide(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/powerOfTen(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeCase(org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/decodeValue(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeExactLiteral(long)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeScaleFactor(int)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/encodeValue(org.apache.calcite.rex.RexNode,org.apache.calcite.rel.type.RelDataType)
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/expand(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/rules/ReduceDecimalsRule$CeilExpander/makeIsPositive(org.apache.calcite.rex.RexNode)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/ISimpleCompiler/getClassLoader()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/Class/getCanonicalName()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/CompilerFactoryFactory/getDefaultCompilerFactory()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/ISimpleCompiler/setParentClassLoader(java.lang.ClassLoader)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/ISimpleCompiler/cook(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/ICompilerFactory/newSimpleCompiler()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/util/List/toArray()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#org/codehaus/commons/compiler/ISimpleCompiler/setDebuggingInformation(boolean,boolean,boolean)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/ClassLoader/loadClass(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/Class/cast(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/Class/getClassLoader()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/compile(java.lang.String,java.lang.String,org.apache.calcite.rel.metadata.MetadataDef,java.util.List)#java/lang/Class/getDeclaredConstructors()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/Class/isInstance(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/util/List/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/findProvider(java.util.List,java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#org/apache/calcite/linq4j/Ord/zip(java.lang.Object[])
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/Class/getName()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/safeArgList(java.lang.StringBuilder,java.lang.reflect.Method)#java/util/List/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableMultimap/values()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/setLength(int)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getName()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Set/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/indexOf(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/Class/getSimpleName()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Set/size()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Map$Entry/getKey()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getReturnType()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/Class/getName()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(char)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableCollection/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/Multimap/asMap()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/Object/getClass()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Map$Entry/getValue()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/List/add(int,java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/List/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Collection/iterator()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/LinkedHashMultimap/create()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/HashSet/HashSet()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Map/entrySet()
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/metadata/JaninoRelMetadataProvider/load3(org.apache.calcite.rel.metadata.MetadataDef,com.google.common.collect.Multimap,com.google.common.collect.ImmutableList)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/plan/RelOptTable/unwrap(java.lang.Class)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/adapter/enumerable/EnumerableTableScan/getRowType()
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableTableScan/toRows(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/lambda(java.lang.Class,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Set/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/List/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/List/equals(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/HashSet/HashSet()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Set/add(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Set/containsAll(java.util.Collection)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/List/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/util/Collection/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/compensateViewPartial(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,java.util.Set)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Iterator/next()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Set/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/iterator()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/Set/size()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#com/google/common/collect/BiMap/inverse()
org/apache/calcite/rel/rules/AbstractMaterializedViewRule$MaterializedViewJoinRule/rewriteView(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rex.RexBuilder,org.apache.calcite.rex.RexSimplify,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$MatchModality,boolean,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,org.apache.calcite.rel.core.Project,org.apache.calcite.rel.RelNode,com.google.common.collect.BiMap,org.apache.calcite.rel.rules.AbstractMaterializedViewRule$EquivalenceClasses)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/Integer/toString(int,int)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/String/length()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/String/substring(int,int)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/sql/parser/impl/ParseException/add_escapes(java.lang.String)#java/lang/String/charAt(int)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/ArrayList/ArrayList()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/Iterator/hasNext()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/Arrays/asList(java.lang.Object[])
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/text/MessageFormat/getFormatsByArgumentIndex()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/Iterator/next()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/reflect/Method/getName()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/List/add(java.lang.Object)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/List/equals(java.lang.Object)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/ResourceBundle/getString(java.lang.String)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/StringBuilder/toString()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#org/apache/calcite/runtime/Resources$Validation/ordinal()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/ResourceBundle/containsKey(java.lang.String)
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/util/EnumSet/iterator()
org/apache/calcite/runtime/Resources$Inst/validate(java.util.EnumSet)#java/text/MessageFormat/MessageFormat(java.lang.String)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/lang/Integer/intValue()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getRowType()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/Lists/newArrayList()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getTraitSet()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Filter/getCluster()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/size()
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/rel/rules/FilterAggregateTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Aggregate/getInput(int)
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#org/apache/calcite/linq4j/function/Functions/generate(int,org.apache.calcite.linq4j.function.Function1)
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#java/util/List/size()
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#java/util/List/iterator()
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#java/util/Iterator/hasNext()
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#java/util/Iterator/next()
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#java/util/HashMap/HashMap()
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#java/lang/Integer/valueOf(int)
org/apache/calcite/sql/SqlUtil$4/test(org.apache.calcite.sql.SqlFunction)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getIndex()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/size()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/util/List/get(int)
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#java/lang/StringBuilder/toString()
org/apache/calcite/rex/RexProgramBuilder$1/visitInputRef(org.apache.calcite.rex.RexInputRef)#org/apache/calcite/rex/RexInputRef/getType()
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/negate(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/divide(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/multiply(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/sql/type/SqlTypeName/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable$DatetimeArithmeticImplementor/implement(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.rex.RexCall,java.util.List)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/ParameterExpression/getType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/is(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/String/substring(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/String/length()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Primitive/of(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/declareAndResetState(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.adapter.enumerable.EnumerableRel$Result,int,java.util.List,org.apache.calcite.adapter.enumerable.PhysType,java.util.List)#org/apache/calcite/sql/SqlAggFunction/getName()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Primitive/box(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/translateBound(org.apache.calcite.adapter.enumerable.RexToLixTranslator,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.rel.core.Window$Group,boolean,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableWindow/getInput()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lessThanOrEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/block(org.apache.calcite.linq4j.tree.Statement[])
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/while_(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/ifThenElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/ArrayList/ArrayList(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expression/equals(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/java/JavaTypeFactory/builder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/notEqual(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/isEmpty()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Arrays/asList(java.lang.Object[])
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/for_(org.apache.calcite.linq4j.tree.DeclarationStatement,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/orElse(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/for_(java.lang.Iterable,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/lessThan(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/declare(int,java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/arrayIndex(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/preIncrementAssign(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/subtract(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression,boolean)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(int,java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder(boolean,org.apache.calcite.linq4j.tree.BlockBuilder)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableWindow/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/field(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.PseudoField)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/lambda(org.apache.calcite.linq4j.tree.BlockStatement,org.apache.calcite.linq4j.tree.ParameterExpression[])
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/declare(int,java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Types$RecordType/getRecordFields()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#java/util/List/size()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/declare(int,org.apache.calcite.linq4j.tree.ParameterExpression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/convert_(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/BlockBuilder/newName(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/parameter(java.lang.reflect.Type,java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/getPartitionIterator(org.apache.calcite.linq4j.tree.BlockBuilder,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.rel.core.Window$Group,org.apache.calcite.linq4j.tree.Expression)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/Expression/getType()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/EnumerableWindow/implementResult(java.util.List,org.apache.calcite.linq4j.tree.BlockBuilder,com.google.common.base.Function,com.google.common.base.Function,boolean)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/lang/Double/valueOf(double)
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getCluster()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#java/lang/Double/doubleValue()
org/apache/calcite/rel/metadata/RelMdSelectivity/getSelectivity(org.apache.calcite.rel.core.Union,org.apache.calcite.rel.metadata.RelMetadataQuery,org.apache.calcite.rex.RexNode)#org/apache/calcite/rel/core/Union/getRowType()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Iterator/remove()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Iterator/hasNext()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#com/google/common/collect/Multiset/elementSet()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Set/size()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Collection/size()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Iterator/next()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Set/iterator()
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Collection/contains(java.lang.Object)
org/apache/calcite/util/CompatibleGuava11/removeAllImpl(java.util.Set,java.util.Collection)#java/util/Collection/iterator()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#org/codehaus/janino/JavaSourceClassLoader/generateBytecodes(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Iterator/hasNext()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Map/values()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Iterator/next()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Set/iterator()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/io/FileOutputStream/write(byte[])
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Map$Entry/getValue()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Collection/iterator()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/io/FileOutputStream/close()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Map/entrySet()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/javac/JaninoCompiler$AccountingClassLoader/generateBytecodes(java.lang.String)#java/util/Map$Entry/getKey()
org/apache/calcite/sql/validate/EmptyScope/resolve_(org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/Iterator/hasNext()
org/apache/calcite/sql/validate/EmptyScope/resolve_(org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/sql/validate/EmptyScope/resolve_(org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/Iterator/next()
org/apache/calcite/sql/validate/EmptyScope/resolve_(org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/sql/validate/EmptyScope/resolve_(org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#org/apache/calcite/sql/validate/SqlValidatorCatalogReader/unwrap(java.lang.Class)
org/apache/calcite/sql/validate/EmptyScope/resolve_(org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/equals(java.lang.Object)
org/apache/calcite/sql/validate/EmptyScope/resolve_(org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)
org/apache/calcite/sql/validate/EmptyScope/resolve_(org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#com/google/common/collect/ImmutableList/copyOf(java.util.Collection)
org/apache/calcite/sql/validate/EmptyScope/resolve_(org.apache.calcite.jdbc.CalciteSchema,java.util.List,java.util.List,org.apache.calcite.sql.validate.SqlNameMatcher,org.apache.calcite.sql.validate.SqlValidatorScope$Path,org.apache.calcite.sql.validate.SqlValidatorScope$Resolved)#java/util/List/iterator()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$TokenType/ordinal()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/size()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/clear()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/get(int)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeSelectListExcept(java.lang.String)#java/util/List/subList(int,int)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#org/apache/calcite/sql/advise/SqlSimpleParser$TokenType/ordinal()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/size()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/addAll(java.util.Collection)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/clear()
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/get(int)
org/apache/calcite/sql/advise/SqlSimpleParser$Query/purgeFromExcept(java.lang.String)#java/util/List/subList(int,int)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/apache/calcite/jdbc/CalciteSchema$TableEntry/path()
org/apache/calcite/prepare/Prepare/optimize(org.apache.calcite.rel.RelRoot,java.util.List,java.util.List)#org/slf4j/Logger/isDebugEnabled()
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setKeepAlive(boolean)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setSendBufferSize(int)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setOOBInline(boolean)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setSoLinger(boolean,int)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setTcpNoDelay(boolean)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setReceiveBufferSize(int)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setReuseAddress(boolean)
org/apache/calcite/runtime/SocketFactoryImpl/applySettings(java.net.Socket)#java/net/Socket/setSoTimeout(int)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/Map/values()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/Collection/iterator()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#com/google/common/collect/Iterables/getOnlyElement(java.lang.Iterable)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/Collection/isEmpty()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/Collection/size()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/sink(org.apache.calcite.rel.RelNode)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/size()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/Iterator/hasNext()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/Map/get(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/Iterator/next()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/get(int)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/lang/Object/getClass()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/iterator()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/visit(org.apache.calcite.rel.RelNode,int,org.apache.calcite.rel.RelNode)#java/util/List/set(int,java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/util/Map/get(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#com/google/common/collect/Multimap/get(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/lang/StringBuilder/toString()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/util/Collection/size()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/util/Map/size()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#org/apache/calcite/linq4j/Enumerable/enumerator()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/interpreter/Interpreter$CompilerImpl/source(org.apache.calcite.rel.RelNode,int)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/add(java.lang.Object)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/iterator()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/get(int)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#com/google/common/collect/ImmutableList/size()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/size()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/Set/contains(java.lang.Object)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/util/ArrayList/equals(java.lang.Object)
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/lang/AssertionError/AssertionError()
org/apache/calcite/rex/RexTransformer/transformNullSemantics(org.apache.calcite.rex.RexNode)#java/lang/Boolean/booleanValue()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/ArrayList/ArrayList()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/hasNext()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/copy(org.apache.calcite.plan.RelTraitSet,java.util.List,boolean)
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnLeft()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Set/isEmpty()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/List/iterator()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/JoinRelType/generatesNullsOnRight()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Union/getTraitSet()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#java/util/Iterator/next()
org/apache/calcite/rel/rules/JoinUnionTransposeRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)#org/apache/calcite/rel/core/Join/getTraitSet()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Iterator/hasNext()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Deque/addLast(java.lang.Object)
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/ArrayDeque/ArrayDeque()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Deque/removeFirst()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Set/add(java.lang.Object)
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Iterator/next()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Deque/isEmpty()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/List/iterator()
org/apache/calcite/util/graph/BreadthFirstIterator/reachable(java.util.Set,org.apache.calcite.util.graph.DirectedGraph,java.lang.Object)#java/util/Deque/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepRuleCall/getMetadataQuery()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/isEmpty()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/size()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/slf4j/Logger/trace(java.lang.String,java.lang.Object[])
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/get(int)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/rel/RelNode/getTraitSet()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/iterator()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/notifyTransformation(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.RelNode,boolean)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#org/apache/calcite/plan/hep/HepPlanner/getListener()
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/applyTransformationResults(org.apache.calcite.plan.hep.HepRelVertex,org.apache.calcite.plan.hep.HepRuleCall,org.apache.calcite.plan.RelTrait)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/hep/HepPlanner/getGraphIterator(org.apache.calcite.plan.hep.HepRelVertex)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/hep/HepPlanner/getGraphIterator(org.apache.calcite.plan.hep.HepRelVertex)#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/getGraphIterator(org.apache.calcite.plan.hep.HepRelVertex)#java/util/List/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/getGraphIterator(org.apache.calcite.plan.hep.HepRelVertex)#org/apache/calcite/plan/hep/HepMatchOrder/ordinal()
org/apache/calcite/plan/hep/HepPlanner/getGraphIterator(org.apache.calcite.plan.hep.HepRelVertex)#java/util/List/iterator()
org/apache/calcite/plan/hep/HepPlanner/getGraphIterator(org.apache.calcite.plan.hep.HepRelVertex)#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/hep/HepPlanner/getGraphIterator(org.apache.calcite.plan.hep.HepRelVertex)#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/getGraphIterator(org.apache.calcite.plan.hep.HepRelVertex)#java/util/Collections/reverse(java.util.List)
org/apache/calcite/plan/hep/HepPlanner/getGraphIterator(org.apache.calcite.plan.hep.HepRelVertex)#java/lang/Iterable/iterator()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/apache/calcite/plan/hep/HepRelVertex/getCluster()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/apache/calcite/plan/hep/HepPlanner/getCost(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.metadata.RelMetadataQuery)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/slf4j/Logger/isTraceEnabled()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/Iterable/iterator()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/append(char)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#java/lang/StringBuilder/toString()
org/apache/calcite/plan/hep/HepPlanner/dumpGraph()#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Iterator/remove()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/contains(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/iterator()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/HashSet/HashSet()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/lang/AssertionError/AssertionError()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/size()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/isEmpty()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#org/slf4j/Logger/trace(java.lang.String)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#org/apache/calcite/plan/hep/HepPlanner/notifyDiscard(org.apache.calcite.rel.RelNode)
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Map$Entry/getValue()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Map/entrySet()
org/apache/calcite/plan/hep/HepPlanner/collectGarbage()#java/util/Set/add(java.lang.Object)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/Iterator/hasNext()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/isEmpty()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/toArray(java.lang.Object[])
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/iterator()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#org/apache/calcite/plan/hep/HepPlanner/fireRule(org.apache.calcite.plan.RelOptRuleCall)
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/size()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/Iterator/next()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/HashMap/HashMap()
org/apache/calcite/plan/hep/HepPlanner/applyRule(org.apache.calcite.plan.RelOptRule,org.apache.calcite.plan.hep.HepRelVertex,boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/TableFunctionScan/getCluster()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Join/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Union/getInputs()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Minus/getInputs()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Exchange/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Intersect/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Correlate/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Uncollect/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Sort/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Project/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Correlate/getRight()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Join/getLeft()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Join/getRight()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Collect/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Filter/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getLeftKeys()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Correlate/getLeft()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/TableModify/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Uncollect/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Calc/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Intersect/getInputs()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Minus/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Union/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getRightKeys()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Window/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Collect/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Aggregate/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/TableModify/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getLeft()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Sample/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Project/getInput()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/TableFunctionScan/getRowType()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getCondition()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/SemiJoin/getRight()
org/apache/calcite/rel/mutable/MutableRels/toMutable(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/core/Window/getRowType()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/util/List/toArray()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Modifier/isStatic(int)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/Class/getConstructor(java.lang.Class[])
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Method/getParameterTypes()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/util/Arrays/toString(java.lang.Object[])
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Method/getModifiers()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/reflect/Method/getDeclaringClass()
org/apache/calcite/schema/impl/TableMacroImpl/apply(java.util.List)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/new_(java.lang.reflect.Type,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/throw_(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/util/List/get(int)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/accumulator()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/assign(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/ifThen(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/adapter/enumerable/AggAddContext/currentBlock()
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$SingleValueImplementor/implementAdd(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggAddContext)#org/apache/calcite/linq4j/tree/Expressions/statement(org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/algorithm/impl/MonteCarloAlgorithm/MonteCarloAlgorithm()
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/algorithm/Result/getAggregates()
org/apache/calcite/materialize/TileSuggester/tiles()#java/util/Iterator/hasNext()
org/apache/calcite/materialize/TileSuggester/tiles()#java/lang/Math/max(int,int)
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/model/StatisticsProvider/getFactRowCount()
org/apache/calcite/materialize/TileSuggester/tiles()#java/util/Iterator/next()
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/algorithm/util/ArgumentUtils$TextProgress/ArgumentUtils$TextProgress(java.io.PrintWriter)
org/apache/calcite/materialize/TileSuggester/tiles()#java/util/List/iterator()
org/apache/calcite/materialize/TileSuggester/tiles()#java/lang/Double/valueOf(double)
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableList/builder()
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableList$Builder/build()
org/apache/calcite/materialize/TileSuggester/tiles()#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
org/apache/calcite/materialize/TileSuggester/tiles()#org/pentaho/aggdes/algorithm/Algorithm/run(org.pentaho.aggdes.model.Schema,java.util.Map,org.pentaho.aggdes.algorithm.Progress)
org/apache/calcite/materialize/TileSuggester/tiles()#java/lang/Integer/valueOf(int)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/hasNext()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(int)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/Iterator/next()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/util/List/iterator()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/toString()
org/apache/calcite/rel/core/Project/explainTerms(org.apache.calcite.rel.RelWriter)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/util/Iterator/hasNext()
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/util/Iterator/next()
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#org/apache/calcite/linq4j/Ord/zip(java.util.List)
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#org/apache/calcite/util/PrecedenceClimbingParser$Type/ordinal()
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/util/List/iterator()
org/apache/calcite/util/PrecedenceClimbingParser$Call/print(java.lang.StringBuilder)#java/lang/AssertionError/AssertionError()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/lang/ThreadLocal/remove()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/adapter/enumerable/EnumerableRel/getCluster()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/Iterator/next()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/List/iterator()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/lang/Integer/intValue()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/lang/ThreadLocal/set(java.lang.Object)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#java/util/List/isEmpty()
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/mapTableModOp(boolean,org.apache.calcite.sql.SqlKind)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/sql/SqlKind/belongsTo(java.util.Collection)
org/apache/calcite/prepare/CalcitePrepareImpl$CalcitePreparingStmt/implement(org.apache.calcite.rel.RelRoot)#org/apache/calcite/adapter/enumerable/EnumerableRel/getRowType()
org/apache/calcite/prepare/CalciteCatalogReader/getAllSchemaObjectNames(java.util.List)#com/google/common/collect/ImmutableList/of()
org/apache/calcite/prepare/CalciteCatalogReader/getAllSchemaObjectNames(java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalciteCatalogReader/getAllSchemaObjectNames(java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalciteCatalogReader/getAllSchemaObjectNames(java.util.List)#java/util/Set/iterator()
org/apache/calcite/prepare/CalciteCatalogReader/getAllSchemaObjectNames(java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/getAllSchemaObjectNames(java.util.List)#java/util/Iterator/next()
org/apache/calcite/prepare/CalciteCatalogReader/getAllSchemaObjectNames(java.util.List)#java/util/Map/keySet()
org/apache/calcite/prepare/CalciteCatalogReader/getAllSchemaObjectNames(java.util.List)#java/util/NavigableSet/iterator()
org/apache/calcite/prepare/CalciteCatalogReader/getAllSchemaObjectNames(java.util.List)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/List/add(java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/List/iterator()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/StringBuilder/toString()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/ArrayList/ArrayList()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/Iterator/hasNext()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#org/apache/calcite/sql/type/SqlTypeName/getFamily()
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/prepare/CalciteCatalogReader/toOp(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlIdentifier,org.apache.calcite.schema.Function)#java/util/Iterator/next()
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/add(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/condition(org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/size()
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/iterator()
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/sql/SqlKind/ordinal()
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/List/indexOf(java.lang.Object)
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/lang/Integer/intValue()
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object,java.lang.reflect.Type)
org/apache/calcite/adapter/enumerable/RexImpTable$GroupingImplementor/implementResult(org.apache.calcite.adapter.enumerable.AggContext,org.apache.calcite.adapter.enumerable.AggResultContext)#java/util/Iterator/next()
