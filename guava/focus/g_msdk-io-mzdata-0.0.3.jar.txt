io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/nio/ByteBuffer/getDouble()
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#com/google/common/collect/Range/singleton(java.lang.Comparable)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/rawdata/MsScan/setDataPoints(double[],float[],java.lang.Integer)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getIsolationInfo(com.google.common.collect.Range,java.lang.Float,java.lang.Double,java.lang.Integer,io.github.msdk.datamodel.rawdata.ActivationInfo)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getMsFunction(java.lang.Integer)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/rawdata/RawDataFile/addScan(io.github.msdk.datamodel.rawdata.MsScan)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/rawdata/MsScan/setSpectrumType(io.github.msdk.datamodel.msspectra.MsSpectrumType)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/spectra/spectrumtypedetection/SpectrumTypeDetectionMethod/detectSpectrumType(double[],float[],java.lang.Integer)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/getBytes()
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/xml/sax/SAXException/SAXException(java.lang.String)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/rawdata/MsScan/setPolarity(io.github.msdk.datamodel.rawdata.PolarityType)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/rawdata/MsScan/setChromatographyInfo(io.github.msdk.datamodel.rawdata.ChromatographyInfo)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/nio/ByteBuffer/order(java.nio.ByteOrder)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getChromatographyInfo1D(io.github.msdk.datamodel.rawdata.SeparationType,java.lang.Float)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/rawdata/MsScan/getIsolations()
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#org/apache/commons/codec/binary/Base64/decodeBase64(byte[])
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getMsScan(io.github.msdk.datamodel.datastore.DataPointStore,java.lang.Integer,io.github.msdk.datamodel.rawdata.MsFunction)
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/nio/ByteBuffer/wrap(byte[])
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
io/github/msdk/io/mzdata/MzDataSaxHandler/endElement(java.lang.String,java.lang.String,java.lang.String)#java/nio/ByteBuffer/getFloat()
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/toLowerCase()
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/Double/valueOf(double)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/setLength(int)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/Float/valueOf(float)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/Double/parseDouble(java.lang.String)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/Integer/parseInt(java.lang.String)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/Integer/valueOf(int)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equalsIgnoreCase(java.lang.String)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String)
io/github/msdk/io/mzdata/MzDataSaxHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/Float/parseFloat(java.lang.String)
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#java/io/File/getName()
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#javax/xml/parsers/SAXParserFactory/newSAXParser()
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#java/lang/StringBuilder/append(java.lang.String)
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#io/github/msdk/MSDKException/MSDKException(java.lang.Throwable)
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#java/lang/StringBuilder/append(java.lang.Object)
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#javax/xml/parsers/SAXParser/parse(java.io.File,org.xml.sax.helpers.DefaultHandler)
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#java/lang/StringBuilder/toString()
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#javax/xml/parsers/SAXParserFactory/newInstance()
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#org/slf4j/Logger/info(java.lang.String)
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#java/lang/StringBuilder/StringBuilder()
io/github/msdk/io/mzdata/MzDataFileImportMethod/execute()#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getRawDataFile(java.lang.String,java.io.File,io.github.msdk.datamodel.files.FileType,io.github.msdk.datamodel.datastore.DataPointStore)
