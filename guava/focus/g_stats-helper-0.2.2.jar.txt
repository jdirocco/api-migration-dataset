com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/util/Iterator/remove()
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object[])
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/util/Iterator/hasNext()
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/util/Map$Entry/getKey()
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/util/Map/get(java.lang.Object)
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/util/Set/iterator()
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#org/slf4j/Logger/isDebugEnabled()
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/util/Map/entrySet()
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/lang/Long/valueOf(long)
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/util/Iterator/next()
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/util/Map/merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/lang/Long/longValue()
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/util/Map$Entry/getValue()
com/github/phantomthief/stats/n/impl/SimpleDurationStats/lambda$new$0(long,java.util.function.BinaryOperator)#java/lang/System/currentTimeMillis()
com/github/phantomthief/stats/n/counter/SimpleCounter/toString()#org/joda/time/format/PeriodFormat/getDefault()
com/github/phantomthief/stats/n/counter/SimpleCounter/toString()#java/lang/StringBuilder/append(java.lang.String)
com/github/phantomthief/stats/n/counter/SimpleCounter/toString()#org/joda/time/Period/Period(long)
com/github/phantomthief/stats/n/counter/SimpleCounter/toString()#org/joda/time/format/PeriodFormatter/print(org.joda.time.ReadablePeriod)
com/github/phantomthief/stats/n/counter/SimpleCounter/toString()#java/lang/StringBuilder/append(java.lang.Object)
com/github/phantomthief/stats/n/counter/SimpleCounter/toString()#java/lang/StringBuilder/append(double)
com/github/phantomthief/stats/n/counter/SimpleCounter/toString()#java/lang/StringBuilder/toString()
com/github/phantomthief/stats/n/counter/SimpleCounter/toString()#java/lang/StringBuilder/StringBuilder()
com/github/phantomthief/stats/n/counter/SimpleCounter/toString()#java/util/concurrent/atomic/AtomicLong/get()
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/doMaxValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)#java/lang/reflect/Field/getLong(java.lang.Object)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/doMaxValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)#java/lang/Long/valueOf(long)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/doMaxValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)#java/lang/Math/max(int,int)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/doMaxValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)#java/lang/reflect/Field/getType()
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/doMaxValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/doMaxValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)#java/lang/Integer/valueOf(int)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/doMaxValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)#java/lang/reflect/Field/getInt(java.lang.Object)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/doMaxValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/doMaxValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object)#java/lang/Math/max(long,long)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/reflect/Field/setAccessible(boolean)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/util/Set/stream()
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/Class/isAnnotationPresent(java.lang.Class)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/util/stream/Stream/anyMatch(java.util.function.Predicate)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/StringBuilder/StringBuilder()
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/StringBuilder/append(java.lang.String)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/reflect/Field/getDeclaringClass()
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/reflect/Field/isAccessible()
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/StringBuilder/append(java.lang.Object)
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/Object/getClass()
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/Class/getDeclaredFields()
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/StringBuilder/toString()
com/github/phantomthief/stats/n/profiler/util/StatsMergeUtils/annotationBasedMerge(com.github.phantomthief.stats.n.profiler.stats.Stats,com.github.phantomthief.stats.n.profiler.stats.Stats)#java/lang/reflect/Field/isAnnotationPresent(java.lang.Class)
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/Long/valueOf(long)
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/IllegalStateException/IllegalStateException()
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/Long/longValue()
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/reflect/Field/getType()
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/Class/getConstructor(java.lang.Class[])
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/util/concurrent/atomic/AtomicInteger/set(int)
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/Integer/intValue()
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/util/concurrent/atomic/AtomicLong/set(long)
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/reflect/Field/get(java.lang.Object)
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/Object/getClass()
com/github/phantomthief/stats/n/util/DurationStatsUtils/merge(com.github.phantomthief.stats.n.counter.Duration,com.github.phantomthief.stats.n.counter.Duration)#java/lang/Class/getDeclaredFields()
