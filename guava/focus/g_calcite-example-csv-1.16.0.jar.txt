org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Blocks/toBlock(org.apache.calcite.linq4j.tree.Node)
org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getRootExpression()
org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/preferArray()
org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.String,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/csv/CsvTableScan/getRowType()
org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/plan/RelOptTable/getExpression(java.lang.Class)
org/apache/calcite/adapter/csv/CsvTableScan/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/constant(java.lang.Object)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#org/apache/calcite/util/Source/trim(java.lang.String)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#org/apache/calcite/util/Source/relative(org.apache.calcite.util.Source)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#org/apache/calcite/util/Source/trimOrNull(java.lang.String)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#com/google/common/collect/ImmutableMap$Builder/build()
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#org/apache/calcite/util/Sources/of(java.io.File)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#java/io/File/listFiles(java.io.FilenameFilter)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#com/google/common/collect/ImmutableMap/builder()
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/csv/CsvSchema/createTableMap()#org/apache/calcite/util/Source/path()
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/String/length()
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Double/parseDouble(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Boolean/parseBoolean(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Short/parseShort(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Double/valueOf(double)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Long/valueOf(long)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Byte/valueOf(byte)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Short/valueOf(short)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Float/valueOf(float)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#org/apache/calcite/adapter/csv/CsvFieldType/ordinal()
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Boolean/valueOf(boolean)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#org/apache/commons/lang3/time/FastDateFormat/parse(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/util/Date/getTime()
org/apache/calcite/adapter/csv/CsvEnumerator$RowConverter/convert(org.apache.calcite.adapter.csv.CsvFieldType,java.lang.String)#java/lang/Byte/parseByte(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#org/apache/calcite/adapter/csv/CsvFieldType/of(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#au/com/bytecode/opencsv/CSVReader/close()
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/util/List/isEmpty()
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#au/com/bytecode/opencsv/CSVReader/readNext()
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#org/apache/calcite/adapter/java/JavaTypeFactory/createSqlType(org.apache.calcite.sql.type.SqlTypeName)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/lang/String/substring(int,int)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#org/apache/calcite/adapter/java/JavaTypeFactory/createStructType(java.util.List)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/lang/String/substring(int)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#org/apache/calcite/util/Source/path()
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/lang/Boolean/booleanValue()
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/lang/String/indexOf(int)
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/csv/CsvEnumerator/deduceRowType(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.util.Source,java.util.List,java.lang.Boolean)#org/apache/calcite/adapter/csv/CsvFieldType/toType(org.apache.calcite.adapter.java.JavaTypeFactory)
