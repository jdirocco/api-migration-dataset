io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/io/BufferedReader/close()
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/lang/String/isEmpty()
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/lang/StringBuilder/StringBuilder()
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/lang/StringBuilder/toString()
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/lang/String/split(java.lang.String)
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/io/BufferedReader/readLine()
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/util/LinkedHashMap/LinkedHashMap()
io/github/msdk/io/chromatof/ParserUtilities/getFilenameToGroupMap(java.io.File,java.lang.String)#java/io/FileReader/FileReader(java.io.File)
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/lang/Integer/intValue()
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/util/Iterator/hasNext()
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/util/Set/size()
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/lang/Double/valueOf(java.lang.String)
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/util/Set/iterator()
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/util/TreeMap/put(java.lang.Object,java.lang.Object)
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object[])
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/lang/String/split(java.lang.String)
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#org/slf4j/Logger/warn(java.lang.String)
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/util/TreeMap/get(java.lang.Object)
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/util/TreeMap/keySet()
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/util/TreeMap/TreeMap()
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/util/Iterator/next()
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/lang/Double/doubleValue()
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/lang/Integer/valueOf(java.lang.String)
io/github/msdk/io/chromatof/ParserUtilities/convertMassSpectrum(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/createNewColumn(io.github.msdk.io.chromatof.ChromaTofParser$ColumnName,io.github.msdk.datamodel.featuretables.Sample)#io/github/msdk/io/chromatof/ChromaTofParser$ColumnName/name()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/createNewColumn(io.github.msdk.io.chromatof.ChromaTofParser$ColumnName,io.github.msdk.datamodel.featuretables.Sample)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getFeatureTableColumn(java.lang.String,java.lang.Class,io.github.msdk.datamodel.featuretables.Sample)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/createNewColumn(io.github.msdk.io.chromatof.ChromaTofParser$ColumnName,io.github.msdk.datamodel.featuretables.Sample)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getFeatureTableColumn(io.github.msdk.datamodel.featuretables.ColumnName,io.github.msdk.datamodel.featuretables.Sample)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/createNewColumn(io.github.msdk.io.chromatof.ChromaTofParser$ColumnName,io.github.msdk.datamodel.featuretables.Sample)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getIonAnnotationFeatureTableColumn()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/createNewColumn(io.github.msdk.io.chromatof.ChromaTofParser$ColumnName,io.github.msdk.datamodel.featuretables.Sample)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getChromatographyInfoFeatureTableColumn()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/createNewColumn(io.github.msdk.io.chromatof.ChromaTofParser$ColumnName,io.github.msdk.datamodel.featuretables.Sample)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getMzFeatureTableColumn()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/createNewColumn(io.github.msdk.io.chromatof.ChromaTofParser$ColumnName,io.github.msdk.datamodel.featuretables.Sample)#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getIdFeatureTableColumn()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/createNewColumn(io.github.msdk.io.chromatof.ChromaTofParser$ColumnName,io.github.msdk.datamodel.featuretables.Sample)#io/github/msdk/io/chromatof/ChromaTofParser$ColumnName/ordinal()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/createNewColumn(io.github.msdk.io.chromatof.ChromaTofParser$ColumnName,io.github.msdk.datamodel.featuretables.Sample)#io/github/msdk/datamodel/featuretables/ColumnName/equals(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/String/hashCode()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/Double/valueOf(double)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/featuretables/FeatureTableRow/getChromatographyInfo()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/ionannotations/IonAnnotation/setDescription(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/Map/get(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/Double/parseDouble(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/io/chromatof/ChromaTofParser$ColumnName/ordinal()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/featuretables/FeatureTable/addColumn(io.github.msdk.datamodel.featuretables.FeatureTableColumn)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/List/iterator()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/LinkedHashSet/iterator()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/Map/put(java.lang.Object,java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/ArrayList/ArrayList()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/Class/getSimpleName()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/io/File/getName()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/String/split(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/featuretables/FeatureTable/addRow(io.github.msdk.datamodel.featuretables.FeatureTableRow)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/featuretables/FeatureTableRow/setData(io.github.msdk.datamodel.featuretables.FeatureTableColumn,java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getFeatureTableRow(io.github.msdk.datamodel.featuretables.FeatureTable,int)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/Iterator/hasNext()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#org/openscience/cdk/tools/manipulator/MolecularFormulaManipulator/getMolecularFormula(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/StringBuilder/append(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/rawdata/ChromatographyInfo/getRetentionTime()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/Locale/getDisplayName()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getSimpleIonAnnotation()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/io/File/canRead()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#org/openscience/cdk/DefaultChemObjectBuilder/getInstance()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getIonAnnotationFeatureTableColumn()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/ionannotations/IonAnnotation/setFormula(org.openscience.cdk.interfaces.IMolecularFormula)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#org/slf4j/Logger/info(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/Float/valueOf(float)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/List/size()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/featuretables/FeatureTableRow/getData(io.github.msdk.datamodel.featuretables.FeatureTableColumn)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/Iterator/next()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/rawdata/ChromatographyInfo/getSecondaryRetentionTime()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getFeatureTable(java.lang.String,io.github.msdk.datamodel.datastore.DataPointStore)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/String/equals(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/util/FeatureTableUtil/recalculateAverages(io.github.msdk.datamodel.featuretables.FeatureTable)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/MSDKException/MSDKException(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getChromatographyInfo1D(io.github.msdk.datamodel.rawdata.SeparationType,java.lang.Float)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/featuretables/ColumnName/getName()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/io/chromatof/ChromaTofParser$Mode/ordinal()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/featuretables/FeatureTable/getColumn(io.github.msdk.datamodel.featuretables.ColumnName,io.github.msdk.datamodel.featuretables.Sample)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/StringBuilder/StringBuilder()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/Set/iterator()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/featuretables/FeatureTableColumn/getDataTypeClass()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/Integer/parseInt(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/List/add(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/impl/MSDKObjectBuilder/getChromatographyInfo2D(io.github.msdk.datamodel.rawdata.SeparationType,java.lang.Float,java.lang.Float)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/Integer/valueOf(int)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/util/List/get(int)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/StringBuilder/append(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/io/chromatof/TableRow/keySet()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#java/lang/StringBuilder/toString()
io/github/msdk/io/chromatof/ChromaTofFileImportMethod/execute()#io/github/msdk/datamodel/featuretables/FeatureTableColumn/getName()
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/split(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/util/List/size()
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/util/regex/Matcher/find()
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/util/regex/Matcher/group(int)
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/hashCode()
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/trim()
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/util/List/toArray(java.lang.Object[])
io/github/msdk/io/chromatof/ChromaTofParser/splitLine(java.lang.String,java.lang.String,java.lang.String)#java/util/LinkedList/LinkedList()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/util/ArrayList/iterator()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/io/BufferedReader/close()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/util/LinkedHashSet/LinkedHashSet()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/util/Arrays/asList(java.lang.Object[])
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/lang/String/isEmpty()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/lang/StringBuilder/StringBuilder()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/util/LinkedHashSet/add(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/lang/StringBuilder/append(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/io/FileReader/FileReader(java.io.File)
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/lang/StringBuilder/toString()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/util/Iterator/hasNext()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/lang/String/toUpperCase()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/lang/StringBuilder/append(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/lang/String/trim()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/util/Iterator/next()
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/io/BufferedReader/BufferedReader(java.io.Reader)
io/github/msdk/io/chromatof/ChromaTofParser/parseHeader(java.io.File,boolean)#java/io/BufferedReader/readLine()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/ArrayList/iterator()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/io/BufferedReader/close()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/ArrayList/ArrayList()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/ArrayList/set(int,java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/lang/StringBuilder/append(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/LinkedHashSet/iterator()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/ArrayList/get(int)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/io/FileReader/FileReader(java.io.File)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/lang/StringBuilder/toString()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/Iterator/hasNext()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/lang/String/toUpperCase()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/lang/StringBuilder/append(java.lang.String)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/lang/String/trim()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/Arrays/asList(java.lang.Object[])
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/Iterator/next()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#io/github/msdk/io/chromatof/TableRow/put(java.lang.Object,java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/ArrayList/size()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/lang/String/isEmpty()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/lang/StringBuilder/StringBuilder()
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/util/List/add(java.lang.Object)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/io/BufferedReader/BufferedReader(java.io.Reader)
io/github/msdk/io/chromatof/ChromaTofParser/parseBody(java.util.LinkedHashSet,java.io.File,boolean)#java/io/BufferedReader/readLine()
