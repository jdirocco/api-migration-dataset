org/influxdb/impl/InfluxDBImpl/ping()#java/lang/String/equalsIgnoreCase(java.lang.String)
org/influxdb/impl/InfluxDBImpl/ping()#java/util/Iterator/hasNext()
org/influxdb/impl/InfluxDBImpl/ping()#com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)
org/influxdb/impl/InfluxDBImpl/ping()#java/util/Iterator/next()
org/influxdb/impl/InfluxDBImpl/ping()#retrofit/client/Header/getValue()
org/influxdb/impl/InfluxDBImpl/ping()#retrofit/client/Response/getHeaders()
org/influxdb/impl/InfluxDBImpl/ping()#retrofit/client/Header/getName()
org/influxdb/impl/InfluxDBImpl/ping()#java/util/List/iterator()
org/influxdb/impl/InfluxDBImpl/ping()#com/google/common/base/Stopwatch/createStarted()
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#com/google/common/io/CharStreams/toString(java.lang.Readable)
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#java/io/IOException/printStackTrace()
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#retrofit/mime/TypedInput/in()
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#java/io/InputStreamReader/close()
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#retrofit/RetrofitError/getResponse()
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#retrofit/client/Response/getStatus()
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#retrofit/client/Response/getBody()
org/influxdb/impl/InfluxDBErrorHandler/handleError(retrofit.RetrofitError)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/influxdb/dto/Point/concatenateFields()#java/util/Iterator/hasNext()
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/setMinimumFractionDigits(int)
org/influxdb/dto/Point/concatenateFields()#java/util/Map/size()
org/influxdb/dto/Point/concatenateFields()#java/util/Iterator/next()
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/getInstance(java.util.Locale)
org/influxdb/dto/Point/concatenateFields()#java/lang/StringBuilder/StringBuilder()
org/influxdb/dto/Point/concatenateFields()#java/util/Set/iterator()
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/setMaximumFractionDigits(int)
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/setGroupingUsed(boolean)
org/influxdb/dto/Point/concatenateFields()#java/util/Map/entrySet()
org/influxdb/dto/Point/concatenateFields()#com/google/common/escape/Escaper/escape(java.lang.String)
org/influxdb/dto/Point/concatenateFields()#java/lang/StringBuilder/append(java.lang.String)
org/influxdb/dto/Point/concatenateFields()#java/util/Map$Entry/getKey()
org/influxdb/dto/Point/concatenateFields()#java/lang/StringBuilder/append(java.lang.Object)
org/influxdb/dto/Point/concatenateFields()#java/util/Map$Entry/getValue()
org/influxdb/dto/Point/concatenateFields()#java/text/NumberFormat/format(java.lang.Object)
org/influxdb/dto/Point/concatenatedTags()#java/util/Iterator/hasNext()
org/influxdb/dto/Point/concatenatedTags()#java/util/Iterator/next()
org/influxdb/dto/Point/concatenatedTags()#java/lang/StringBuilder/StringBuilder()
org/influxdb/dto/Point/concatenatedTags()#java/util/Set/iterator()
org/influxdb/dto/Point/concatenatedTags()#java/util/Map$Entry/getValue()
org/influxdb/dto/Point/concatenatedTags()#java/util/Map/entrySet()
org/influxdb/dto/Point/concatenatedTags()#com/google/common/escape/Escaper/escape(java.lang.String)
org/influxdb/dto/Point/concatenatedTags()#java/lang/StringBuilder/append(java.lang.String)
org/influxdb/dto/Point/concatenatedTags()#java/util/Map$Entry/getKey()
org/influxdb/impl/BatchProcessor/write()#com/google/common/collect/Maps/newHashMap()
org/influxdb/impl/BatchProcessor/write()#java/util/ArrayList/ArrayList(int)
org/influxdb/impl/BatchProcessor/write()#java/util/concurrent/BlockingQueue/drainTo(java.util.Collection)
org/influxdb/impl/BatchProcessor/write()#java/util/Iterator/hasNext()
org/influxdb/impl/BatchProcessor/write()#java/util/concurrent/BlockingQueue/size()
org/influxdb/impl/BatchProcessor/write()#java/util/Map/values()
org/influxdb/impl/BatchProcessor/write()#java/util/Iterator/next()
org/influxdb/impl/BatchProcessor/write()#java/util/concurrent/BlockingQueue/isEmpty()
org/influxdb/impl/BatchProcessor/write()#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
org/influxdb/impl/BatchProcessor/write()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/influxdb/impl/BatchProcessor/write()#java/util/Map/get(java.lang.Object)
org/influxdb/impl/BatchProcessor/write()#java/util/Map/containsKey(java.lang.Object)
org/influxdb/impl/BatchProcessor/write()#java/util/List/iterator()
org/influxdb/impl/BatchProcessor/write()#java/util/Collection/iterator()
