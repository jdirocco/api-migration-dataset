net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/getClassDeclaration()
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/util/Deque/push(java.lang.Object)
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/Parameters/getHead()
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/getIde()
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isOverride()
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/util/Deque/peek()
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isNative()
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isPublicApi()
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/ApiModelGenerator$ApiModelGeneratingAstVisitor/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isFinal()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/io/File/getName()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/util/Iterator/next()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/io/File/getAbsolutePath()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/lang/StringBuilder/length()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/util/List/iterator()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/util/Iterator/hasNext()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/io/File/isDirectory()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/lang/StringBuilder/append(char)
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/input/PathInputSource/fromFiles(java.util.List,java.lang.String[],boolean)#java/lang/String/endsWith(java.lang.String)
net/jangaroo/jooc/input/PathInputSource/getChild(java.lang.String)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/input/PathInputSource/getChild(java.lang.String)#java/util/Iterator/hasNext()
net/jangaroo/jooc/input/PathInputSource/getChild(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/input/PathInputSource/getChild(java.lang.String)#java/util/Iterator/next()
net/jangaroo/jooc/input/PathInputSource/getChild(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/input/PathInputSource/getChild(java.lang.String)#java/util/List/iterator()
net/jangaroo/jooc/input/PathInputSource/getChild(java.lang.String)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/input/PathInputSource/getChild(java.lang.String)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/input/PathInputSource/getChild(java.lang.String)#net/jangaroo/jooc/input/PathInputSource/isInSourcePath()
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#java/lang/StringBuilder/append(int)
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#java/util/List/size()
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#net/jangaroo/jooc/ast/Expr/getSymbol()
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#java/util/List/get(int)
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#java/lang/Math/min(int,int)
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#net/jangaroo/jooc/api/CompileLog/error(net.jangaroo.jooc.api.FilePosition,java.lang.String)
net/jangaroo/jooc/TypeChecker/checkParameterTypes(net.jangaroo.jooc.types.FunctionSignature,net.jangaroo.jooc.api.FilePosition,net.jangaroo.jooc.ast.ParenthesizedExpr)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#net/jangaroo/utils/CompilerUtils/className(java.lang.String)
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#java/io/IOException/printStackTrace()
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#org/w3c/dom/NodeList/getLength()
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#org/w3c/dom/Document/getElementsByTagName(java.lang.String)
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#org/w3c/dom/NodeList/item(int)
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#org/w3c/dom/Node/getAttributes()
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#org/w3c/dom/NamedNodeMap/getNamedItem(java.lang.String)
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#org/w3c/dom/Node/getNodeValue()
net/jangaroo/jooc/mxml/ComponentPackageManifestParser/parse(java.io.InputStream)#org/xml/sax/SAXException/printStackTrace()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#java/util/Iterator/remove()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#java/util/Iterator/hasNext()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#net/jangaroo/jooc/ast/FunctionDeclaration/getIde()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#java/util/List/size()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#java/util/Iterator/next()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#net/jangaroo/jooc/ast/Parameter/getName()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#net/jangaroo/jooc/ast/Parameters/getHead()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#java/util/List/get(int)
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#java/util/List/iterator()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#net/jangaroo/jooc/ast/IdeDeclaration/isPrivate()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#net/jangaroo/jooc/ast/Parameter/getIde()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/preProcessClassBodyDirectives()#java/util/List/set(int,java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/ast/IdeDeclaration/getAnnotations()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/ast/VariableDeclaration/getName()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#java/util/Iterator/hasNext()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/getDirectives()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#java/util/List/addAll(java.util.Collection)
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#java/util/Iterator/next()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#java/util/List/iterator()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/ast/Parameter/getIde()
net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/mxml/ast/MxmlCompilationUnit/getPrimaryDeclaration()
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/increaseVectorNestingLevel()
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/multiStateSymbol(int,java.lang.Object)
net/jangaroo/jooc/Scanner/scan()#java/lang/Long/valueOf(long)
net/jangaroo/jooc/Scanner/scan()#java/lang/String/trim()
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/unescapeXml(java.lang.String)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/pushString(java.lang.String)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/symbol(int,java.lang.Object)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/error(java.lang.String)
net/jangaroo/jooc/Scanner/scan()#java/lang/String/substring(int)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/pushWhitespace(java.lang.String)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/getString()
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/pushMultiStateText(java.lang.String)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/decreaseVectorNestingLevel()
net/jangaroo/jooc/Scanner/scan()#java/lang/Long/parseLong(java.lang.String,int)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/clearString()
net/jangaroo/jooc/Scanner/scan()#java/lang/Integer/parseInt(java.lang.String,int)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/setMultiStateText(java.lang.String)
net/jangaroo/jooc/Scanner/scan()#java/lang/String/isEmpty()
net/jangaroo/jooc/Scanner/scan()#java/lang/Long/Long(java.lang.String)
net/jangaroo/jooc/Scanner/scan()#java/lang/Double/Double(java.lang.String)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/symbol(int)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/pushString(char)
net/jangaroo/jooc/Scanner/scan()#net/jangaroo/jooc/Scanner/createIncludeReader(java.lang.String)
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/util/ArrayList/isEmpty()
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/lang/String/format(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/io/File/exists()
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/io/File/lastModified()
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/util/ArrayList/size()
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/io/File/getAbsolutePath()
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/lang/Integer/valueOf(int)
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/io/File/delete()
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/io/File/File(java.io.File,java.lang.String)
net/jangaroo/jooc/PackagerImpl/pack(java.io.File,java.lang.String,java.io.File[])#java/io/IOException/IOException(java.lang.String)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#javax/xml/stream/XMLStreamWriter/writeEmptyElement(java.lang.String)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#net/jangaroo/utils/CompilerUtils/className(java.lang.String)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/io/IOException/IOException(java.lang.String,java.lang.Throwable)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#javax/xml/stream/XMLStreamWriter/writeStartElement(java.lang.String)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/util/Collection/isEmpty()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/util/Iterator/next()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#javax/xml/stream/XMLOutputFactory/newInstance()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/lang/String/isEmpty()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/util/Set/iterator()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#javax/xml/stream/XMLStreamWriter/writeEndDocument()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#javax/xml/stream/XMLStreamWriter/writeEndElement()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/util/Map$Entry/getValue()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#javax/xml/stream/XMLOutputFactory/createXMLStreamWriter(java.io.Writer)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#javax/xml/stream/XMLStreamWriter/writeStartDocument(java.lang.String,java.lang.String)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#javax/xml/stream/XMLStreamWriter/writeAttribute(java.lang.String,java.lang.String)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/util/Iterator/hasNext()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/util/Map$Entry/getKey()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#javax/xml/stream/XMLStreamWriter/close()
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#net/jangaroo/utils/CompilerUtils/packageName(java.lang.String)
net/jangaroo/jooc/mxml/CatalogGenerator/generateCatalog(java.io.Writer)#java/util/Collection/iterator()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputFile(java.io.File,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputFile(java.io.File,java.lang.String)#net/jangaroo/utils/CompilerUtils/fileFromQName(java.lang.String,java.io.File,java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputFile(java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputFile(java.io.File,java.lang.String)#java/io/File/getAbsoluteFile()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputFile(java.io.File,java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputFile(java.io.File,java.lang.String)#net/jangaroo/utils/CompilerUtils/qNameFromFile(java.io.File,java.io.File)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputFile(java.io.File,java.lang.String)#net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputDir()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputFile(java.io.File,java.lang.String)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOutputFile(java.io.File,java.lang.String)#java/io/File/getParentFile()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#com/google/debugging/sourcemap/SourceMapGenerator/addMapping(java.lang.String,java.lang.String,com.google.debugging.sourcemap.FilePosition,com.google.debugging.sourcemap.FilePosition,com.google.debugging.sourcemap.FilePosition)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/io/File/getName()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/util/Iterator/hasNext()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/util/Iterator/next()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/io/FileWriter/FileWriter(java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/io/File/getAbsolutePath()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/lang/String/substring(int)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/util/List/iterator()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#com/google/debugging/sourcemap/SourceMapGenerator/validate(boolean)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#com/google/debugging/sourcemap/SourceMapGenerator/appendTo(java.lang.Appendable,java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/io/FileWriter/close()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#java/lang/String/lastIndexOf(int)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/generateSourceMap(net.jangaroo.jooc.JsWriter,java.io.File)#com/google/debugging/sourcemap/SourceMapGeneratorFactory/getInstance(com.google.debugging.sourcemap.SourceMapFormat)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/io/File/getName()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/io/File/File(java.io.File,java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.lang.String)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#net/jangaroo/jooc/config/JoocOptions/isGenerateSourceMaps()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/getOptions()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#org/apache/tools/ant/util/FileUtils/getFileUtils()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/io/File/getAbsolutePath()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#org/apache/tools/ant/util/FileUtils/copyFile(java.io.File,java.io.File)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/io/File/delete()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/io/FileOutputStream/FileOutputStream(java.io.File)
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/SingleFileCompilationUnitSinkFactory/lambda$createSink$0(boolean,java.io.File,java.io.File,net.jangaroo.jooc.ast.CompilationUnit)#java/io/File/getParentFile()
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/JsWriter/write(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/getClassDeclaration()
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/isPrivate()
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/Expr/visit(net.jangaroo.jooc.ast.AstVisitor)
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/getName()
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/isStatic()
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/isPrivateStatic()
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/generateFieldInitializerCode(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/isPrimaryDeclaration()
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/util/Iterator/next()
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/util/Set/contains(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/util/Set/iterator()
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#net/jangaroo/jooc/ast/FunctionDeclaration/getAnnotations(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/util/Map$Entry/getValue()
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/util/List/iterator()
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/util/Map$Entry/getKey()
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#net/jangaroo/jooc/Jooc/error(net.jangaroo.jooc.ast.AstNode,java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/processMixinAnnotations(net.jangaroo.jooc.ast.FunctionDeclaration,java.lang.String,java.lang.String)#java/util/Map/entrySet()
net/jangaroo/jooc/backend/JsCodeGenerator/visitApplyExpr(net.jangaroo.jooc.ast.ApplyExpr)#java/io/File/getName()
net/jangaroo/jooc/backend/JsCodeGenerator/visitApplyExpr(net.jangaroo.jooc.ast.ApplyExpr)#java/lang/String/format(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/backend/JsCodeGenerator/visitApplyExpr(net.jangaroo.jooc.ast.ApplyExpr)#net/jangaroo/jooc/ast/Expr/getSymbol()
net/jangaroo/jooc/backend/JsCodeGenerator/visitApplyExpr(net.jangaroo.jooc.ast.ApplyExpr)#net/jangaroo/jooc/JsWriter/write(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitApplyExpr(net.jangaroo.jooc.ast.ApplyExpr)#net/jangaroo/jooc/ast/Expr/visit(net.jangaroo.jooc.ast.AstVisitor)
net/jangaroo/jooc/backend/JsCodeGenerator/visitApplyExpr(net.jangaroo.jooc.ast.ApplyExpr)#java/io/File/File(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitApplyExpr(net.jangaroo.jooc.ast.ApplyExpr)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/visitApplyExpr(net.jangaroo.jooc.ast.ApplyExpr)#net/jangaroo/jooc/Jooc/error(net.jangaroo.jooc.ast.AstNode,java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitApplyExpr(net.jangaroo.jooc.ast.ApplyExpr)#net/jangaroo/jooc/backend/JsCodeGenerator/writeSymbolReplacement(net.jangaroo.jooc.JooSymbol,java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isStatic()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/getName()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/getClassDeclaration()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/writeModifiers(net.jangaroo.jooc.JsWriter,net.jangaroo.jooc.ast.Declaration)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isPrivate()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/getIde()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isOverride()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/getAnnotation(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/util/List/isEmpty()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/util/Map/get(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isPrivateStatic()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isNative()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isPrimaryDeclaration()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/writeOptSymbol(net.jangaroo.jooc.JooSymbol)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/isClassMember()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/visitAll(java.lang.Iterable)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/writeSymbolReplacement(net.jangaroo.jooc.JooSymbol,java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#net/jangaroo/jooc/ast/FunctionDeclaration/getAnnotations()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/lang/AssertionError/AssertionError()
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#com/google/common/collect/ListMultimap/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/visitFunctionDeclaration(net.jangaroo.jooc.ast.FunctionDeclaration)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#java/lang/Object/equals(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#net/jangaroo/jooc/ast/IdeDeclaration/getCompilationUnit()
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#java/util/List/toArray()
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#java/util/List/isEmpty()
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/addOptImplements(net.jangaroo.jooc.ast.ClassDeclaration,net.jangaroo.jooc.json.JsonObject)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/Iterator/hasNext()
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/Set/size()
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/Iterator/next()
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/TreeSet/TreeSet()
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/lang/Boolean/booleanValue()
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/List/isEmpty()
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/Set/toArray(java.lang.Object[])
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/List/get(int)
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/Collection/iterator()
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#net/jangaroo/jooc/ast/IdeDeclaration/getAnnotations(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/collectDependencies(net.jangaroo.jooc.ast.CompilationUnit,java.lang.Boolean)#java/util/Set/add(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/jooc/ast/IdeDeclaration/isPrivateStatic()
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/jooc/ast/DotExpr/getArg()
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#java/lang/String/isEmpty()
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/jooc/ast/Expr/getSymbol()
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/jooc/ast/TypedIdeDeclaration/getName()
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/jooc/ast/Expr/visit(net.jangaroo.jooc.ast.AstVisitor)
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/jooc/backend/JsCodeGenerator/writeSymbolReplacement(net.jangaroo.jooc.JooSymbol,java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#java/lang/String/startsWith(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/utils/CompilerUtils/quote(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/jooc/ast/IdeDeclaration/getClassDeclaration()
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/jooc/ast/IdeDeclaration/isPrivate()
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#net/jangaroo/jooc/ast/DotExpr/getOp()
net/jangaroo/jooc/backend/JsCodeGenerator/visitDotExpr(net.jangaroo.jooc.ast.DotExpr)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/getOptTypeRelation()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/getIde()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/writeOptSymbol(net.jangaroo.jooc.JooSymbol)
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/getClassDeclaration()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/isPrivate()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/getAnnotations()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/writeModifiers(net.jangaroo.jooc.JsWriter,net.jangaroo.jooc.ast.Declaration)
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/isPrivateStatic()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/isClassMember()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#java/util/List/isEmpty()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/visitAll(java.lang.Iterable)
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/ast/VariableDeclaration/isPrimaryDeclaration()
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/visitIfNotNull(net.jangaroo.jooc.ast.AstNode)
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#net/jangaroo/jooc/JsWriter/write(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitVariableDeclaration(net.jangaroo.jooc.ast.VariableDeclaration)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#java/util/Arrays/asList(java.lang.Object[])
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#net/jangaroo/jooc/JsWriter/write(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#net/jangaroo/jooc/ast/Expr/visit(net.jangaroo.jooc.ast.AstVisitor)
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#net/jangaroo/jooc/ast/ForInStatement/setBody(net.jangaroo.jooc.ast.Statement)
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#net/jangaroo/jooc/ast/ForInStatement/getSymKeyword()
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#net/jangaroo/jooc/ast/ForInStatement/getBody()
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#net/jangaroo/jooc/ast/Statement/visit(net.jangaroo.jooc.ast.AstVisitor)
net/jangaroo/jooc/backend/JsCodeGenerator/visitForInStatement(net.jangaroo.jooc.ast.ForInStatement)#com/google/common/collect/ListMultimap/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/jooc/ast/VariableDeclaration/getAnnotation(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/jooc/ast/VariableDeclaration/isStatic()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#java/io/StringWriter/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/utils/CompilerUtils/unquote(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/jooc/ast/Expr/visit(net.jangaroo.jooc.ast.AstVisitor)
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/jooc/ast/VariableDeclaration/getName()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/jooc/ast/VariableDeclaration/getOptTypeRelation()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/jooc/ast/VariableDeclaration/isPublic()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#java/lang/String/trim()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#java/lang/String/format(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/jooc/ast/VariableDeclaration/isPrimaryDeclaration()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#java/io/StringWriter/StringWriter()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/utils/CompilerUtils/quote(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#net/jangaroo/jooc/ast/VariableDeclaration/isPrivate()
net/jangaroo/jooc/backend/JsCodeGenerator/registerField(net.jangaroo.jooc.ast.VariableDeclaration,java.util.List)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/ast/AssignmentOpExpr/getArg1()
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/ast/IdeDeclaration/isPrivateStatic()
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/utils/CompilerUtils/quote(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/config/JoocConfiguration/getDebugMode()
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/ast/Expr/visit(net.jangaroo.jooc.ast.AstVisitor)
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/ast/AssignmentOpExpr/getArg2()
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/ast/AssignmentOpExpr/getOp()
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/ast/DotExpr/getArg()
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/config/JoocConfiguration/setDebugMode(net.jangaroo.jooc.config.DebugMode)
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/backend/JsCodeGenerator/writeSymbolReplacement(net.jangaroo.jooc.JooSymbol,java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/backend/JsCodeGenerator/visitBinaryOpExpr(net.jangaroo.jooc.ast.BinaryOpExpr)
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/JsWriter/write(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitAssignmentOpExpr(net.jangaroo.jooc.ast.AssignmentOpExpr)#net/jangaroo/jooc/ast/DotExpr/getOp()
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/ast/ClassDeclaration/isPrimaryDeclaration()
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/visitAll(java.lang.Iterable)
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/ast/IdeDeclaration/visit(net.jangaroo.jooc.ast.AstVisitor)
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/writeModifiers(net.jangaroo.jooc.JsWriter,net.jangaroo.jooc.ast.Declaration)
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/util/Iterator/hasNext()
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/ast/ClassDeclaration/getAnnotations()
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/util/Iterator/next()
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/backend/JsCodeGenerator/visitIfNotNull(net.jangaroo.jooc.ast.AstNode)
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/ast/ClassDeclaration/getIde()
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/util/List/iterator()
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/JsWriter/write(java.lang.String)
net/jangaroo/jooc/backend/JsCodeGenerator/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#net/jangaroo/jooc/ast/TypedIdeDeclaration/getName()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/util/Collection/addAll(java.util.Collection)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/lang/Boolean/valueOf(boolean)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/util/Iterator/hasNext()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/util/List/isEmpty()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/util/Map/get(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/util/Iterator/next()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/util/Collection/add(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#net/jangaroo/utils/CompilerUtils/quote(java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/util/List/iterator()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/processChildNodes(net.jangaroo.jooc.mxml.ast.XmlElement,net.jangaroo.jooc.ast.CompilationUnit,net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.ast.Ide,boolean)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/String/substring(int,int)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/StringBuilder/append(char)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/String/startsWith(java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/String/toUpperCase()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/util/Map/get(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/util/Collection/addAll(java.util.Collection)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/String/substring(int)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/String/replace(char,char)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createEventHandlerCode(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.JooSymbol,net.jangaroo.jooc.ast.Annotation)#net/jangaroo/jooc/ast/ClassBody/getDirectives()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#net/jangaroo/jooc/Jooc/error(net.jangaroo.jooc.api.FilePosition,java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#java/lang/String/format(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#java/lang/String/isEmpty()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#java/lang/String/trim()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean,java.lang.String,net.jangaroo.jooc.ast.Ide)#net/jangaroo/utils/CompilerUtils/quote(java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/lang/Boolean/equals(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#net/jangaroo/jooc/ast/VariableDeclaration/isPublic()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#net/jangaroo/utils/CompilerUtils/qName(java.lang.String,java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#net/jangaroo/jooc/CompilerError/getMessage()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/util/List/isEmpty()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/util/Map/get(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#net/jangaroo/jooc/CompilerError/getCause()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/util/List/size()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/util/Collection/addAll(java.util.Collection)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/lang/String/lastIndexOf(int)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/lang/String/substring(int)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/lang/StringBuilder/append(char)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#net/jangaroo/jooc/ast/ClassBody/getDirectives()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createValueCodeFromElement(net.jangaroo.jooc.ast.Ide,net.jangaroo.jooc.mxml.ast.XmlElement,java.lang.Boolean)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/util/Iterator/hasNext()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/util/List/isEmpty()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/util/List/size()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/util/Iterator/next()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/util/List/get(int)
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/util/List/iterator()
net/jangaroo/jooc/mxml/ast/MxmlToModelParser/createArrayCodeFromChildElements(java.util.List,boolean,java.lang.Boolean)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/JsCodeGenerator$ClassDefinitionBuilder/compress(java.util.List)#java/util/Iterator/hasNext()
net/jangaroo/jooc/backend/JsCodeGenerator$ClassDefinitionBuilder/compress(java.util.List)#java/util/List/isEmpty()
net/jangaroo/jooc/backend/JsCodeGenerator$ClassDefinitionBuilder/compress(java.util.List)#java/util/Iterator/next()
net/jangaroo/jooc/backend/JsCodeGenerator$ClassDefinitionBuilder/compress(java.util.List)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator$ClassDefinitionBuilder/compress(java.util.List)#java/util/List/contains(java.lang.Object)
net/jangaroo/jooc/backend/JsCodeGenerator$ClassDefinitionBuilder/compress(java.util.List)#java/util/List/iterator()
net/jangaroo/jooc/backend/JsCodeGenerator$ClassDefinitionBuilder/compress(java.util.List)#java/util/ArrayList/toArray()
net/jangaroo/jooc/backend/JsCodeGenerator$ClassDefinitionBuilder/compress(java.util.List)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/backend/JsCodeGenerator$ClassDefinitionBuilder/compress(java.util.List)#java/util/ArrayList/add(java.lang.Object)
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/Element/setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getQName(int)
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getLength()
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Locator/getLineNumber()
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getURI(int)
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/valueOf(int)
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(int)
net/jangaroo/jooc/util/PreserveLineNumberHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Locator/getColumnNumber()
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/util/Iterator/hasNext()
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/util/Map/get(java.lang.Object)
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/util/List/iterator()
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/util/Iterator/next()
net/jangaroo/jooc/model/ClassModel/getEvent(java.lang.String)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/ast/IdeDeclaration/getAnnotation(java.lang.String)
net/jangaroo/jooc/Jooc/run1()#java/io/File/File(java.io.File,java.lang.String)
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/Jooc/fileToSymbol(java.io.File)
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/ast/IdeDeclaration/isNative()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/config/JoocConfiguration/getApiOutputDirectory()
net/jangaroo/jooc/Jooc/run1()#java/util/Iterator/hasNext()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/Jooc/getLog()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/Jooc/importSource(net.jangaroo.jooc.input.InputSource)
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/config/JoocConfiguration/getSourceFiles()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/Jooc/setUp(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)
net/jangaroo/jooc/Jooc/run1()#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/config/JoocConfiguration/getClassPath()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/config/JoocConfiguration/getSourcePath()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/config/JoocConfiguration/isVerbose()
net/jangaroo/jooc/Jooc/run1()#java/io/IOException/getMessage()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/config/JoocConfiguration/getPublicApiViolationsMode()
net/jangaroo/jooc/Jooc/run1()#java/util/Iterator/next()
net/jangaroo/jooc/Jooc/run1()#java/util/HashMap/HashMap()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/api/CompileLog/hasErrors()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/config/JoocConfiguration/isGenerateApi()
net/jangaroo/jooc/Jooc/run1()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/Jooc/run1()#java/lang/Class/getName()
net/jangaroo/jooc/Jooc/run1()#java/io/File/toPath()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/api/CompileLog/error(net.jangaroo.jooc.api.FilePosition,java.lang.String)
net/jangaroo/jooc/Jooc/run1()#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/Jooc/run1()#java/util/List/clear()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/config/JoocConfiguration/getOutputDirectory()
net/jangaroo/jooc/Jooc/run1()#java/lang/Object/getClass()
net/jangaroo/jooc/Jooc/run1()#java/nio/file/Files/copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])
net/jangaroo/jooc/Jooc/run1()#java/util/List/iterator()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/Jooc/tearDown()
net/jangaroo/jooc/Jooc/run1()#net/jangaroo/jooc/config/JoocConfiguration/getLocalizedOutputDirectory()
net/jangaroo/jooc/Jooc/run1()#java/lang/StringBuilder/toString()
net/jangaroo/jooc/Jooc/run1()#java/io/File/getParentFile()
net/jangaroo/jooc/Jooc/run1()#java/lang/String/endsWith(java.lang.String)
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#java/io/File/File(java.io.File,java.lang.String)
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#java/util/Iterator/hasNext()
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#java/util/Collection/isEmpty()
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#java/util/Iterator/next()
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#net/jangaroo/jooc/config/NamespaceConfiguration/getUri()
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#net/jangaroo/jooc/Jooc/getMxmlComponentRegistry()
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#java/util/List/iterator()
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#net/jangaroo/jooc/config/NamespaceConfiguration/getManifest()
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#net/jangaroo/jooc/config/JoocConfiguration/getNamespaces()
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#java/io/File/mkdirs()
net/jangaroo/jooc/Jooc/setUpMxmlComponentRegistry(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.input.InputSource)#net/jangaroo/jooc/config/JoocConfiguration/getCatalogOutputDirectory()
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#net/jangaroo/jooc/Jooc/getCompilationUnit(java.lang.String)
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#java/util/Set/addAll(java.util.Collection)
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#java/util/Iterator/next()
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#java/io/File/File(java.lang.String)
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#java/util/Set/iterator()
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#net/jangaroo/jooc/Jooc/getInputSource(net.jangaroo.jooc.ast.CompilationUnit)
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#java/util/HashSet/HashSet(java.util.Collection)
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#java/util/Iterator/hasNext()
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#net/jangaroo/jooc/ast/PackageDeclaration/getAnnotation(java.lang.String)
net/jangaroo/jooc/Jooc/reportPublicApiViolations(net.jangaroo.jooc.ast.CompilationUnit)#net/jangaroo/jooc/config/JoocConfiguration/getPublicApiViolationsMode()
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/util/Iterator/hasNext()
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/util/Map/get(java.lang.Object)
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/util/List/iterator()
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/util/Set/add(java.lang.Object)
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/util/Iterator/next()
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/util/LinkedList/LinkedList()
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#net/jangaroo/utils/AS3Type/toString()
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/util/Map/containsKey(java.lang.Object)
net/jangaroo/jooc/DeclarationScope/addImport(net.jangaroo.jooc.ast.ImportDirective)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/util/Iterator/hasNext()
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/util/Set/iterator()
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/lang/StringBuilder/append(char)
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/lang/StringBuilder/length()
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/util/Set/size()
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/util/Iterator/next()
net/jangaroo/jooc/json/JsonObject/toString(int,int)#java/util/Map/keySet()
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/Jooc/getCompilationUnit(java.lang.String)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#com/google/common/base/Predicates/equalTo(java.lang.Object)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#com/google/common/base/Predicates/not(com.google.common.base.Predicate)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/util/Collection/isEmpty()
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#com/google/common/base/Predicates/and(com.google.common.base.Predicate,com.google.common.base.Predicate)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/util/Collection/removeAll(java.util.Collection)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/util/LinkedHashSet/LinkedHashSet()
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#com/google/common/collect/Iterables/filter(java.lang.Iterable,com.google.common.base.Predicate)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/Jooc/resolveCompilationUnit(java.lang.String)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#com/google/common/collect/Multimap/putAll(java.lang.Object,java.lang.Iterable)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/util/Collection/addAll(java.util.Collection)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#com/google/common/collect/Multimap/get(java.lang.Object)
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#net/jangaroo/jooc/ast/ClassDeclaration/getQualifiedNameStr()
net/jangaroo/jooc/ImplementedMembersAnalyzer/visitClassDeclaration(net.jangaroo.jooc.ast.ClassDeclaration)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/CUP$parser$actions/CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int)#java/util/ArrayList/add(java.lang.Object)
net/jangaroo/jooc/CUP$parser$actions/CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int)#java_cup/runtime/Symbol/Symbol(int,int,int,java.lang.Object)
net/jangaroo/jooc/CUP$parser$actions/CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/CUP$parser$actions/CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int)#java/util/ArrayList/ArrayList(int)
net/jangaroo/jooc/CUP$parser$actions/CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int)#java_cup/runtime/lr_parser/done_parsing()
net/jangaroo/jooc/CUP$parser$actions/CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int)#java/util/Stack/elementAt(int)
net/jangaroo/jooc/CUP$parser$actions/CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int)#java/util/ArrayList/add(int,java.lang.Object)
net/jangaroo/jooc/CUP$parser$actions/CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/CUP$parser$actions/CUP$parser$do_action(int,java_cup.runtime.lr_parser,java.util.Stack,int)#java/lang/Exception/Exception(java.lang.String)
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/io/File/File(java.lang.String,java.lang.String)
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/lang/String/substring(int,int)
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/lang/String/substring(int)
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/lang/String/replace(char,char)
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/lang/String/startsWith(java.lang.String)
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/io/File/getPath()
net/jangaroo/jooc/backend/EmbeddedAssetResolver/visitAnnotationParameter(net.jangaroo.jooc.ast.AnnotationParameter)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/PostfixOpExpr/analyze(net.jangaroo.jooc.ast.AstNode)
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/Ide/analyze(net.jangaroo.jooc.ast.AstNode)
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/DotExpr/getArg()
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/TypeDeclaration/isDynamic()
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/DotExpr/setType(net.jangaroo.jooc.types.ExpressionType)
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/AssignmentOpExpr/getArg1()
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/api/CompileLog/error(net.jangaroo.jooc.api.FilePosition,java.lang.String)
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/ast/DotExpr/analyze(net.jangaroo.jooc.ast.AstNode)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/util/regex/Matcher/group(int)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/lang/String/split(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/util/Iterator/hasNext()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/lang/String/length()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/util/Iterator/next()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/util/LinkedHashSet/add(java.lang.Object)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/lang/String/startsWith(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/io/PrintWriter/println(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/lang/String/trim()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/util/regex/Matcher/matches()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/util/LinkedHashSet/LinkedHashSet()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/util/LinkedHashSet/iterator()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/printAsdoc(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/MethodModel/setAsdoc(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/MethodModel/setType(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/ParamModel/setName(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/FieldModel/setNamespace(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/FieldModel/setType(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#java/io/StringWriter/StringWriter()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/FieldModel/setAsdoc(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/MethodModel/setName(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/PropertyModel/setAsdoc(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/FieldModel/setStatic(boolean)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#java/util/Collections/singletonList(java.lang.Object)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/ClassModel/setAsdoc(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/ClassModel/addAnnotation(net.jangaroo.jooc.model.AnnotationModel)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#net/jangaroo/jooc/model/ParamModel/setType(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/main(java.lang.String[])#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitAnnotationProperty(net.jangaroo.jooc.model.AnnotationPropertyModel)#net/jangaroo/utils/CompilerUtils/unquote(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitAnnotationProperty(net.jangaroo.jooc.model.AnnotationPropertyModel)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitAnnotationProperty(net.jangaroo.jooc.model.AnnotationPropertyModel)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitAnnotationProperty(net.jangaroo.jooc.model.AnnotationPropertyModel)#java/io/PrintWriter/printf(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitAnnotationProperty(net.jangaroo.jooc.model.AnnotationPropertyModel)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitAnnotationProperty(net.jangaroo.jooc.model.AnnotationPropertyModel)#java/io/PrintWriter/print(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitAnnotationProperty(net.jangaroo.jooc.model.AnnotationPropertyModel)#net/jangaroo/jooc/model/AnnotationPropertyModel/getName()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitAnnotationProperty(net.jangaroo.jooc.model.AnnotationPropertyModel)#java/lang/String/substring(int,int)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitAnnotationProperty(net.jangaroo.jooc.model.AnnotationPropertyModel)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/ReturnModel/getAsdoc()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/util/Iterator/next()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/MethodType/toString()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/util/Iterator/hasNext()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/MethodModel/getNamespace()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/ParamModel/getName()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/lang/StringBuilder/setLength(int)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/io/PrintWriter/printf(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/MethodModel/getAsdoc()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/MethodModel/getName()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/lang/StringBuilder/length()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/util/List/contains(java.lang.Object)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/MethodModel/isStatic()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/io/PrintWriter/print(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/util/List/iterator()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/io/PrintWriter/println(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitMethod(net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/ParamModel/getAsdoc()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/io/PrintWriter/println()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#net/jangaroo/jooc/model/MemberModel/visit(net.jangaroo.jooc.model.ModelVisitor)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/util/Iterator/hasNext()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#net/jangaroo/jooc/model/ClassModel/getAsdoc()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/util/List/subList(int,int)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/util/Iterator/next()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/io/PrintWriter/print(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/util/List/isEmpty()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/io/PrintWriter/printf(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/util/List/size()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/util/List/get(int)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/util/List/iterator()
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#java/io/PrintWriter/println(java.lang.String)
net/jangaroo/jooc/backend/ActionScriptCodeGeneratingModelVisitor/visitClass(net.jangaroo.jooc.model.ClassModel)#net/jangaroo/jooc/model/ClassModel/getName()
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#net/jangaroo/utils/BOMStripperInputStream/BOMStripperInputStream(java.io.InputStream)
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#net/jangaroo/jooc/Scanner/setInputSource(net.jangaroo.jooc.input.InputSource)
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#java/lang/String/contains(java.lang.CharSequence)
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#net/jangaroo/jooc/config/ParserOptions/isVerbose()
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#net/jangaroo/jooc/JooParser/parse()
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#net/jangaroo/jooc/api/CompileLog/error(net.jangaroo.jooc.api.FilePosition,java.lang.String)
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#net/jangaroo/jooc/ScannerBase$ScanError/getMessage()
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/JangarooParser/doParse(net.jangaroo.jooc.input.InputSource,net.jangaroo.jooc.api.CompileLog,net.jangaroo.jooc.config.SemicolonInsertionMode)#java/lang/String/endsWith(java.lang.String)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/util/regex/Matcher/group(int)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/io/IOException/IOException(java.lang.String)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/util/regex/Matcher/matches()
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/io/File/File(java.lang.String)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/lang/Integer/parseInt(java.lang.String)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/lang/String/length()
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/io/File/exists()
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/lang/String/substring(int,int)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/io/File/isAbsolute()
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/lang/StringBuilder/append(char)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/io/FileInputStream/FileInputStream(java.io.File)
net/jangaroo/jooc/util/IncludeEvaluator/createReader(java.lang.String,net.jangaroo.jooc.input.InputSource)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#net/jangaroo/utils/AS3Type/typeByName(java.lang.String)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/lang/String/isEmpty()
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#net/jangaroo/utils/AS3Type/equals(java.lang.Object)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/util/List/contains(java.lang.Object)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#net/jangaroo/utils/AS3Type/ordinal()
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/lang/Boolean/parseBoolean(java.lang.String)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/lang/Double/valueOf(double)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/lang/Long/valueOf(long)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/lang/String/trim()
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#net/jangaroo/utils/CompilerUtils/guessType(java.lang.String)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/lang/Double/parseDouble(java.lang.String)
net/jangaroo/jooc/mxml/MxmlUtils/getAttributeValue(java.lang.String,java.lang.String)#java/lang/Boolean/valueOf(boolean)
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/util/regex/Matcher/group(int)
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/util/regex/Matcher/appendTail(java.lang.StringBuffer)
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/util/regex/Matcher/appendReplacement(java.lang.StringBuffer,java.lang.String)
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/util/regex/Matcher/quoteReplacement(java.lang.String)
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/util/regex/Matcher/find()
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/lang/StringBuffer/StringBuffer()
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/mxml/MxmlUtils/toASDoc(java.lang.String)#java/lang/StringBuffer/toString()
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/lang/String/charAt(int)
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/lang/String/length()
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/util/regex/Matcher/group()
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/util/regex/Matcher/find()
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/util/regex/Matcher/start()
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/lang/AssertionError/AssertionError()
net/jangaroo/jooc/mxml/MxmlUtils/getBindingExpression(java.lang.String)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/ast/FunctionDeclaration/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/ast/FunctionDeclaration/getIde()
net/jangaroo/jooc/ast/FunctionDeclaration/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/ast/FunctionDeclaration/isStatic()
net/jangaroo/jooc/ast/FunctionDeclaration/scope(net.jangaroo.jooc.Scope)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/ast/FunctionDeclaration/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/ast/FunctionDeclaration/setIde(net.jangaroo.jooc.ast.Ide)
net/jangaroo/jooc/ast/FunctionDeclaration/scope(net.jangaroo.jooc.Scope)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/ast/FunctionDeclaration/scope(net.jangaroo.jooc.Scope)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/ast/FunctionDeclaration/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/ast/FunctionDeclaration/getName()
net/jangaroo/jooc/ast/FunctionDeclaration/scope(net.jangaroo.jooc.Scope)#net/jangaroo/jooc/ast/FunctionDeclaration/isNative()
net/jangaroo/jooc/ast/FunctionDeclaration/scope(net.jangaroo.jooc.Scope)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/FunctionDeclaration/getClassDeclaration()
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/FunctionDeclaration/isStatic()
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/FunctionDeclaration/isClassMember()
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/Parameters/getHead()
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/FunctionDeclaration/getIde()
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/FunctionDeclaration/isOverride()
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/FunctionDeclaration/addPublicApiDependencyOn(net.jangaroo.jooc.ast.TypeRelation)
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/ast/FunctionDeclaration/isPublicApi()
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#net/jangaroo/jooc/api/CompileLog/error(net.jangaroo.jooc.api.FilePosition,java.lang.String)
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/ast/FunctionDeclaration/analyze(net.jangaroo.jooc.ast.AstNode)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/util/GraphUtil/reverse(java.util.Map)#java/util/Iterator/hasNext()
net/jangaroo/jooc/util/GraphUtil/reverse(java.util.Map)#java/util/Map$Entry/getKey()
net/jangaroo/jooc/util/GraphUtil/reverse(java.util.Map)#java/util/Set/iterator()
net/jangaroo/jooc/util/GraphUtil/reverse(java.util.Map)#java/util/Map$Entry/getValue()
net/jangaroo/jooc/util/GraphUtil/reverse(java.util.Map)#java/util/Collection/iterator()
net/jangaroo/jooc/util/GraphUtil/reverse(java.util.Map)#java/util/Iterator/next()
net/jangaroo/jooc/util/GraphUtil/reverse(java.util.Map)#java/util/HashMap/HashMap()
net/jangaroo/jooc/util/GraphUtil/reverse(java.util.Map)#java/util/Map/entrySet()
net/jangaroo/jooc/util/GraphUtil/reverse(java.util.Map)#java/util/Set/add(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Deque/removeLast()
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Iterator/hasNext()
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Deque/addAll(java.util.Collection)
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Map/get(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Map/values()
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Deque/iterator()
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Deque/add(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/HashSet/HashSet()
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Set/add(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Iterator/next()
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/HashMap/HashMap()
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/Deque/isEmpty()
net/jangaroo/jooc/util/GraphUtil/stronglyConnectedComponent(java.util.Map)#java/util/LinkedList/LinkedList()
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Deque/removeLast()
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Deque/addFirst(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Iterator/hasNext()
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Map/get(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/LinkedList/LinkedList()
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Set/contains(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/LinkedList/LinkedList(java.util.Collection)
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Deque/getLast()
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/HashSet/HashSet()
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Set/add(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Iterator/next()
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Deque/isEmpty()
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Map/keySet()
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Deque/add(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/kosarajuSort(java.util.Map)#java/util/Collection/iterator()
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/Map/containsKey(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/Iterator/hasNext()
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/Collections/reverse(java.util.List)
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/List/isEmpty()
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/Map/get(java.lang.Object)
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/Iterator/next()
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/HashMap/HashMap()
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/List/iterator()
net/jangaroo/jooc/util/GraphUtil/findPath(java.util.Map,java.lang.Object,java.lang.Object)#java/util/Collection/iterator()
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/lang/Package/getPackage(java.lang.String)
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/lang/Package/getSpecificationVendor()
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/lang/StringBuilder/toString()
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/lang/Package/getImplementationTitle()
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/lang/Package/getImplementationVersion()
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/lang/Package/getSpecificationTitle()
net/jangaroo/jooc/cli/JoocCommandLineParser/printVersion()#java/lang/Package/getSpecificationVersion()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#net/jangaroo/jooc/config/JoocConfiguration/getDebugMode()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#net/jangaroo/jooc/config/JoocConfiguration/isVersion()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#net/jangaroo/jooc/config/JoocConfiguration/isHelp()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#net/jangaroo/jooc/config/JoocConfiguration/isVerbose()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#net/jangaroo/jooc/config/JoocConfiguration/isGenerateApi()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/lang/StringBuilder/append(boolean)
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/io/File/getAbsolutePath()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#net/jangaroo/jooc/config/JoocConfiguration/getOutputDirectory()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#net/jangaroo/jooc/config/JoocConfiguration/getApiOutputDirectory()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/io/File/exists()
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#net/jangaroo/jooc/cli/JoocCommandLineParser/extendedUsage(org.kohsuke.args4j.CmdLineParser,org.kohsuke.args4j.CmdLineException)
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/cli/JoocCommandLineParser/parseConfig(org.kohsuke.args4j.CmdLineParser,net.jangaroo.jooc.config.JoocConfiguration)#java/io/PrintStream/println(java.lang.Object)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/MethodModel/getType()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#java/util/List/isEmpty()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#java/lang/String/equals(java.lang.Object)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#net/jangaroo/jooc/model/MethodModel/getName()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/logMethodSignatureCorrection(net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel,net.jangaroo.jooc.model.CompilationUnitModel,net.jangaroo.jooc.model.MethodModel)#java/io/PrintStream/println(java.lang.String)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#net/jangaroo/jooc/model/CompilationUnitModelRegistry/getSuperclass(net.jangaroo.jooc.model.ClassModel)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#java/util/Iterator/next()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#net/jangaroo/jooc/model/CompilationUnitModelRegistry/getSuperclassCompilationUnit(net.jangaroo.jooc.model.ClassModel)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#java/util/HashSet/HashSet()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#net/jangaroo/jooc/model/CompilationUnitModelRegistry/implementsInterface(net.jangaroo.jooc.model.CompilationUnitModel,java.lang.String)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#java/util/Iterator/hasNext()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#java/util/Set/iterator()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#java/util/List/iterator()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#java/util/Collection/iterator()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#net/jangaroo/jooc/model/MemberModel/getName()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementOverrides()#java/util/Set/add(java.lang.Object)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#net/jangaroo/jooc/model/MethodModel/setAsdoc(java.lang.String)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#java/util/Iterator/hasNext()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#net/jangaroo/jooc/model/CompilationUnitModelRegistry/getSuperclass(net.jangaroo.jooc.model.ClassModel)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#java/util/Iterator/next()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#net/jangaroo/jooc/model/ParamModel/getType()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#java/util/List/iterator()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#net/jangaroo/utils/AS3Type/getDefaultValue(java.lang.String)
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#java/lang/StringBuilder/length()
net/jangaroo/jooc/model/CompilationUnitModelRegistry/complementConstructor(net.jangaroo.jooc.model.ClassModel)#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#com/google/common/io/LineReader/readLine()
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/lang/String/isEmpty()
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/io/Reader/close()
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/lang/String/trim()
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/nio/file/Path/normalize()
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/nio/file/Paths/get(java.lang.String,java.lang.String[])
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/nio/file/Path/toFile()
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/io/FileReader/FileReader(java.io.File)
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/io/File/getPath()
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#com/google/common/io/LineReader/LineReader(java.lang.Readable)
net/jangaroo/jooc/CompressorImpl/compressFileList(java.io.File,java.io.File)#java/io/File/getParentFile()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/SourceMap/appendTo(java.lang.Appendable,java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/util/ArrayList/ArrayList()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/util/Iterator/hasNext()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/Compiler/getErrors()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/Compiler/hasErrors()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/File/File(java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/String/replace(char,char)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/util/Collections/singletonList(java.lang.Object)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/Compiler/compile(java.util.List,java.util.List,com.google.javascript.jscomp.CompilerOptions)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/Compiler/toSource()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/SourceFile/fromFile(java.io.File)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/File/getName()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/CompilerOptions/setSourceMapLocationMappings(java.util.List)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/nio/file/Path/relativize(java.nio.file.Path)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/WarningLevel/setOptionsForWarningLevel(com.google.javascript.jscomp.CompilerOptions)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/SourceMap$LocationMapping/SourceMap$LocationMapping(java.lang.String,java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/nio/file/Path/toString()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/CompilerOptions/setSourceMapOutputPath(java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/PrintWriter/PrintWriter(java.io.Writer)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/PrintWriter/close()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/Writer/append(java.lang.CharSequence)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/PrintWriter/printf(java.lang.String,java.lang.Object[])
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/util/Collections/emptyList()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/CompilerOptions/setOutputCharset(java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/util/Iterator/next()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/CompilerOptions/setSourceMapFormat(com.google.javascript.jscomp.SourceMap$Format)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/Writer/close()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/File/File(java.lang.String,java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/StringBuffer/toString()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/File/toPath()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/Compiler/Compiler()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/CompilerOptions/CompilerOptions()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/String/substring(int,int)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/PrintWriter/append(java.lang.CharSequence)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/util/List/add(java.lang.Object)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#com/google/javascript/jscomp/CompilationLevel/setOptionsForCompilationLevel(com.google.javascript.jscomp.CompilerOptions)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/nio/charset/Charset/forName(java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/util/Collection/iterator()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/String/lastIndexOf(java.lang.String)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/FileWriter/FileWriter(java.io.File)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/File/getPath()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/StringBuffer/StringBuffer()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/lang/StringBuilder/toString()
net/jangaroo/jooc/CompressorImpl/compress(java.util.Collection,java.io.File)#java/io/File/getParentFile()
net/jangaroo/jooc/ant/JoocTask/compile()#org/apache/tools/ant/BuildException/BuildException(java.lang.String,org.apache.tools.ant.Location)
net/jangaroo/jooc/ant/JoocTask/compile()#net/jangaroo/jooc/ant/JoocTask/log(java.lang.String,int)
net/jangaroo/jooc/ant/JoocTask/compile()#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/ant/JoocTask/compile()#net/jangaroo/jooc/ant/JoocTask/getProject()
net/jangaroo/jooc/ant/JoocTask/compile()#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/ant/JoocTask/compile()#net/jangaroo/jooc/ant/JoocTask/getLocation()
net/jangaroo/jooc/ant/JoocTask/compile()#java/lang/StringBuilder/toString()
net/jangaroo/jooc/ant/JoocTask/compile()#java/lang/StringBuilder/append(int)
net/jangaroo/jooc/ant/JoocTask/compile()#net/jangaroo/jooc/ant/JoocTask/log(java.lang.String)
net/jangaroo/jooc/ant/JoocTask/compile()#org/apache/tools/ant/Project/log(java.lang.String)
net/jangaroo/jooc/ant/JoocTask/compile()#java/lang/StringBuilder/StringBuilder(int)
net/jangaroo/jooc/ant/JoocTask/compile()#java/lang/StringBuilder/append(java.lang.Object)
net/jangaroo/jooc/ant/JoocTask/execute()#org/apache/tools/ant/BuildException/BuildException(java.lang.String,org.apache.tools.ant.Location)
net/jangaroo/jooc/ant/JoocTask/execute()#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/jooc/ant/JoocTask/execute()#org/apache/tools/ant/DirectoryScanner/getIncludedFiles()
net/jangaroo/jooc/ant/JoocTask/execute()#net/jangaroo/jooc/ant/JoocTask/getProject()
net/jangaroo/jooc/ant/JoocTask/execute()#java/io/File/exists()
net/jangaroo/jooc/ant/JoocTask/execute()#java/lang/String/isEmpty()
net/jangaroo/jooc/ant/JoocTask/execute()#net/jangaroo/jooc/ant/JoocTask/getLocation()
net/jangaroo/jooc/ant/JoocTask/execute()#java/lang/StringBuilder/toString()
net/jangaroo/jooc/ant/JoocTask/execute()#java/lang/StringBuilder/StringBuilder()
net/jangaroo/jooc/ant/JoocTask/execute()#java/io/File/getAbsolutePath()
net/jangaroo/jooc/ant/JoocTask/execute()#org/apache/tools/ant/Project/resolveFile(java.lang.String)
net/jangaroo/jooc/ant/JoocTask/execute()#net/jangaroo/jooc/ant/JoocTask/getDirectoryScanner(java.io.File)
net/jangaroo/jooc/ant/JoocTask/execute()#org/apache/tools/ant/types/Path/list()
net/jangaroo/jooc/ant/JoocTask/execute()#java/io/File/getPath()
net/jangaroo/properties/model/PropertiesClass/getImports()#java/util/regex/Matcher/group(int)
net/jangaroo/properties/model/PropertiesClass/getImports()#org/apache/commons/configuration/PropertiesConfiguration/getKeys()
net/jangaroo/properties/model/PropertiesClass/getImports()#java/util/Iterator/hasNext()
net/jangaroo/properties/model/PropertiesClass/getImports()#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/properties/model/PropertiesClass/getImports()#java/util/Iterator/next()
net/jangaroo/properties/model/PropertiesClass/getImports()#java/lang/String/equals(java.lang.Object)
net/jangaroo/properties/model/PropertiesClass/getImports()#java/lang/StringBuilder/StringBuilder()
net/jangaroo/properties/model/PropertiesClass/getImports()#java/util/regex/Matcher/find()
net/jangaroo/properties/model/PropertiesClass/getImports()#org/apache/commons/configuration/PropertiesConfiguration/getString(java.lang.String)
net/jangaroo/properties/model/PropertiesClass/getImports()#java/util/Set/add(java.lang.Object)
net/jangaroo/properties/model/PropertiesClass/getImports()#java/lang/StringBuilder/toString()
net/jangaroo/properties/model/PropertiesClass/getImports()#java/util/HashSet/HashSet()
net/jangaroo/properties/model/PropertiesClass/getImports()#java/util/regex/Pattern/matcher(java.lang.CharSequence)
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/util/regex/Matcher/group(int)
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/util/Iterator/hasNext()
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/util/Iterator/next()
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/lang/String/equals(java.lang.Object)
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/lang/StringBuilder/StringBuilder()
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#org/apache/commons/configuration/PropertiesConfiguration/getString(java.lang.String)
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/lang/StringBuilder/toString()
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#org/apache/commons/configuration/PropertiesConfiguration/getKeys()
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#org/apache/commons/configuration/PropertiesConfigurationLayout/getCanonicalComment(java.lang.String,boolean)
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/util/ArrayList/ArrayList()
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/util/List/add(java.lang.Object)
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#java/util/regex/Matcher/find()
net/jangaroo/properties/model/PropertiesClass/getProps(boolean,boolean)#org/apache/commons/configuration/PropertiesConfiguration/getLayout()
