org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#java/util/Map$Entry/getKey()
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#org/javersion/util/MutableHashSet/addAllFrom(java.lang.Iterable)
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#java/util/Set/removeAll(java.util.Collection)
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#org/javersion/util/Check/notNull(java.lang.Object,java.lang.String)
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#java/util/Set/iterator()
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#org/javersion/util/MutableHashMap/merge(java.lang.Object,java.lang.Object,org.javersion.util.Merger)
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#java/util/Map$Entry/getValue()
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#java/util/Iterator/hasNext()
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#java/util/Iterator/next()
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#com/google/common/collect/ArrayListMultimap/removeAll(java.lang.Object)
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#java/util/Map/entrySet()
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#org/javersion/util/MutableHashSet/add(java.lang.Object)
org/javersion/core/MergeBuilder/overwrite(org.javersion.core.Version)#java/util/Set/add(java.lang.Object)
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/SortedMap/comparator()
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/SortedMap/size()
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/Iterator/next()
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/Comparator/compare(java.lang.Object,java.lang.Object)
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/Iterator/hasNext()
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/Map$Entry/getKey()
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#com/google/common/base/MoreObjects/firstNonNull(java.lang.Object,java.lang.Object)
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/HashMap/HashMap(int)
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/Set/iterator()
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/Map$Entry/getValue()
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/SortedMap/entrySet()
org/javersion/core/Diff/diff(java.util.SortedMap,java.util.SortedMap)#java/util/Comparator/naturalOrder()
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Map/size()
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Map$Entry/getValue()
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Map/entrySet()
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Map/remove(java.lang.Object)
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Map$Entry/getKey()
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/HashMap/HashMap(java.util.Map)
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Iterator/next()
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Map/keySet()
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/HashMap/HashMap(int)
org/javersion/core/Diff/diffBySmallerFrom(java.util.Map,java.util.Map)#java/util/Set/iterator()
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Map/putAll(java.util.Map)
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Map/size()
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Iterator/next()
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Map$Entry/getValue()
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Map/entrySet()
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Map/remove(java.lang.Object)
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Map$Entry/getKey()
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/HashMap/HashMap(java.util.Map)
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/HashMap/HashMap(int)
org/javersion/core/Diff/diffBySmallerTo(java.util.Map,java.util.Map)#java/util/Set/iterator()
org/javersion/core/VersionGraphBuilder/resetVersion(org.javersion.core.Version,org.javersion.util.MutableSortedMap)#java/util/ArrayList/iterator()
org/javersion/core/VersionGraphBuilder/resetVersion(org.javersion.core.Version,org.javersion.util.MutableSortedMap)#java/util/ArrayList/ArrayList(java.util.Collection)
org/javersion/core/VersionGraphBuilder/resetVersion(org.javersion.core.Version,org.javersion.util.MutableSortedMap)#java/util/Iterator/hasNext()
org/javersion/core/VersionGraphBuilder/resetVersion(org.javersion.core.Version,org.javersion.util.MutableSortedMap)#org/javersion/util/MutableSortedMap/remove(java.lang.Object)
org/javersion/core/VersionGraphBuilder/resetVersion(org.javersion.core.Version,org.javersion.util.MutableSortedMap)#org/javersion/util/PersistentHashSet/contains(java.lang.Object)
org/javersion/core/VersionGraphBuilder/resetVersion(org.javersion.core.Version,org.javersion.util.MutableSortedMap)#java/util/Iterator/next()
org/javersion/core/VersionGraphBuilder/resetVersion(org.javersion.core.Version,org.javersion.util.MutableSortedMap)#org/javersion/util/MutableSortedMap/isEmpty()
org/javersion/core/VersionGraphBuilder/resetVersion(org.javersion.core.Version,org.javersion.util.MutableSortedMap)#org/javersion/util/MutableSortedMap/keySet()
org/javersion/core/VersionGraphBuilder/resetVersion(org.javersion.core.Version,org.javersion.util.MutableSortedMap)#java/lang/Iterable/iterator()
org/javersion/core/VersionGraphBuilder/add(org.javersion.core.Version)#org/javersion/util/Check/notNull(java.lang.Object,java.lang.String)
org/javersion/core/VersionGraphBuilder/add(org.javersion.core.Version)#java/lang/StringBuilder/append(java.lang.Object)
org/javersion/core/VersionGraphBuilder/add(org.javersion.core.Version)#java/lang/StringBuilder/toString()
org/javersion/core/VersionGraphBuilder/add(org.javersion.core.Version)#org/javersion/util/MutableMap/containsKey(java.lang.Object)
org/javersion/core/VersionGraphBuilder/add(org.javersion.core.Version)#org/javersion/util/PersistentSortedMap/toMutableMap()
org/javersion/core/VersionGraphBuilder/add(org.javersion.core.Version)#java/lang/StringBuilder/append(java.lang.String)
org/javersion/core/VersionGraphBuilder/add(org.javersion.core.Version)#java/lang/StringBuilder/StringBuilder()
org/javersion/core/VersionGraphBuilder/add(org.javersion.core.Version)#org/javersion/util/MutableMap/put(java.lang.Object,java.lang.Object)
org/javersion/core/VersionGraphBuilder/add(org.javersion.core.Version)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
