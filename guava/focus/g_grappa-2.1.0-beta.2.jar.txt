com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/reflect/Constructor/getParameterTypes()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/StringBuilder/append(int)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/Class/isPrimitive()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/StringBuilder/toString()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/Class/getConstructors()
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/Class/isAssignableFrom(java.lang.Class)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/Grappa/findConstructor(java.lang.Class,java.lang.Object[])#java/lang/Object/getClass()
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#com/google/common/base/Preconditions/checkState(boolean)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/equals(java.lang.Object)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#java/lang/String/equals(java.lang.Object)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/getInternalName()
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/getType(java.lang.Class)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#me/qmx/jitescript/util/CodegenUtils/p(java.lang.Class)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/getReturnType(java.lang.String)
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/tree/AbstractInsnNode/getType()
com/github/fge/grappa/transform/process/ImplicitActionsConverter/isObjectArgumentToRuleCreatingMethodCall(com.github.fge.grappa.transform.base.InstructionGraphNode,com.github.fge.grappa.transform.base.InstructionGraphNode)#org/objectweb/asm/Type/getArgumentTypes(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/Thread/currentThread()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/util/Objects/requireNonNull(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/Class/getName()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/String/replace(char,char)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/ClassLoader/getSystemClassLoader()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/Class/getClassLoader()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/Thread/getContextClassLoader()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/getInputStream(java.lang.Class)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/Type/equals(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/tree/MethodNode/MethodNode(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/equals(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/Map/containsKey(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/Type/getReturnType(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/Type/getType(java.lang.Class)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/List/add(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/ClassReader/accept(org.objectweb.asm.ClassVisitor,int)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/io/IOException/IOException(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/google/common/io/Closer/register(java.io.Closeable)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Map/values()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/ClassReader/ClassReader(java.io.InputStream)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/String/substring(int)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Collection/iterator()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/google/common/io/Closer/create()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/Object/equals(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/Class/getSuperclass()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#com/google/common/io/Closer/close()
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Set/removeAll(java.util.Collection)
com/github/fge/grappa/transform/generate/ClassNodeInitializer/process(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#com/google/common/base/Preconditions/checkState(boolean)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/LabelNode/LabelNode()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/AbstractInsnNode/getOpcode()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/InsnList/insertBefore(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.InsnList)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#me/qmx/jitescript/util/CodegenUtils/p(java.lang.Class)
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/AbstractInsnNode/getPrevious()
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#me/qmx/jitescript/util/CodegenUtils/sig(java.lang.Class,java.lang.Class[])
com/github/fge/grappa/transform/process/LabellingGenerator/process(com.github.fge.grappa.transform.base.ParserClassNode,com.github.fge.grappa.transform.base.RuleMethod)#org/objectweb/asm/tree/InsnList/getLast()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/util/Map/values()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/util/Iterator/next()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String[])
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/flush()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/util/Iterator/hasNext()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/setLength(int)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/close()
com/github/fge/grappa/run/trace/TracingListener/copyMatcherInfo(java.nio.file.FileSystem)#java/util/Collection/iterator()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#com/github/fge/grappa/run/events/PreMatchEvent/getContext()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/lang/Long/valueOf(long)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/lang/System/nanoTime()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#com/github/fge/grappa/run/context/MatcherContext/getMatcher()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#com/github/fge/grappa/run/context/MatcherContext/getCurrentIndex()
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#java/lang/Math/min(int,int)
com/github/fge/grappa/run/trace/TracingListener/beforeMatch(com.github.fge.grappa.run.events.PreMatchEvent)#com/github/fge/grappa/run/context/MatcherContext/getLevel()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/Integer/intValue()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#com/github/fge/grappa/run/events/MatchFailureEvent/getContext()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/System/nanoTime()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/Long/longValue()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(long)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#com/github/fge/grappa/run/context/MatcherContext/getCurrentIndex()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#com/github/fge/grappa/run/context/MatcherContext/getLevel()
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/lang/StringBuilder/setLength(int)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/matchFailure(com.github.fge.grappa.run.events.MatchFailureEvent)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/util/Map/size()
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String[])
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/flush()
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/setLength(int)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption[])
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/lang/StringBuilder/append(long)
com/github/fge/grappa/run/trace/TracingListener/copyParseInfo(java.nio.file.FileSystem)#java/io/BufferedWriter/close()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/Integer/intValue()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/System/nanoTime()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/Long/longValue()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(long)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#com/github/fge/grappa/run/context/MatcherContext/getCurrentIndex()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#com/github/fge/grappa/run/context/MatcherContext/getLevel()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#com/github/fge/grappa/run/events/MatchSuccessEvent/getContext()
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/StringBuilder/setLength(int)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/fge/grappa/run/trace/TracingListener/matchSuccess(com.github.fge.grappa.run.events.MatchSuccessEvent)#java/lang/Math/min(int,int)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/io/BufferedWriter/close()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/net/URI/create(java.lang.String)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/FileSystem/close()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/FileSystem/getPath(java.lang.String,java.lang.String[])
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/io/BufferedWriter/flush()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/StringBuilder/toString()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/Path/toUri()
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/FileSystems/newFileSystem(java.net.URI,java.util.Map)
com/github/fge/grappa/run/trace/TracingListener/afterParse(com.github.fge.grappa.run.events.PostParseEvent)#java/nio/file/Files/move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/google/common/hash/HashCode/writeBytesTo(byte[],int,int)
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/google/common/io/BaseEncoding/encode(byte[])
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/util/Iterator/next()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/google/common/hash/Hasher/hash()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/util/List/iterator()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#org/objectweb/asm/tree/InsnList/accept(org.objectweb.asm.MethodVisitor)
com/github/fge/grappa/transform/hash/InstructionGroupHasher/hashAndGetName()#com/google/common/hash/Hasher/putObject(java.lang.Object,com.google.common.hash.Funnel)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#org/objectweb/asm/ClassReader/accept(org.objectweb.asm.ClassVisitor,int)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/util/Map/values()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/io/InputStream/close()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#org/objectweb/asm/ClassReader/ClassReader(java.io.InputStream)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/lang/String/substring(int)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/util/Collection/iterator()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/lang/Object/equals(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/lang/Class/getSuperclass()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/util/Set/removeAll(java.util.Collection)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/process()#java/util/Iterator/next()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/Type/equals(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/tree/MethodNode/MethodNode(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/equals(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/Map/containsKey(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/Type/getReturnType(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/Type/getType(java.lang.Class)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/List/add(java.lang.Object)
com/github/fge/grappa/transform/generate/ClassNodeBootstrap/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/InsnList/add(org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/MethodNode/MethodNode(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/InsnNode/InsnNode(int)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/TypeInsnNode/TypeInsnNode(int,java.lang.String)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/tree/MethodInsnNode/MethodInsnNode(int,java.lang.String,java.lang.String,java.lang.String,boolean)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/Type/getInternalName()
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#org/objectweb/asm/Type/getType(java.lang.Class)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/util/List/add(java.lang.Object)
com/github/fge/grappa/transform/generate/ConstructorGenerator/createNewInstanceMethod(com.github.fge.grappa.transform.base.ParserClassNode)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/append(int)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/size()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/add(java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/get(int)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/analysis/BasicValue/getType()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/iterator()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/Type/getDescriptor()
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/FieldNode/FieldNode(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupPreparer/extractFields(com.github.fge.grappa.transform.base.InstructionGroup)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#org/objectweb/asm/Type/getType(java.lang.String)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/Thread/currentThread()
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/ClassLoader/loadClass(java.lang.String)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/Thread/getContextClassLoader()
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/String/substring(int)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/String/replace(char,char)
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/Object/getClass()
com/github/fge/grappa/transform/ClassCache$ClassCacheLoader/load(java.lang.String)#java/lang/Class/getClassLoader()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/InsnList/insert(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/InsnList/set(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/VarInsnNode/VarInsnNode(int,int)
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/get(int)
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/List/iterator()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/Type/getInternalName()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/GroupClassGenerator/convertXLoads(com.github.fge.grappa.transform.base.InstructionGroup)#org/objectweb/asm/tree/FieldInsnNode/FieldInsnNode(int,java.lang.String,java.lang.String,java.lang.String)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/InsnNode/InsnNode(int)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/InsnList/insertBefore(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.InsnList)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#me/qmx/jitescript/util/CodegenUtils/p(java.lang.Class)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/VarInsnNode/VarInsnNode(int,int)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/List/get(int)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/List/iterator()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/InsnList/insertBefore(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.AbstractInsnNode)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/List/size()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#java/util/Iterator/next()
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#org/objectweb/asm/tree/InsnList/insert(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.InsnList)
com/github/fge/grappa/transform/process/GroupClassGenerator/insertSetContextCalls(com.github.fge.grappa.transform.base.InstructionGroup,int)#me/qmx/jitescript/util/CodegenUtils/sig(java.lang.Class,java.lang.Class[])
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#com/google/common/collect/Range/upperEndpoint()
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#com/google/common/collect/DiscreteDomain/integers()
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#com/google/common/collect/Range/isEmpty()
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#com/google/common/collect/Range/atLeast(java.lang.Comparable)
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#com/google/common/collect/Range/intersection(com.google.common.collect.Range)
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#java/lang/StringBuilder/append(java.lang.Object)
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#java/lang/Integer/intValue()
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#com/google/common/collect/Range/canonical(com.google.common.collect.DiscreteDomain)
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#com/google/common/collect/Range/closed(java.lang.Comparable,java.lang.Comparable)
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#java/lang/StringBuilder/toString()
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#com/google/common/collect/Range/lowerEndpoint()
com/github/fge/grappa/misc/RangeMatcherBuilder/normalizeRange(com.google.common.collect.Range)#com/google/common/collect/Range/hasUpperBound()
com/github/fge/grappa/transform/load/ClassLoaderList/getInputStream(java.lang.Class)#java/util/Iterator/hasNext()
com/github/fge/grappa/transform/load/ClassLoaderList/getInputStream(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/load/ClassLoaderList/getInputStream(java.lang.Class)#java/util/Iterator/next()
com/github/fge/grappa/transform/load/ClassLoaderList/getInputStream(java.lang.Class)#java/util/Objects/requireNonNull(java.lang.Object)
com/github/fge/grappa/transform/load/ClassLoaderList/getInputStream(java.lang.Class)#java/lang/Class/getName()
com/github/fge/grappa/transform/load/ClassLoaderList/getInputStream(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/load/ClassLoaderList/getInputStream(java.lang.Class)#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
com/github/fge/grappa/transform/load/ClassLoaderList/getInputStream(java.lang.Class)#java/util/List/iterator()
com/github/fge/grappa/transform/load/ClassLoaderList/getInputStream(java.lang.Class)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/Integer/intValue()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/Class/getModifiers()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/reflect/Modifier/isPrivate(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/reflect/Constructor/getModifiers()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateInstantiation(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/intValue()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/reflect/Method/getModifiers()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/reflect/Modifier/isPrivate(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateMethod(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/Integer/intValue()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/reflect/Modifier/isPrivate(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/reflect/Field/getModifiers()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/fge/grappa/transform/process/InstructionGroupCreator/isPrivateField(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/reflect/Field/getName()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/Class/getCanonicalName()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/Class/getDeclaredFields()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/util/Objects/requireNonNull(java.lang.Object,java.lang.String)
com/github/fge/grappa/misc/AsmUtils/getClassField(java.lang.String,java.lang.String)#java/lang/Class/getSuperclass()
