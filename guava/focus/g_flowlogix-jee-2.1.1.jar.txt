com/flowlogix/ejb/JNDIObjectLocator/guessByType(java.lang.String)#java/lang/String/toUpperCase()
com/flowlogix/ejb/JNDIObjectLocator/guessByType(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/flowlogix/ejb/JNDIObjectLocator/guessByType(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/flowlogix/ejb/JNDIObjectLocator/guessByType(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/flowlogix/ejb/JNDIObjectLocator/guessByType(java.lang.String)#java/lang/String/lastIndexOf(java.lang.String)
com/flowlogix/ejb/JNDIObjectLocator/guessByType(java.lang.String)#java/lang/String/substring(int)
com/flowlogix/ejb/JNDIObjectLocator/guessByType(java.lang.String)#java/util/regex/Matcher/replaceFirst(java.lang.String)
com/flowlogix/ejb/JNDIObjectLocator/guessByType(java.lang.String)#java/lang/StringBuilder/toString()
com/flowlogix/ejb/JNDIObjectLocator/guessByType(java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#java/util/Iterator/remove()
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#org/omnifaces/util/Exceptions/unwrap(java.lang.Throwable)
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#org/apache/commons/lang/exception/ExceptionUtils/getRootCause(java.lang.Throwable)
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#org/omnifaces/util/Faces/setFlashAttribute(java.lang.String,java.lang.Object)
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#java/util/Iterator/next()
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#javax/faces/event/ExceptionQueuedEventContext/getException()
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#org/omnifaces/util/Faces/redirect(java.lang.String,java.lang.String[])
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#org/omnifaces/util/Faces/getRequestURIWithQueryString()
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#javax/faces/event/ExceptionQueuedEvent/getContext()
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#javax/faces/context/ExceptionHandler/handle()
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#java/util/Iterator/hasNext()
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/getUnhandledExceptionQueuedEvents()
com/flowlogix/ui/ViewExpiredExceptionHandlerFactory$Handler/handle()#java/lang/Iterable/iterator()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/util/regex/Matcher/group(int)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/application/ResourceHandler/createResource(java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/Boolean/valueOf(java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/io/IOException/IOException(java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/util/Iterator/hasNext()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/StringBuilder/append(java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/util/Map/get(java.lang.Object)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/context/FacesContext/getExternalContext()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/application/ResourceHandler/createResource(java.lang.String,java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/StringBuilder/StringBuilder()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/context/FacesContext/getResponseWriter()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/Package/getName()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#org/omnifaces/util/Faces/isDevelopment()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/util/regex/Matcher/matches()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/application/Resource/getRequestPath()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/context/ResponseWriter/writeAttribute(java.lang.String,java.lang.Object,java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/component/StateHelper/put(java.io.Serializable,java.lang.Object)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/application/Application/getResourceHandler()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/util/Iterator/next()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#com/flowlogix/ui/DynResource/getStateHelper()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/util/Map/keySet()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/Class/getPackage()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/context/ExternalContext/getInitParameter(java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/util/Set/iterator()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/String/replaceFirst(java.lang.String,java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/String/startsWith(java.lang.String)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/Object/getClass()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/context/FacesContext/getApplication()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#com/flowlogix/ui/DynResource/getAttributes()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#javax/faces/context/ResponseWriter/startElement(java.lang.String,javax.faces.component.UIComponent)
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/Boolean/booleanValue()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/StringBuilder/toString()
com/flowlogix/ui/DynResource/encodeBegin(javax.faces.context.FacesContext)#java/lang/String/endsWith(java.lang.String)
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#com/google/common/base/Splitter/split(java.lang.CharSequence)
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#com/google/common/base/Splitter/on(char)
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/omnifaces/util/Servlets/facesRedirect(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String[])
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/apache/shiro/web/util/WebUtils/toHttp(javax.servlet.ServletResponse)
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#com/google/common/collect/Iterators/getLast(java.util.Iterator)
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/lang/Iterable/iterator()
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/lang/StringBuilder/StringBuilder()
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#javax/servlet/http/HttpServletRequest/getMethod()
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/lang/StringBuilder/append(java.lang.String)
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/apache/shiro/web/util/WebUtils/toHttp(javax.servlet.ServletRequest)
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/lang/String/replaceFirst(java.lang.String,java.lang.String)
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#com/flowlogix/security/PassThruAuthenticationFilter/getLoginUrl()
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#java/lang/StringBuilder/toString()
com/flowlogix/security/PassThruAuthenticationFilter/redirectToLogin(javax.servlet.ServletRequest,javax.servlet.ServletResponse)#org/omnifaces/util/Servlets/getRequestBaseURL(javax.servlet.http.HttpServletRequest)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/String/hashCode()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/Object/equals(java.lang.Object)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/Double/longValue()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/Long/valueOf(long)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/Class/toString()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/String/equals(java.lang.Object)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.Class)#java/lang/StringBuilder/toString()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/lang/Class/forName(java.lang.String)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/lang/Object/toString()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#org/slf4j/Logger/warn(java.lang.String)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/io/PrintWriter/PrintWriter(java.io.Writer)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/lang/ClassNotFoundException/printStackTrace(java.io.PrintWriter)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/io/PrintWriter/flush()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/io/StringWriter/StringWriter()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/lang/ClassNotFoundException/toString()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/lang/Class/getName()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/flowlogix/util/TypeConverter/valueOf(java.lang.String,java.lang.String)#java/io/PrintWriter/append(java.lang.CharSequence)
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#java/lang/Object/toString()
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#java/util/Iterator/next()
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#com/google/common/base/Predicates/contains(java.util.regex.Pattern)
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#org/apache/shiro/session/Session/removeAttribute(java.lang.Object)
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#java/util/List/iterator()
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#org/apache/shiro/session/Session/getAttributeKeys()
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#com/google/common/collect/FluentIterable/filter(com.google.common.base.Predicate)
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#org/slf4j/Logger/debug(java.lang.String,java.lang.Throwable)
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#com/google/common/collect/FluentIterable/from(java.lang.Iterable)
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#com/google/common/base/Predicates/notNull()
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#org/apache/shiro/session/Session/getId()
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#java/util/Iterator/hasNext()
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#com/google/common/collect/FluentIterable/transform(com.google.common.base.Function)
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#org/apache/shiro/session/Session/getAttribute(java.lang.Object)
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#com/google/common/collect/FluentIterable/toList()
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#com/google/common/base/Predicates/and(com.google.common.base.Predicate,com.google.common.base.Predicate)
com/flowlogix/ejb/StatefulUtil/pingStateful(org.apache.shiro.session.Session)#java/lang/String/intern()
com/flowlogix/ejb/StatefulUtil/getStatefulEJB(org.apache.shiro.session.Session,java.lang.Class,boolean)#java/lang/Object/toString()
com/flowlogix/ejb/StatefulUtil/getStatefulEJB(org.apache.shiro.session.Session,java.lang.Class,boolean)#org/apache/shiro/session/Session/getId()
com/flowlogix/ejb/StatefulUtil/getStatefulEJB(org.apache.shiro.session.Session,java.lang.Class,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/flowlogix/ejb/StatefulUtil/getStatefulEJB(org.apache.shiro.session.Session,java.lang.Class,boolean)#java/lang/Class/getName()
com/flowlogix/ejb/StatefulUtil/getStatefulEJB(org.apache.shiro.session.Session,java.lang.Class,boolean)#java/lang/StringBuilder/StringBuilder()
com/flowlogix/ejb/StatefulUtil/getStatefulEJB(org.apache.shiro.session.Session,java.lang.Class,boolean)#org/apache/shiro/session/Session/getAttribute(java.lang.Object)
com/flowlogix/ejb/StatefulUtil/getStatefulEJB(org.apache.shiro.session.Session,java.lang.Class,boolean)#java/lang/String/intern()
com/flowlogix/ejb/StatefulUtil/getStatefulEJB(org.apache.shiro.session.Session,java.lang.Class,boolean)#org/apache/shiro/session/Session/setAttribute(java.lang.Object,java.lang.Object)
com/flowlogix/ejb/StatefulUtil/getStatefulEJB(org.apache.shiro.session.Session,java.lang.Class,boolean)#java/lang/StringBuilder/toString()
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#java/lang/String/hashCode()
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#javax/servlet/http/HttpServletRequest/getServerName()
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#java/lang/StringBuilder/append(java.lang.String)
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#java/lang/Integer/toString(int)
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#java/lang/String/equals(java.lang.Object)
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#java/lang/StringBuilder/StringBuilder()
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#javax/servlet/http/HttpServletRequest/getServerPort()
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#javax/servlet/http/HttpServletRequest/getScheme()
com/flowlogix/util/PathUtil/getServerPath(javax.servlet.http.HttpServletRequest)#java/lang/StringBuilder/toString()
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/util/Map$Entry/getKey()
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/util/Hashtable/Hashtable()
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/util/Set/iterator()
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#org/apache/shiro/util/StringUtils/hasText(java.lang.String)
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/lang/NullPointerException/NullPointerException(java.lang.String)
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/util/Map$Entry/getValue()
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/util/Iterator/hasNext()
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/lang/Integer/toString()
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/util/Iterator/next()
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/util/Hashtable/isEmpty()
com/flowlogix/ejb/JNDIConfigurer/buildLocator(com.flowlogix.ejb.JNDIConfigurer$Config)#java/util/Map/entrySet()
