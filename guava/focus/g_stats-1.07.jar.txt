com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#com/google/common/collect/PeekingIterator/next()
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#com/google/common/collect/Ordering/natural()
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#com/google/common/collect/PeekingIterator/hasNext()
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#com/google/common/collect/Iterators/peekingIterator(java.util.Iterator)
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#java/util/List/iterator()
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#com/google/common/collect/Ordering/isOrdered(java.lang.Iterable)
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#java/util/Iterator/hasNext()
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#java/lang/Long/valueOf(long)
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#com/google/common/collect/ImmutableList/builder()
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#java/util/Iterator/next()
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#java/lang/Double/doubleValue()
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#com/google/common/collect/ImmutableList$Builder/build()
com/proofpoint/stats/QuantileDigest/getQuantiles(java.util.List)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#java/io/DataInput/readByte()
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#java/util/Deque/size()
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#java/io/DataInput/readInt()
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#java/io/DataInput/readDouble()
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#java/util/Deque/push(java.lang.Object)
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#java/util/Deque/isEmpty()
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#java/util/ArrayDeque/ArrayDeque()
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#java/io/DataInput/readLong()
com/proofpoint/stats/QuantileDigest/deserialize(java.io.DataInput)#java/util/Deque/pop()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/util/concurrent/AtomicDouble/get()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/collect/ImmutableList/builder()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/collect/PeekingIterator/next()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/collect/Ordering/natural()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/util/concurrent/AtomicDouble/AtomicDouble()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/collect/PeekingIterator/hasNext()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/base/Ticker/read()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/collect/Iterators/peekingIterator(java.util.Iterator)
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#java/util/concurrent/TimeUnit/toSeconds(long)
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/collect/ImmutableList$Builder/build()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#java/util/List/iterator()
com/proofpoint/stats/QuantileDigest/getHistogram(java.util.List)#com/google/common/collect/Ordering/isOrdered(java.lang.Iterable)
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/lang/String/format(java.lang.String,java.lang.Object[])
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/util/Iterator/next()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/lang/StringBuilder/StringBuilder()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/util/Set/iterator()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/lang/Integer/valueOf(int)
com/proofpoint/stats/QuantileDigest/toGraphviz()#com/google/common/collect/Multimap/asMap()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/util/Map/entrySet()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/lang/StringBuilder/toString()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/util/ArrayList/ArrayList()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/util/Iterator/hasNext()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/lang/Double/valueOf(double)
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/lang/Long/valueOf(long)
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/lang/StringBuilder/append(java.lang.String)
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/util/Map$Entry/getKey()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/lang/StringBuilder/append(java.lang.Object)
com/proofpoint/stats/QuantileDigest/toGraphviz()#com/google/common/collect/Multimaps/index(java.lang.Iterable,com.google.common.base.Function)
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/util/Map$Entry/getValue()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/util/List/iterator()
com/proofpoint/stats/QuantileDigest/toGraphviz()#java/util/Collection/iterator()
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/lang/System/nanoTime()
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/util/concurrent/ConcurrentSkipListMap/firstKey()
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/lang/Math/random()
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/util/concurrent/ConcurrentSkipListMap/putIfAbsent(java.lang.Object,java.lang.Object)
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/lang/Double/valueOf(double)
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/lang/Long/valueOf(long)
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/util/concurrent/ConcurrentSkipListMap/remove(java.lang.Object)
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/util/concurrent/atomic/AtomicLong/incrementAndGet()
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/util/concurrent/ConcurrentSkipListMap/put(java.lang.Object,java.lang.Object)
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/lang/Double/doubleValue()
com/proofpoint/stats/ExponentiallyDecayingSample/update(long,long)#java/util/concurrent/atomic/AtomicLong/get()
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/util/ArrayList/iterator()
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/util/ArrayList/ArrayList(java.util.Collection)
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/util/Iterator/hasNext()
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/lang/Double/valueOf(double)
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/lang/Math/exp(double)
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/util/concurrent/atomic/AtomicLong/compareAndSet(long,long)
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/util/concurrent/ConcurrentSkipListMap/remove(java.lang.Object)
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/util/Iterator/next()
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/util/concurrent/ConcurrentSkipListMap/put(java.lang.Object,java.lang.Object)
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/lang/Double/doubleValue()
com/proofpoint/stats/ExponentiallyDecayingSample/rescale(long,long)#java/util/concurrent/ConcurrentSkipListMap/keySet()
