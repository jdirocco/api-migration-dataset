org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#java/lang/Integer/intValue()
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#com/mongodb/DBCollection/aggregate(java.util.List,com.mongodb.AggregationOptions)
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#com/mongodb/DB/getCollection(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#com/mongodb/AggregationOptions/builder()
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#com/mongodb/AggregationOptions$Builder/outputMode(com.mongodb.AggregationOptions$OutputMode)
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#com/mongodb/AggregationOptions$Builder/build()
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#com/google/common/collect/Lists/newArrayList(java.util.Iterator)
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#org/apache/calcite/util/Util/toString(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#java/lang/Iterable/iterator()
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#java/util/List/iterator()
org/apache/calcite/adapter/mongodb/MongoTable$2/enumerator()#com/mongodb/AggregationOutput/results()
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/InvalidRelException/toString()
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/slf4j/Logger/warn(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getTraitSet()
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/RelNode/getCluster()
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/replace(org.apache.calcite.plan.RelTrait)
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSets()
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getGroupSet()
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getAggCallList()
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/rel/logical/LogicalAggregate/getInput()
org/apache/calcite/adapter/mongodb/MongoRules$MongoAggregateRule/convert(org.apache.calcite.rel.RelNode)#org/apache/calcite/plan/RelTraitSet/simplify()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil/conjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map$Entry/getKey()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#org/apache/calcite/util/JsonBuilder/map()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Set/iterator()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map/clear()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map$Entry/getValue()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/clear()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Map/entrySet()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/removeAll(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#com/google/common/collect/Multimap/asMap()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateAnd(org.apache.calcite.rex.RexNode)#java/util/Collection/iterator()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/List/size()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#org/apache/calcite/util/JsonBuilder/map()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/Iterator/next()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/List/get(int)
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#org/apache/calcite/plan/RelOptUtil/disjunctions(org.apache.calcite.rex.RexNode)
org/apache/calcite/adapter/mongodb/MongoFilter$Translator/translateOr(org.apache.calcite.rex.RexNode)#java/util/List/iterator()
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.CharSequence)
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/util/Map/get(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/util/Util/commaList(java.util.List)
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#com/google/common/collect/ImmutableList/get(int)
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(char)
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rel/type/RelDataType/getSqlTypeName()
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/util/List/size()
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getKind()
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexNode/getType()
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexLiteral/getValue2()
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#java/util/List/get(int)
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/toString()
org/apache/calcite/adapter/mongodb/MongoRules$RexToMongoTranslator/visitCall(org.apache.calcite.rex.RexCall)#org/apache/calcite/rex/RexCall/getOperator()
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#com/mongodb/util/JSON/parse(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#java/util/Iterator/next()
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#com/mongodb/BasicDBList/get(int)
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#java/lang/Object/toString()
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#com/mongodb/DB/command(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#java/util/List/iterator()
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#com/mongodb/CommandResult/get(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoTable/aggregate(com.mongodb.DB,java.util.List,java.util.List)#org/apache/calcite/util/Util/skip(java.util.List)
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/adapter/mongodb/MongoProject/getCluster()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/Iterator/next()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/util/Util/toString(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/adapter/mongodb/MongoProject/getNamedProjects()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/plan/RelOptCluster/getTypeFactory()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/String/equals(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/adapter/mongodb/MongoProject/getInput()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/List/iterator()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rex/RexNode/accept(org.apache.calcite.rex.RexVisitor)
org/apache/calcite/adapter/mongodb/MongoProject/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/getRowType()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/Pair/zip(java.util.List,java.util.List)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/getTypeFactory()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/return_(org.apache.calcite.linq4j.tree.LabelTarget,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRel$Prefer/prefer(org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/append(java.lang.String,org.apache.calcite.linq4j.tree.Expression)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/getInput()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/plan/RelOptTable/getExpression(java.lang.Class)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/List/iterator()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/add(org.apache.calcite.linq4j.tree.Statement)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/Expressions/call(org.apache.calcite.linq4j.tree.Expression,java.lang.reflect.Method,org.apache.calcite.linq4j.tree.Expression[])
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/toBlock()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/io/PrintStream/println(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/EnumerableRelImplementor/result(org.apache.calcite.adapter.enumerable.PhysType,org.apache.calcite.linq4j.tree.BlockStatement)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/adapter/enumerable/PhysTypeImpl/of(org.apache.calcite.adapter.java.JavaTypeFactory,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.adapter.enumerable.JavaRowFormat)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/util/Iterator/next()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/util/Pair/right(java.util.List)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/linq4j/tree/BlockBuilder/BlockBuilder()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/String/startsWith(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/mongodb/MongoToEnumerableConverter/implement(org.apache.calcite.adapter.enumerable.EnumerableRelImplementor,org.apache.calcite.adapter.enumerable.EnumerableRel$Prefer)#org/apache/calcite/runtime/Hook/run(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/Integer/intValue()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/util/ImmutableBitSet/cardinality()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/util/ImmutableBitSet/iterator()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/Iterator/next()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/util/Util/toString(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/adapter/mongodb/MongoAggregate/getInput()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/List/iterator()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/util/ImmutableBitSet/nth(int)
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rel/RelNode/getRowType()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rel/core/AggregateCall/getArgList()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rel/core/AggregateCall/getAggregation()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/List/get(int)
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/util/ImmutableBitSet/isEmpty()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/mongodb/MongoAggregate/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/adapter/mongodb/MongoAggregate/getRowType()
org/apache/calcite/adapter/mongodb/MongoAggregate/toMongo(org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List)#java/lang/Integer/intValue()
org/apache/calcite/adapter/mongodb/MongoAggregate/toMongo(org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoAggregate/toMongo(org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoAggregate/toMongo(org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List)#java/util/List/size()
org/apache/calcite/adapter/mongodb/MongoAggregate/toMongo(org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/mongodb/MongoAggregate/toMongo(org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoAggregate/toMongo(org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List)#java/lang/AssertionError/AssertionError()
org/apache/calcite/adapter/mongodb/MongoAggregate/toMongo(org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/mongodb/MongoAggregate/toMongo(org.apache.calcite.sql.SqlAggFunction,java.util.List,java.util.List)#java/util/List/get(int)
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/ArrayList/ArrayList()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/Iterator/hasNext()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/List/isEmpty()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rel/type/RelDataType/getFieldList()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rel/RelCollation/getFieldCollations()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/util/Util/toString(java.lang.Iterable,java.lang.String,java.lang.String,java.lang.String)
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/List/add(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/List/get(int)
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/List/iterator()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/toString()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/append(java.lang.String)
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rel/type/RelDataTypeField/getName()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/adapter/mongodb/MongoSort/getInput()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/append(int)
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rel/RelFieldCollation/getFieldIndex()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/util/Iterator/next()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/rex/RexLiteral/getValue()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#java/lang/StringBuilder/StringBuilder()
org/apache/calcite/adapter/mongodb/MongoSort/implement(org.apache.calcite.adapter.mongodb.MongoRel$Implementor)#org/apache/calcite/adapter/mongodb/MongoSort/getRowType()
