org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/dst()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/provider()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/DefaultTunnel/DefaultTunnel(org.onosproject.net.provider.ProviderId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.core.DefaultGroupId,org.onosproject.incubator.net.tunnel.TunnelId,org.onosproject.incubator.net.tunnel.TunnelName,org.onosproject.net.Path,org.onosproject.net.NetworkResource,org.onosproject.net.Annotations[])
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/tunnelName()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelStore/createOrUpdateTunnel(org.onosproject.incubator.net.tunnel.Tunnel)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/type()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/groupId()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/path()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/src()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/annotations()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/resource()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelProvider/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/dst()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelStore/createOrUpdateTunnel(org.onosproject.incubator.net.tunnel.Tunnel,org.onosproject.incubator.net.tunnel.Tunnel$State)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/provider()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/tunnelName()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/type()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/path()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/src()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/annotations()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/resource()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelProvider/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/DefaultTunnel/DefaultTunnel(org.onosproject.net.provider.ProviderId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.incubator.net.tunnel.Tunnel$State,org.onosproject.core.DefaultGroupId,org.onosproject.incubator.net.tunnel.TunnelId,org.onosproject.incubator.net.tunnel.TunnelName,org.onosproject.net.Path,org.onosproject.net.NetworkResource,org.onosproject.net.Annotations[])
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/groupId()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/src()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/dst()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/provider()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelProvider/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/type()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/dst()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/provider()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/DefaultTunnel/DefaultTunnel(org.onosproject.net.provider.ProviderId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.core.DefaultGroupId,org.onosproject.incubator.net.tunnel.TunnelId,org.onosproject.incubator.net.tunnel.TunnelName,org.onosproject.net.Path,org.onosproject.net.NetworkResource,org.onosproject.net.Annotations[])
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/tunnelName()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelStore/createOrUpdateTunnel(org.onosproject.incubator.net.tunnel.Tunnel)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/type()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/groupId()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/path()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/src()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/annotations()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelDescription/resource()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)#org/onosproject/incubator/net/tunnel/TunnelProvider/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/dst()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/provider()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/tunnelName()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelStore/createOrUpdateTunnel(org.onosproject.incubator.net.tunnel.Tunnel)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/type()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/path()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/src()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/annotations()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/resource()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelProvider/id()
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/DefaultTunnel/DefaultTunnel(org.onosproject.net.provider.ProviderId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.incubator.net.tunnel.Tunnel$State,org.onosproject.core.DefaultGroupId,org.onosproject.incubator.net.tunnel.TunnelId,org.onosproject.incubator.net.tunnel.TunnelName,org.onosproject.net.Path,org.onosproject.net.NetworkResource,org.onosproject.net.Annotations[])
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)#org/onosproject/incubator/net/tunnel/TunnelDescription/groupId()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProvider(org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/DefaultTunnel/DefaultTunnel(org.onosproject.net.provider.ProviderId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.core.DefaultGroupId,org.onosproject.incubator.net.tunnel.TunnelId,org.onosproject.incubator.net.tunnel.TunnelName,org.onosproject.net.Path,org.onosproject.net.Annotations[])
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])#java/util/Iterator/hasNext()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])#java/util/Collection/size()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])#java/util/Iterator/next()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])#java/util/Set/iterator()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/TunnelProvider/setupTunnel(org.onosproject.incubator.net.tunnel.Tunnel,org.onosproject.net.Path)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProviders()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/TunnelStore/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations[])
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProvider(org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/DefaultTunnel/DefaultTunnel(org.onosproject.net.provider.ProviderId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.core.DefaultGroupId,org.onosproject.incubator.net.tunnel.TunnelId,org.onosproject.incubator.net.tunnel.TunnelName,org.onosproject.net.Path,org.onosproject.net.Annotations[])
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])#java/util/Iterator/hasNext()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])#java/util/Collection/size()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])#java/util/Iterator/next()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])#java/util/Set/iterator()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/TunnelProvider/setupTunnel(org.onosproject.incubator.net.tunnel.Tunnel,org.onosproject.net.Path)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProviders()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])#org/onosproject/incubator/net/tunnel/TunnelStore/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations[])
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/TunnelProvider/releaseTunnel(org.onosproject.incubator.net.tunnel.Tunnel)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProvider(org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/TunnelStore/createOrUpdateTunnel(org.onosproject.incubator.net.tunnel.Tunnel,org.onosproject.incubator.net.tunnel.Tunnel$State)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)#java/util/Iterator/hasNext()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/TunnelStore/queryTunnel(org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)#java/util/Iterator/next()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)#java/util/Set/iterator()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProviders()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/TunnelProvider/releaseTunnel(org.onosproject.incubator.net.tunnel.Tunnel)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#org/onosproject/net/provider/ProviderId/equals(java.lang.Object)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProvider(org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/Tunnel$Type/equals(java.lang.Object)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#java/util/Iterator/hasNext()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/Tunnel/providerId()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#java/util/Collection/isEmpty()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#java/util/Iterator/next()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#java/util/Set/iterator()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/Tunnel/type()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/TunnelStore/queryTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#java/util/Collection/iterator()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProviders()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/TunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/TunnelProvider/releaseTunnel(org.onosproject.incubator.net.tunnel.Tunnel)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProvider(org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#java/util/Iterator/hasNext()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/Tunnel/providerId()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/TunnelStore/queryTunnel(org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#java/util/Iterator/next()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProviders()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#org/onosproject/incubator/net/tunnel/TunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)#java/util/Set/iterator()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/TunnelProvider/releaseTunnel(org.onosproject.incubator.net.tunnel.Tunnel)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#org/onosproject/net/provider/ProviderId/equals(java.lang.Object)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProvider(org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#java/util/Iterator/hasNext()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/Tunnel/providerId()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#java/util/Collection/isEmpty()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#java/util/Iterator/next()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#java/util/Set/iterator()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/TunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/impl/TunnelManager/getProviders()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#org/onosproject/incubator/net/tunnel/TunnelStore/queryTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)#java/util/Collection/iterator()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/incubator/net/virtual/VirtualNetworkProviderService/tunnelDown(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint,org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/net/intent/PointToPointIntent/key()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/incubator/net/virtual/VirtualNetworkProviderService/tunnelUp(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint,org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/incubator/net/tunnel/TunnelId/valueOf(java.lang.String)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/net/intent/IntentEvent/subject()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/net/intent/IntentService/purge(org.onosproject.net.intent.Intent)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/net/intent/IntentEvent$Type/ordinal()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#java/lang/Object/toString()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/net/intent/IntentEvent/type()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/net/intent/PointToPointIntent/ingressPoint()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider$InternalPtPtIntentListener/event(org.onosproject.net.intent.IntentEvent)#org/onosproject/net/intent/PointToPointIntent/egressPoint()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/ConnectPoint/deviceId()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#java/lang/Object/equals(java.lang.Object)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/incubator/net/virtual/VirtualNetworkStore/getPorts(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#java/util/Iterator/hasNext()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/incubator/net/virtual/VirtualPort/realizedBy()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/incubator/net/virtual/VirtualPort/element()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/incubator/net/virtual/VirtualPort/number()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#java/util/Set/iterator()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/Port/number()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#java/util/Iterator/next()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/ConnectPoint/port()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/ConnectPoint/ConnectPoint(org.onosproject.net.ElementId,org.onosproject.net.PortNumber)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/PortNumber/equals(java.lang.Object)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/Element/id()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/ConnectPoint/elementId()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/Port/element()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#java/lang/Object/equals(java.lang.Object)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/incubator/net/virtual/VirtualNetworkStore/getPorts(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#java/util/Iterator/hasNext()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/incubator/net/virtual/VirtualPort/realizedBy()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/incubator/net/virtual/VirtualPort/element()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/incubator/net/virtual/VirtualPort/number()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#java/util/Set/iterator()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/Port/number()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#java/util/Iterator/next()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/ConnectPoint/port()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/ConnectPoint/ConnectPoint(org.onosproject.net.ElementId,org.onosproject.net.PortNumber)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/PortNumber/equals(java.lang.Object)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/Element/id()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/ConnectPoint/elementId()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)#org/onosproject/net/Port/element()
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#java/util/Optional/get()
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#org/onosproject/net/host/HostService/getHostsByIp(org.onlab.packet.IpAddress)
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#java/util/stream/Stream/findFirst()
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#org/onosproject/incubator/net/routing/RouteStore/getNextHop(org.onlab.packet.IpAddress)
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#org/onosproject/incubator/net/routing/RouteStore/updateNextHop(org.onlab.packet.IpAddress,org.onlab.packet.MacAddress)
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#org/onosproject/net/Host/mac()
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#java/util/Optional/isPresent()
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#org/onosproject/incubator/net/routing/Route/nextHop()
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#java/util/Set/stream()
org/onosproject/incubator/net/routing/impl/RouteManager/resolve(org.onosproject.incubator.net.routing.Route)#org/onosproject/net/host/HostService/startMonitoringIp(org.onlab.packet.IpAddress)
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/DefaultMeter$Builder/forDevice(org.onosproject.net.DeviceId)
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/MeterRequest/isBurst()
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#java/util/concurrent/CompletableFuture/whenComplete(java.util.function.BiConsumer)
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/MeterRequest/appId()
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/MeterRequest/unit()
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/Meter$Builder/burst()
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/Meter$Builder/withId(org.onosproject.net.meter.MeterId)
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/DefaultMeter/setState(org.onosproject.net.meter.MeterState)
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/MeterRequest/deviceId()
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/Meter$Builder/build()
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/DefaultMeter/builder()
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/Meter$Builder/fromApp(org.onosproject.core.ApplicationId)
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/Meter$Builder/withBands(java.util.Collection)
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/MeterRequest/bands()
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/Meter$Builder/withUnit(org.onosproject.net.meter.Meter$Unit)
org/onosproject/incubator/net/meter/impl/MeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)#org/onosproject/net/meter/MeterStore/deleteMeter(org.onosproject.net.meter.Meter)
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/DefaultMeter$Builder/forDevice(org.onosproject.net.DeviceId)
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/MeterRequest/isBurst()
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#java/util/concurrent/CompletableFuture/whenComplete(java.util.function.BiConsumer)
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/MeterRequest/appId()
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/MeterRequest/unit()
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/Meter$Builder/burst()
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/Meter$Builder/withId(org.onosproject.net.meter.MeterId)
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/Meter$Builder/withUnit(org.onosproject.net.meter.Meter$Unit)
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/MeterRequest/deviceId()
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/Meter$Builder/build()
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/DefaultMeter/builder()
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/Meter$Builder/fromApp(org.onosproject.core.ApplicationId)
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/Meter$Builder/withBands(java.util.Collection)
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/MeterRequest/bands()
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/DefaultMeter/setState(org.onosproject.net.meter.MeterState)
org/onosproject/incubator/net/meter/impl/MeterManager/submit(org.onosproject.net.meter.MeterRequest)#org/onosproject/net/meter/MeterStore/storeMeter(org.onosproject.net.meter.Meter)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#java/util/Optional/get()
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#java/util/Iterator/hasNext()
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#com/google/common/collect/Sets/newHashSet(java.lang.Iterable)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#java/util/Collections/emptySet()
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#org/onosproject/incubator/net/intf/Interface/name()
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#org/onosproject/incubator/net/config/basics/InterfaceConfig/subject()
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#org/onosproject/incubator/net/intf/InterfaceEvent/InterfaceEvent(org.onosproject.incubator.net.intf.InterfaceEvent$Type,org.onosproject.incubator.net.intf.Interface,org.onosproject.incubator.net.intf.Interface)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#org/onosproject/incubator/net/config/basics/InterfaceConfig/getInterfaces()
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#java/util/Set/remove(java.lang.Object)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#org/onosproject/incubator/net/intf/impl/InterfaceManager/process(org.onosproject.event.Event)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#java/util/Optional/isPresent()
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#java/util/Iterator/next()
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#org/onosproject/incubator/net/intf/InterfaceEvent/InterfaceEvent(org.onosproject.incubator.net.intf.InterfaceEvent$Type,org.onosproject.incubator.net.intf.Interface)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#java/lang/String/equals(java.lang.Object)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#org/onosproject/incubator/net/intf/Interface/equals(java.lang.Object)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/onosproject/incubator/net/intf/impl/InterfaceManager/updateInterfaces(org.onosproject.incubator.net.config.basics.InterfaceConfig)#java/util/Set/iterator()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/net/intent/PointToPointIntent$Builder/appId(org.onosproject.core.ApplicationId)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/net/intent/PointToPointIntent$Builder/key(org.onosproject.net.intent.Key)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#java/util/ArrayList/ArrayList()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/net/intent/PointToPointIntent/builder()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#java/util/List/add(java.lang.Object)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/net/intent/constraint/EncapsulationConstraint/EncapsulationConstraint(org.onosproject.net.EncapsulationType)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/net/intent/PointToPointIntent$Builder/constraints(java.util.List)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#java/lang/Object/toString()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/net/intent/IntentService/submit(org.onosproject.net.intent.Intent)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/net/intent/PointToPointIntent$Builder/egressPoint(org.onosproject.net.ConnectPoint)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/net/intent/PointToPointIntent$Builder/build()
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/incubator/net/tunnel/TunnelId/valueOf(java.lang.String)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)
org/onosproject/incubator/net/virtual/impl/PtToPtIntentVirtualNetworkProvider/createTunnel(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint)#org/onosproject/net/intent/PointToPointIntent$Builder/ingressPoint(org.onosproject.net.ConnectPoint)
