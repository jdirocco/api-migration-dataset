org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#net/sourceforge/pmd/cpd/TokenEntry/getEOF()
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#net/sourceforge/pmd/cpd/TokenEntry/TokenEntry(java.lang.String,java.lang.String,int)
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#net/sourceforge/pmd/cpd/SourceCode/getCode()
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#java/util/Iterator/next()
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#net/sourceforge/pmd/cpd/Tokens/add(net.sourceforge.pmd.cpd.TokenEntry)
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#java/lang/Iterable/iterator()
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#com/google/common/base/Splitter/on(java.lang.String)
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#java/util/List/iterator()
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#net/sourceforge/pmd/cpd/SourceCode/getFileName()
org/sonar/xoo/lang/XooTokenizer/tokenize(net.sourceforge.pmd.cpd.SourceCode,net.sourceforge.pmd.cpd.Tokens)#com/google/common/base/Splitter/split(java.lang.CharSequence)
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/selectLine(int)
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/newLocation()
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssueLocation/at(org.sonar.api.batch.fs.TextRange)
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/save()
org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/newIssue()
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/lang/CpdTokenizerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#org/sonar/xoo/lang/SymbolReferencesSensor/addReference(org.sonar.api.source.Symbolizable$SymbolTableBuilder,org.sonar.api.source.Symbol,java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#com/google/common/base/Splitter/split(java.lang.CharSequence)
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#java/lang/StringBuilder/append(int)
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#java/util/Iterator/next()
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#java/lang/Iterable/iterator()
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#java/io/File/getAbsolutePath()
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#com/google/common/base/Splitter/on(java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#org/sonar/xoo/lang/SymbolReferencesSensor/addSymbol(org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/settings()
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/InputFile/lines()
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/getSonarQubeVersion()
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/at(org.sonar.api.batch.fs.TextRange)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/utils/Version/create(int,int)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/gap(java.lang.Double)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/InputFile/selectLine(int)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/save()
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/newIssue()
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/newLocation()
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/overrideSeverity(org.sonar.api.batch.rule.Severity)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/config/Settings/getDouble(java.lang.String)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/config/Settings/getString(java.lang.String)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/effortToFix(java.lang.Double)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/utils/Version/isGreaterThanOrEqual(org.sonar.api.utils.Version)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/rule/Severity/valueOf(java.lang.String)
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Matcher/group(int)
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#org/sonar/api/batch/fs/InputFile/path()
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/Iterator/next()
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#org/sonar/api/batch/fs/InputFile/newPointer(int,int)
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Matcher/end()
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Matcher/start()
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/List/iterator()
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/nio/file/Files/readAllLines(java.nio.file.Path,java.nio.charset.Charset)
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/lang/Integer/parseInt(java.lang.String)
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Matcher/find()
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/lang/Integer/valueOf(int)
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#org/sonar/api/batch/fs/InputFile/charset()
org/sonar/xoo/rule/MultilineIssuesSensor/parseIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/InputFile/selectLine(int)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/severity(org.sonar.api.batch.rule.Severity)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/save()
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/type(org.sonar.api.rules.RuleType)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/newLocation()
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/remediationEffortMinutes(java.lang.Long)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/InputFile/lines()
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/newExternalIssue()
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/at(org.sonar.api.batch.fs.TextRange)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/rule/Severity/valueOf(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/test/CoveragePerTestSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/batch/SensorContext/getResource(org.sonar.api.resources.Resource)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/scan/filesystem/PathResolver/relativePath(java.io.File,java.io.File)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/issue/Issuable$IssueBuilder/message(java.lang.String)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.resources.Resource)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#java/lang/Integer/valueOf(int)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/issue/Issuable/addIssue(org.sonar.api.issue.Issue)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/resources/File/create(java.lang.String)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguage(java.lang.String)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/scan/filesystem/PathResolver/PathResolver()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/issue/Issuable$IssueBuilder/ruleKey(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/issue/Issuable/newIssueBuilder()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/batch/fs/FileSystem/baseDir()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/issue/Issuable$IssueBuilder/build()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/batch/fs/FileSystem/files(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/resources/File/getParent()
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/issue/Issuable$IssueBuilder/line(java.lang.Integer)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/DeprecatedResourceApiSensor/analyse(org.sonar.api.resources.Project,org.sonar.api.batch.SensorContext)#org/sonar/xoo/rule/DeprecatedResourceApiSensor/createIssueOnDir(org.sonar.api.resources.Directory)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#com/google/common/collect/Table/row(java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/issue/NewIssue/newLocation()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/List/size()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/issue/NewIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Set/iterator()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/issue/NewIssue/addFlow(java.lang.Iterable)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map/entrySet()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#com/google/common/collect/Table/rowMap()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/issue/NewIssue/save()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/SensorContext/newIssue()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/issue/NewIssue/addLocation(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map$Entry/getKey()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#com/google/common/collect/Lists/newArrayList()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map/get(java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Iterator/next()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map/keySet()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Collections/sort(java.util.List)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/List/add(java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/fs/InputFile/newRange(org.sonar.api.batch.fs.TextPointer,org.sonar.api.batch.fs.TextPointer)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/issue/NewIssueLocation/at(org.sonar.api.batch.fs.TextRange)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/List/get(int)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map$Entry/getValue()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/issue/NewIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/List/iterator()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/lang/StringBuilder/toString()
org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/charAt(int)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/cpd/NewCpdTokens/save()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/newRange(int,int,int,int)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.nio.charset.Charset)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(char)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/length()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/charset()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/cpd/NewCpdTokens/addToken(org.sonar.api.batch.fs.TextRange,java.lang.String)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/cpd/NewCpdTokens/onFile(org.sonar.api.batch.fs.InputFile)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Character/isWhitespace(char)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/setLength(int)
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/length()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/lang/CpdTokenizerSensor/tokenize(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/newCpdTokens()
org/sonar/xoo/rule/XooFakeExporter/exportProfile(org.sonar.api.profiles.RulesProfile,java.io.Writer)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/xoo/rule/XooFakeExporter/exportProfile(org.sonar.api.profiles.RulesProfile,java.io.Writer)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/rule/XooFakeExporter/exportProfile(org.sonar.api.profiles.RulesProfile,java.io.Writer)#java/lang/StringBuilder/append(int)
org/sonar/xoo/rule/XooFakeExporter/exportProfile(org.sonar.api.profiles.RulesProfile,java.io.Writer)#java/util/List/size()
org/sonar/xoo/rule/XooFakeExporter/exportProfile(org.sonar.api.profiles.RulesProfile,java.io.Writer)#java/lang/StringBuilder/toString()
org/sonar/xoo/rule/XooFakeExporter/exportProfile(org.sonar.api.profiles.RulesProfile,java.io.Writer)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/rule/XooFakeExporter/exportProfile(org.sonar.api.profiles.RulesProfile,java.io.Writer)#java/io/Writer/write(java.lang.String)
org/sonar/xoo/rule/XooFakeExporter/exportProfile(org.sonar.api.profiles.RulesProfile,java.io.Writer)#org/sonar/api/profiles/RulesProfile/getName()
org/sonar/xoo/rule/XooFakeExporter/exportProfile(org.sonar.api.profiles.RulesProfile,java.io.Writer)#org/sonar/api/profiles/RulesProfile/getActiveRules()
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate%5B%5D)
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/rule/RandomAccessSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/io/FileUtils/readLines(java.io.File)
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/settings()
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/io/File/File(java.lang.String)
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/config/Settings/getString(java.lang.String)
org/sonar/xoo/rule/RandomAccessSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguage(java.lang.String)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/lang/Iterable/iterator()
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#org/apache/commons/lang/StringUtils/substringBefore(java.lang.String,java.lang.String)
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#java/lang/StringBuilder/append(int)
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#java/lang/String/length()
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Throwable)
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#java/io/File/getAbsolutePath()
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#java/lang/String/substring(int)
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)
org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/io/File/getName()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/module()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/baseDir()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/MeasureSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/io/File/getParentFile()
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/rule/ActiveRules/find(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#java/util/Iterator/next()
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/xoo/rule/AbstractXooRuleSensor/getRuleKey()
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/xoo/rule/AbstractXooRuleSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasLanguage(java.lang.String)
org/sonar/xoo/rule/AbstractXooRuleSensor/doAnalyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#java/lang/Iterable/iterator()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getName()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/measures/FileLinesContext/save()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/exists()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/startsWith(java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/measures/FileLinesContextFactory/createFor(org.sonar.api.batch.fs.InputFile)
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/encoding()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getAbsolutePath()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/charset/Charset/name()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/LineMeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getParentFile()
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/measure/NewMeasure/withValue(java.io.Serializable)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/Object/equals(java.lang.Object)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/Boolean/parseBoolean(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/measure/NewMeasure/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/measure/NewMeasure/forMetric(org.sonar.api.batch.measure.Metric)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/Double/valueOf(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#org/sonar/api/batch/measure/Metric/valueType()
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#org/sonar/api/batch/measure/MetricFinder/findByKey(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/Long/valueOf(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/measure/NewMeasure/save()
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/newMeasure()
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/Boolean/valueOf(boolean)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/xoo/lang/MeasureSensor/saveMeasure(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputComponent,java.lang.String,java.lang.String)#java/lang/Integer/valueOf(java.lang.String)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/InputFile/selectLine(int)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/newLocation()
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/InputFile/lines()
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/TextRange/end()
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/at(org.sonar.api.batch.fs.TextRange)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/TextPointer/lineOffset()
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/save()
org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/newIssue()
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/config/PropertyDefinition$Builder/description(java.lang.String)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/config/PropertyDefinition$Builder/subCategory(java.lang.String)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/config/PropertyDefinition$Builder/onQualifiers(java.lang.String,java.lang.String%5B%5D)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/config/PropertyDefinition$Builder/type(org.sonar.api.PropertyType)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/config/PropertyDefinition$Builder/name(java.lang.String)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/config/PropertyDefinition$Builder/defaultValue(java.lang.String)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/Plugin$Context/addExtensions(java.lang.Object,java.lang.Object,java.lang.Object%5B%5D)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/config/PropertyDefinition$Builder/build()
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/utils/Version/create(int,int)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/Plugin$Context/getRuntime()
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/SonarRuntime/getProduct()
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/config/PropertyDefinition/builder(java.lang.String)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/Plugin$Context/addExtension(java.lang.Object)
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/Plugin$Context/getSonarQubeVersion()
org/sonar/xoo/XooPlugin/define(org.sonar.api.Plugin$Context)#org/sonar/api/utils/Version/isGreaterThanOrEqual(org.sonar.api.utils.Version)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getName()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/exists()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/source/Symbolizable$SymbolTableBuilder/build()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/startsWith(java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/lang/SymbolReferencesSensor/processLine(java.io.File,int,org.sonar.api.source.Symbolizable$SymbolTableBuilder,java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/source/Symbolizable/newSymbolTableBuilder()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/encoding()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/source/Symbolizable/setSymbolTable(org.sonar.api.source.Symbolizable$SymbolTable)
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getAbsolutePath()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/charset/Charset/name()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/SymbolReferencesSensor/processFileSymbol(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getParentFile()
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/InputFile/selectLine(int)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/severity(org.sonar.api.batch.rule.Severity)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/save()
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/type(org.sonar.api.rules.RuleType)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/newLocation()
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewExternalIssue/remediationEffortMinutes(java.lang.Long)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/fs/InputFile/lines()
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/newExternalIssue()
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/at(org.sonar.api.batch.fs.TextRange)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/OneExternalIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/rule/Severity/valueOf(java.lang.String)
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/gap(java.lang.Double)
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/newLocation()
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/fs/InputFile/newRange(int,int,int,int)
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#java/lang/String/length()
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/settings()
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#java/lang/String/indexOf(java.lang.String,int)
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/at(org.sonar.api.batch.fs.TextRange)
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/save()
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/newIssue()
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/HasTagSensor/lambda$processFile$0(java.lang.String,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,org.sonar.api.batch.fs.InputFile,int%5B%5D,java.lang.String)#org/sonar/api/config/Settings/getDouble(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/io/File/exists()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/encoding()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getAbsolutePath()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/nio/charset/Charset/name()
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/lang/MeasureSensor/processMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.SensorContext,java.io.File,int,java.lang.String)
org/sonar/xoo/lang/MeasureSensor/processFileMeasures(org.sonar.api.batch.fs.InputComponent,java.io.File,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/startsWith(java.lang.String)
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/rule/Checks/all()
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/rule/CheckFactory/create(java.lang.String)
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/rule/Checks/ruleKey(java.lang.Object)
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Collection/iterator()
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/checks/Check/execute(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/rule/Checks/addAnnotatedChecks(java.lang.Object%5B%5D)
org/sonar/xoo/rule/ChecksSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getName()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/coverage/NewCoverage/lineHits(int,int)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/exists()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/coverage/NewCoverage/save()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Integer/parseInt(java.lang.String)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/startsWith(java.lang.String)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#com/google/common/base/Splitter/on(java.lang.String)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageType()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#com/google/common/base/Splitter/split(java.lang.CharSequence)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/coverage/NewCoverage/conditions(int,int,int)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(int)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/coverage/NewCoverage/onFile(org.sonar.api.batch.fs.InputFile)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/coverage/AbstractCoverageSensor/getCoverageExtension()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/encoding()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/coverage/NewCoverage/ofType(org.sonar.api.batch.sensor.coverage.CoverageType)
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/newCoverage()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getAbsolutePath()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/charset/Charset/name()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/coverage/AbstractCoverageSensor/processCoverage(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getParentFile()
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/OneExternalIssueWithDetailsPerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/lang/Iterable/iterator()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/addSubProject(org.sonar.api.batch.bootstrap.ProjectDefinition)
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/config/Settings/getBoolean(java.lang.String)
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/setKey(java.lang.String)
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/create()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/setWorkDir(java.io.File)
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/setBaseDir(java.io.File)
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectBuilder$Context/projectReactor()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/getWorkDir()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/getBaseDir()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/getKey()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/resetSources()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/setSources(java.lang.String%5B%5D)
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectReactor/getRoot()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#java/lang/StringBuilder/toString()
org/sonar/xoo/extensions/XooProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)#org/sonar/api/batch/bootstrap/ProjectDefinition/setName(java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getName()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/exists()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/startsWith(java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/encoding()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getAbsolutePath()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/charset/Charset/name()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/source/Highlightable$HighlightingBuilder/done()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/source/Highlightable/newHighlighting()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processFileHighlighting(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getParentFile()
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/highlighting/NewHighlighting/save()
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/all()
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/lines()
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/newHighlighting()
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/highlighting/NewHighlighting/highlight(org.sonar.api.batch.fs.TextRange,org.sonar.api.batch.sensor.highlighting.TypeOfText)
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/highlighting/NewHighlighting/onFile(org.sonar.api.batch.fs.InputFile)
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/selectLine(int)
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/SaveDataTwiceSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#java/util/stream/StreamSupport/stream(java.util.Spliterator,boolean)
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/spliterator()
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#java/util/stream/Stream/distinct()
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/OneIssuePerDirectorySensor/analyse(org.sonar.api.batch.sensor.SensorContext)#java/util/stream/Stream/forEach(java.util.function.Consumer)
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/xoo/rule/OneIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/OneIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/lang/Iterable/iterator()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#com/google/common/base/Splitter/split(java.lang.CharSequence)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#java/lang/StringBuilder/append(int)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#org/sonar/api/source/Highlightable$HighlightingBuilder/highlight(int,int,java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#java/util/Iterator/next()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#java/lang/Iterable/iterator()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#java/io/File/getAbsolutePath()
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#com/google/common/base/Splitter/on(java.lang.String)
org/sonar/xoo/lang/SyntaxHighlightingSensor/processLine(java.io.File,int,org.sonar.api.source.Highlightable$HighlightingBuilder,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/newSignificantCode()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/path()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Path/resolveSibling(java.lang.String)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Path/toAbsolutePath()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Files/isRegularFile(java.nio.file.Path,java.nio.file.LinkOption%5B%5D)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Path/toString()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/lang/SignificantCodeSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.code.NewSignificantCode)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/encoding()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Files/exists(java.nio.file.Path,java.nio.file.LinkOption%5B%5D)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Files/readAllLines(java.nio.file.Path,java.nio.charset.Charset)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/code/NewSignificantCode/onFile(org.sonar.api.batch.fs.InputFile)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/startsWith(java.lang.String)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Path/getFileName()
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/xoo/lang/SignificantCodeSensor/processSignificantCodeFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/code/NewSignificantCode/save()
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/getRuleKey()
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/api/batch/SensorContext/getResource(org.sonar.api.resources.Resource)
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/api/batch/rule/ActiveRules/find(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.resources.File,org.sonar.api.batch.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/api/batch/fs/InputFile/relativePath()
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#java/util/Iterator/next()
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/api/resources/File/create(java.lang.String)
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasLanguage(java.lang.String)
org/sonar/xoo/rule/AbstractDeprecatedXooRuleSensor/doAnalyse(org.sonar.api.batch.SensorContext,java.lang.String)#java/lang/Iterable/iterator()
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#org/apache/commons/lang/StringUtils/substringBefore(java.lang.String,java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#java/lang/StringBuilder/append(int)
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Throwable)
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#java/io/File/getAbsolutePath()
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#java/lang/String/substring(int)
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#org/sonar/xoo/lang/LineMeasureSensor/saveMeasure(org.sonar.api.measures.FileLinesContext,org.sonar.api.batch.fs.InputFile,java.lang.String,java.util.Map)
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#org/sonar/api/utils/KeyValueFormat/parseIntInt(java.lang.String)
org/sonar/xoo/lang/LineMeasureSensor/processMeasure(org.sonar.api.batch.fs.InputFile,org.sonar.api.measures.FileLinesContext,java.io.File,int,java.lang.String)#java/lang/String/length()
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/io/BufferedReader/close()
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#org/sonar/api/batch/rule/ActiveRule/param(java.lang.String)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#org/sonar/api/batch/rule/ActiveRules/find(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/io/InputStreamReader/close()
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#org/sonar/api/batch/fs/InputFile/charset()
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/util/stream/Stream/forEachOrdered(java.util.function.Consumer)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/io/BufferedReader/lines()
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/xoo/rule/HasTagSensor/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,org.sonar.api.rule.RuleKey,java.lang.String)#org/sonar/api/batch/fs/InputFile/inputStream()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/rule/ActiveRule/ruleKey()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/newLocation()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/settings()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/activeRules()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/rule/ActiveRules/findByInternalKey(java.lang.String,java.lang.String)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/save()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/newIssue()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/config/Settings/getString(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setType(org.sonar.api.rules.RuleType)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/createParam(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewParam/setType(org.sonar.api.server.rule.RuleParamType)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$Context/createRepository(java.lang.String,java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRepository/done()
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/constantPerIssue(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinitionAnnotationLoader/RulesDefinitionAnnotationLoader()
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setTemplate(boolean)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewParam/setDescription(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setActivatedByDefault(boolean)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linearWithOffset(java.lang.String,java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRepository/setName(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewParam/setDefaultValue(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setScope(org.sonar.api.rule.RuleScope)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinitionAnnotationLoader/load(org.sonar.api.server.rule.RulesDefinition$NewExtendedRepository,java.lang.Class%5B%5D)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setGapDescription(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/newLocation()
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/relativePath()
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssue/save()
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/newIssue()
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputDir(java.io.File)
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/OneIssueOnDirPerFileSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getParentFile()
org/sonar/xoo/rule/OneIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/newLocation()
org/sonar/xoo/rule/OneIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/OneIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/OneIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/OneIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/module()
org/sonar/xoo/rule/OneIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/OneIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/OneIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/save()
org/sonar/xoo/rule/OneIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/newIssue()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Path/resolveSibling(java.lang.String)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Path/toAbsolutePath()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/toPath()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Files/readAllLines(java.nio.file.Path,java.nio.charset.Charset)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Files/isRegularFile(java.nio.file.Path,java.nio.file.LinkOption%5B%5D)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Path/toString()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/encoding()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Files/exists(java.nio.file.Path,java.nio.file.LinkOption%5B%5D)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/startsWith(java.lang.String)
org/sonar/xoo/rule/AnalysisErrorSensor/processFileError(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/file/Path/getFileName()
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/rule/MultilineIssuesSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)
org/sonar/xoo/rule/MultilineIssuesSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/io/File/getName()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/util/Iterator/hasNext()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/lang/StringBuilder/append(int)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/util/List/size()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/util/Iterator/next()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/util/List/add(java.lang.Object)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/sonar/api/batch/scm/BlameLine/date(java.util.Date)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/util/List/iterator()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/sonar/api/utils/DateUtils/parseDateTimeQuietly(java.lang.String)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/sonar/api/utils/DateUtils/parseDate(java.lang.String)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/util/ArrayList/ArrayList(int)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/sonar/api/batch/scm/BlameLine/BlameLine()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/apache/commons/lang/StringUtils/splitPreserveAllTokens(java.lang.String,char)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/sonar/api/batch/scm/BlameCommand$BlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/apache/commons/lang/StringUtils/trimToNull(java.lang.String)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/io/File/exists()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.nio.charset.Charset)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/sonar/api/batch/scm/BlameLine/revision(java.lang.String)
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/lang/StringBuilder/toString()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#java/io/File/getParentFile()
org/sonar/xoo/scm/XooBlameCommand/processFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.scm.BlameCommand$BlameOutput)#org/sonar/api/batch/scm/BlameLine/author(java.lang.String)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/xoo/rule/OneBugIssuePerLineSensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.lang.String)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/OneBugIssuePerLineSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String,java.lang.String)#java/lang/Iterable/iterator()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getName()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/exists()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/test/TestCase$Status/valueOf(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/startsWith(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#com/google/common/base/Splitter/on(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/test/MutableTestCase/setStackTrace(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#com/google/common/base/Splitter/split(java.lang.CharSequence)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Long/parseLong(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Long/valueOf(long)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(int)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/encoding()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/test/MutableTestCase/setDurationInMs(java.lang.Long)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/test/MutableTestCase/setMessage(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getAbsolutePath()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/charset/Charset/name()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/test/MutableTestCase/setStatus(org.sonar.api.test.TestCase$Status)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/test/MutableTestCase/setType(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/test/MutableTestPlan/addTestCase(java.lang.String)
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getParentFile()
org/sonar/xoo/rule/OneVulnerabilityIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/newLocation()
org/sonar/xoo/rule/OneVulnerabilityIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/message(java.lang.String)
org/sonar/xoo/rule/OneVulnerabilityIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/xoo/rule/OneVulnerabilityIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/xoo/rule/OneVulnerabilityIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/module()
org/sonar/xoo/rule/OneVulnerabilityIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/xoo/rule/OneVulnerabilityIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssueLocation/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/xoo/rule/OneVulnerabilityIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/issue/NewIssue/save()
org/sonar/xoo/rule/OneVulnerabilityIssuePerModuleSensor/analyse(org.sonar.api.batch.sensor.SensorContext,java.lang.String)#org/sonar/api/batch/sensor/SensorContext/newIssue()
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/path()
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/nio/file/Files/lines(java.nio.file.Path,java.nio.charset.Charset)
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#org/sonar/api/issue/NoSonarFilter/noSonarInFile(org.sonar.api.batch.fs.InputFile,java.util.Set)
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/forEachOrdered(java.util.function.Consumer)
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/lang/StringBuilder/toString()
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/close()
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/charset()
org/sonar/xoo/rule/NoSonarSensor/processFile(org.sonar.api.batch.fs.InputFile)#java/util/HashSet/HashSet()
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/test/TestExecutionSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/test/TestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/split(java.lang.String)
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/error/NewAnalysisError/at(org.sonar.api.batch.fs.TextPointer)
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/newPointer(int,int)
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/error/NewAnalysisError/onFile(org.sonar.api.batch.fs.InputFile)
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/error/NewAnalysisError/save()
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/error/NewAnalysisError/message(java.lang.String)
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/newAnalysisError()
org/sonar/xoo/rule/AnalysisErrorSensor/processLine(java.lang.String,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Integer/parseInt(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/debtRemediationFunctions()
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$Context/createRepository(java.lang.String,java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRepository/done()
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRepository/setName(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setDebtRemediationFunction(org.sonar.api.server.debt.DebtRemediationFunction)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$DebtRemediationFunctions/linear(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setGapDescription(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXoo2(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.lang.String%5B%5D)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/xoo/rule/CreateIssueByInternalKeySensor/createIssues(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/rule/CreateIssueByInternalKeySensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXooExternal(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRepository/done()
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXooExternal(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRepository/setName(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXooExternal(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setSeverity(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXooExternal(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setScope(org.sonar.api.rule.RuleScope)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXooExternal(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRepository/createRule(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXooExternal(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setType(org.sonar.api.rules.RuleType)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXooExternal(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$Context/createExternalRepository(java.lang.String,java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXooExternal(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setName(java.lang.String)
org/sonar/xoo/rule/XooRulesDefinition/defineRulesXooExternal(org.sonar.api.server.rule.RulesDefinition$Context)#org/sonar/api/server/rule/RulesDefinition$NewRule/setHtmlDescription(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getName()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/component/ResourcePerspectives/as(java.lang.Class,org.sonar.api.batch.fs.InputPath)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/test/MutableTestPlan/testCasesByName(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/test/MutableTestCase/setCoverageBlock(org.sonar.api.test.Testable,java.util.List)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/exists()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Integer/parseInt(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/add(java.lang.Object)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#com/google/common/base/Splitter/on(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/List/iterator()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/ArrayList/ArrayList()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#com/google/common/base/Splitter/split(java.lang.CharSequence)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(int)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/encoding()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getAbsolutePath()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/nio/charset/Charset/name()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/Integer/valueOf(int)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/startsWith(java.lang.String)
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/xoo/test/CoveragePerTestSensor/processTestFile(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext)#java/io/File/getParentFile()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#org/sonar/api/batch/fs/InputFile/path()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/Map/get(java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/Iterator/next()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#org/sonar/api/batch/fs/InputFile/newPointer(int,int)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Matcher/end()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Matcher/start()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/List/iterator()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#com/google/common/collect/HashBasedTable/create()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#com/google/common/collect/Table/row(java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Matcher/group(int)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/nio/file/Files/readAllLines(java.nio.file.Path,java.nio.charset.Charset)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/lang/Integer/parseInt(java.lang.String)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Matcher/find()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/lang/Integer/valueOf(int)
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#org/sonar/api/batch/fs/InputFile/charset()
org/sonar/xoo/rule/MultilineIssuesSensor/parseFlows(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.SensorContext,java.util.Map,java.util.Map)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
