org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/concat(java.util.stream.Stream,java.util.stream.Stream)
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Collectors/toList()
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/config/DefaultConfiguration/getProperties()
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/repository/ContextPropertiesCache/getAll()
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/ContextPropertiesPublisher$MapEntryToContextPropertyFunction/ContextPropertiesPublisher$MapEntryToContextPropertyFunction(org.sonar.scanner.report.ContextPropertiesPublisher$1)
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Map/entrySet()
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeContextProperties(java.lang.Iterable)
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Set/stream()
org/sonar/scanner/report/ContextPropertiesPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/util/ArrayList/ArrayList()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/core/util/CloseableIterator/hasNext()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/api/batch/fs/TextPointer/compareTo(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReportReader/hasSyntaxHighlighting(int)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/util/Collections/emptyList()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/core/util/CloseableIterator/next()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/api/batch/fs/TextRange/end()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/util/List/add(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/report/ScannerReportUtils/toBatchType(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$HighlightingType)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/lang/StringBuilder/toString()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/core/util/CloseableIterator/close()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/api/batch/fs/InputFile/newPointer(int,int)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getRange()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/mediumtest/TaskResult/toRange(org.sonar.api.batch.fs.InputFile,org.sonar.scanner.protocol.output.ScannerReport$TextRange)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/getType()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReport$Component/getRef()
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReportReader/readComponentSyntaxHighlighting(int)
org/sonar/scanner/mediumtest/TaskResult/highlightingTypeFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/api/batch/fs/TextRange/start()
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/scanner/util/ProgressReport/stop(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/scanner/cpd/index/SonarCpdBlockIndex/iterator()
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/scanner/cpd/index/SonarCpdBlockIndex/noResources()
org/sonar/scanner/cpd/CpdExecutor/execute(long)#java/util/Iterator/hasNext()
org/sonar/scanner/cpd/CpdExecutor/execute(long)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/duplications/index/PackedMemoryCloneIndex$ResourceBlocks/resourceId()
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/scanner/cpd/index/SonarCpdBlockIndex/noIndexedFiles()
org/sonar/scanner/cpd/CpdExecutor/execute(long)#java/util/Iterator/next()
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/scanner/util/ProgressReport/start(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/scanner/cpd/CpdExecutor/pluralize(int)
org/sonar/scanner/cpd/CpdExecutor/execute(long)#java/util/concurrent/ExecutorService/shutdown()
org/sonar/scanner/cpd/CpdExecutor/execute(long)#org/sonar/duplications/index/PackedMemoryCloneIndex$ResourceBlocks/blocks()
org/sonar/scanner/cpd/CpdExecutor/execute(long)#java/lang/Integer/valueOf(int)
org/sonar/scanner/cpd/CpdExecutor/execute(long)#java/util/concurrent/Executors/newSingleThreadExecutor()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#com/persistit/Exchange/next(boolean)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#java/util/LinkedHashSet/LinkedHashSet()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#com/persistit/Exchange/append(java.lang.Object)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#com/persistit/Exchange/getKey()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#com/persistit/Exchange/Exchange(com.persistit.Exchange)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#com/persistit/Key/decode()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#com/persistit/Exchange/clear()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#com/persistit/Key/indexTo(int)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object,java.lang.Object)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#org/sonar/api/config/Encryption/Encryption(java.lang.String)
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/util/Map/size()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/util/Iterator/next()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#org/sonar/api/config/Encryption/decrypt(java.lang.String)
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/util/Map$Entry/getValue()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/util/Map/entrySet()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/lang/Object/Object()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#org/sonar/api/config/Encryption/isEncrypted(java.lang.String)
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/util/Map$Entry/getKey()
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/util/HashMap/HashMap(int)
org/sonar/scanner/bootstrap/UserProperties/UserProperties(java.util.Map,java.lang.String)#java/util/Set/iterator()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/client/WsResponse/contentStream()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/api/batch/fs/internal/DefaultInputModule/getOriginalName()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/client/PostRequest$Part/PostRequest$Part(java.lang.String,java.io.File)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/scanner/scan/branch/BranchConfiguration/branchName()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/api/batch/fs/internal/DefaultInputModule/getBranch()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/lang/StringBuilder/append(long)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#com/google/protobuf/Parser/parseFrom(java.io.InputStream)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/scanner/scan/branch/BranchType/name()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/lang/Integer/valueOf(int)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/Ce$SubmitResponse/getTaskId()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/client/WsResponse/failIfNotSuccessful()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/lang/StringBuilder/toString()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/client/PostRequest/setPart(java.lang.String,org.sonarqube.ws.client.PostRequest$Part)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/client/HttpException/content()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/client/PostRequest/PostRequest(java.lang.String)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/scanner/scan/branch/BranchConfiguration/pullRequestKey()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/api/utils/log/Logger/info(java.lang.String)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/api/batch/fs/internal/DefaultInputModule/key()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/client/HttpException/code()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/client/PostRequest/setMediaType(java.lang.String)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/Ce$SubmitResponse/parser()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/io/InputStream/close()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/scanner/scan/ScanProperties/organizationKey()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonarqube/ws/client/PostRequest/setParam(java.lang.String,java.lang.String)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/util/Optional/orElse(java.lang.Object)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/scanner/scan/branch/BranchConfiguration/branchType()
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)
org/sonar/scanner/report/ReportPublisher/upload(java.io.File)#java/lang/System/currentTimeMillis()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/Object/equals(java.lang.Object)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/Number/intValue()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/metric()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$StringValue$Builder/setValue(java.lang.String)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$Builder/setLongValue(org.sonar.scanner.protocol.output.ScannerReport$Measure$LongValue$Builder)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/measure/Metric/valueType()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/Number/longValue()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/Boolean/booleanValue()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/StringBuilder/toString()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$Builder/setStringValue(org.sonar.scanner.protocol.output.ScannerReport$Measure$StringValue$Builder)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$Builder/setBooleanValue(org.sonar.scanner.protocol.output.ScannerReport$Measure$BoolValue$Builder)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$Builder/setDoubleValue(org.sonar.scanner.protocol.output.ScannerReport$Measure$DoubleValue$Builder)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/value()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$LongValue/newBuilder()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$DoubleValue$Builder/setValue(double)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$LongValue$Builder/setValue(long)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/Number/doubleValue()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$Builder/setIntValue(org.sonar.scanner.protocol.output.ScannerReport$Measure$IntValue$Builder)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$BoolValue$Builder/setValue(boolean)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$IntValue$Builder/setValue(int)
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$IntValue/newBuilder()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$BoolValue/newBuilder()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$DoubleValue/newBuilder()
org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$StringValue/newBuilder()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/newBuilder()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/scanner/report/ReportPublisher/getWriter()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/scanner/sensor/DefaultSensorStorage/shouldSkipStorage(org.sonar.api.batch.fs.internal.DefaultInputFile)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/api/batch/fs/internal/DefaultInputFile/batchId()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable/inputFile()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/api/batch/sensor/symbol/internal/DefaultSymbolTable/getReferencesBySymbol()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/lang/StringBuilder/toString()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/scanner/protocol/output/ScannerReportWriter/hasComponentData(org.sonar.scanner.protocol.output.FileStructure$Domain,int)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/util/Set/stream()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeComponentSymbols(int,java.lang.Iterable)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/util/stream/Collectors/toList()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#java/util/Map/entrySet()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/api/batch/fs/internal/DefaultInputFile/setPublished(boolean)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.symbol.internal.DefaultSymbolTable)#org/sonar/scanner/protocol/output/ScannerReport$Symbol/newBuilder()
org/sonar/scanner/externalissue/ReportParser/parse()#org/sonar/scanner/externalissue/ReportParser/validate(org.sonar.scanner.externalissue.ReportParser$Report)
org/sonar/scanner/externalissue/ReportParser/parse()#java/io/Reader/close()
org/sonar/scanner/externalissue/ReportParser/parse()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/externalissue/ReportParser/parse()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/externalissue/ReportParser/parse()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/externalissue/ReportParser/parse()#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/externalissue/ReportParser/parse()#java/nio/file/Files/newBufferedReader(java.nio.file.Path,java.nio.charset.Charset)
org/sonar/scanner/externalissue/ReportParser/parse()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/externalissue/ReportParser/parse()#java/lang/StringBuilder/toString()
org/sonar/scanner/externalissue/ReportParser/parse()#com/google/gson/Gson/fromJson(java.io.Reader,java.lang.Class)
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#java/util/ArrayList/ArrayList()
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#org/sonar/core/util/CloseableIterator/hasNext()
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#org/sonar/core/util/CloseableIterator/next()
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#org/sonar/core/util/CloseableIterator/close()
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#java/util/List/add(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/protocol/output/ScannerReport$Component/getRef()
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/mediumtest/TaskResult/getReportReader()
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/protocol/output/ScannerReportReader/readCpdTextBlocks(int)
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/duplicationBlocksFor(org.sonar.api.batch.fs.InputFile)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#java/lang/Integer/intValue()
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Component/getChildRefList()
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReportReader/readComponent(int)
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#java/util/Iterator/next()
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#java/util/List/iterator()
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#org/sonar/scanner/mediumtest/TaskResult/getReportReader()
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Component/getKey()
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Component/getPath()
org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/task/ListTask/execute()#org/sonar/api/task/TaskDefinition/key()
org/sonar/scanner/task/ListTask/execute()#java/util/Iterator/hasNext()
org/sonar/scanner/task/ListTask/execute()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/task/ListTask/execute()#org/sonar/api/utils/log/Logger/info(java.lang.String)
org/sonar/scanner/task/ListTask/execute()#java/util/Iterator/next()
org/sonar/scanner/task/ListTask/execute()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/task/ListTask/execute()#org/sonar/scanner/task/Tasks/definitions()
org/sonar/scanner/task/ListTask/execute()#java/util/Collection/iterator()
org/sonar/scanner/task/ListTask/execute()#java/lang/StringBuilder/toString()
org/sonar/scanner/task/ListTask/execute()#org/sonar/api/task/TaskDefinition/description()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/repository/FileData/revision()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/filesystem/ModuleInputComponentStore/inputFiles()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/LinkedList/LinkedList()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/Iterable/iterator()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/getModuleRelativePath()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scm/ScmConfiguration/forceReloadAll()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scm/ScmPublisher/addIfNotEmpty(java.util.List,org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scm/ScmPublisher/askToCopyDataFromPreviousAnalysis(org.sonar.api.batch.fs.internal.DefaultInputFile,org.sonar.scanner.protocol.output.ScannerReportWriter)
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/isPublished()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/utils/log/Logger/warn(java.lang.String)
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/repository/ProjectRepositories/fileData(java.lang.String,java.lang.String)
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/branch/BranchConfiguration/isShortOrPullRequest()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/bootstrap/ProjectDefinition/getKeyWithBranch()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/next()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputModule/definition()
org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/InputFile/status()
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#java/util/stream/StreamSupport/stream(java.util.Spliterator,boolean)
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#java/util/stream/LongStream/sum()
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/deprecated/test/TestPlanBuilder/getTestPlanByFile(org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#java/lang/Long/valueOf(long)
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#com/google/common/collect/Iterables/isEmpty(java.lang.Iterable)
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/count()
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#org/sonar/api/test/MutableTestPlan/testCases()
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#java/lang/Iterable/spliterator()
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/mapToLong(java.util.function.ToLongFunction)
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/scan/measure/MeasureCache/put(java.lang.String,java.lang.String,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#java/lang/Integer/valueOf(int)
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/DefaultMeasure()
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/withValue(java.io.Serializable)
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/forMetric(org.sonar.api.batch.measure.Metric)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/FileMetadata/readMetadata(java.io.InputStream,java.nio.charset.Charset,java.lang.String,org.sonar.api.batch.fs.internal.charhandler.CharHandler)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/scanner/scan/filesystem/StatusDetection/status(java.lang.String,org.sonar.api.batch.fs.internal.DefaultInputFile,java.lang.String)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/scanner/scan/filesystem/CharsetDetector/CharsetDetector(java.nio.file.Path,java.nio.charset.Charset)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/DefaultInputModule/definition()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/Metadata/hash()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/DefaultInputFile/path()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/DefaultInputFile/setCharset(java.nio.charset.Charset)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/DefaultInputFile/setStatus(org.sonar.api.batch.fs.InputFile$Status)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/DefaultInputFile/key()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/DefaultInputFile/type()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/scanner/scan/filesystem/CharsetDetector/inputStream()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/bootstrap/ProjectDefinition/getKeyWithBranch()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/scanner/scan/filesystem/CharsetDetector/run()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/scanner/scan/filesystem/CharsetDetector/charset()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/DefaultInputFile/absolutePath()
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/createCharHandlerFor(java.lang.String)
org/sonar/scanner/scan/filesystem/MetadataGenerator/setMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile,java.nio.charset.Charset)#org/sonar/api/batch/fs/internal/DefaultInputFile/setMetadata(org.sonar.api.batch.fs.internal.Metadata)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/StringBuilder/append(int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#javax/xml/stream/Location/getLineNumber()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#org/codehaus/staxmate/in/SMInputCursor/getCursorLocation()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#org/codehaus/staxmate/in/SMInputCursor/getLocalName()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMInputCursor/getNext()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/coverage/NewCoverage/onFile(org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/newCoverage()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#java/util/List/add(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#java/lang/Integer/valueOf(int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMInputCursor/getCursorLocation()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/language()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/coverage/NewCoverage/save()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMInputCursor/childElementCursor()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#javax/xml/stream/Location/getLineNumber()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/scanner/scan/branch/BranchConfiguration/branchTarget()
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/scanner/scm/ScmChangedFilesProvider/pluralize(java.lang.String,int)
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/scanner/scan/branch/BranchConfiguration/isShortOrPullRequest()
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#java/util/Collection/size()
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#java/lang/Integer/valueOf(int)
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/api/batch/scm/ScmProvider/branchChangedFiles(java.lang.String,java.nio.file.Path)
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/api/utils/log/Profiler/stopInfo()
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/scanner/scm/ScmConfiguration/provider()
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/scm/ScmChangedFilesProvider/loadChangedFilesIfNeeded(org.sonar.scanner.scm.ScmConfiguration,org.sonar.scanner.scan.branch.BranchConfiguration,java.nio.file.Path)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#java/util/Iterator/hasNext()
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#org/sonar/scanner/rule/ModuleQProfiles/findByLanguage(java.lang.String)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#java/util/Iterator/next()
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#java/util/SortedSet/isEmpty()
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#java/lang/StringBuilder/toString()
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#org/sonar/scanner/rule/QProfile/getName()
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#org/sonar/api/config/Configuration/get(java.lang.String)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#java/util/SortedSet/iterator()
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#org/sonar/api/batch/fs/FileSystem/languages()
org/sonar/scanner/rule/QProfileVerifier/execute(org.slf4j.Logger)#java/util/Optional/orElse(java.lang.Object)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#org/sonar/api/scan/filesystem/PathResolver/relativeFile(java.io.File,java.lang.String)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/internal/DefaultInputModule/getBaseDir()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#java/nio/file/Path/toFile()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#java/io/File/toPath()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#org/sonar/api/scan/filesystem/PathResolver/PathResolver()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#org/sonar/api/batch/fs/internal/DefaultInputModule/properties()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#java/io/File/exists()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initSources(org.sonar.api.batch.fs.internal.DefaultInputModule,java.lang.String,java.lang.String)#org/sonar/core/config/MultivalueProperty/parseAsCsv(java.lang.String,java.lang.String)
org/sonar/scanner/report/ReportPublisher/generateReportFile()#org/apache/commons/io/FileUtils/sizeOf(java.io.File)
org/sonar/scanner/report/ReportPublisher/generateReportFile()#org/sonar/scanner/report/ReportPublisherStep/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)
org/sonar/scanner/report/ReportPublisher/generateReportFile()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/report/ReportPublisher/generateReportFile()#org/apache/commons/io/FileUtils/byteCountToDisplaySize(long)
org/sonar/scanner/report/ReportPublisher/generateReportFile()#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/report/ReportPublisher/generateReportFile()#java/nio/file/Path/toFile()
org/sonar/scanner/report/ReportPublisher/generateReportFile()#org/apache/commons/io/FileUtils/sizeOfDirectory(java.io.File)
org/sonar/scanner/report/ReportPublisher/generateReportFile()#java/lang/System/currentTimeMillis()
org/sonar/scanner/report/ReportPublisher/generateReportFile()#org/sonar/api/utils/ZipUtils/zipDir(java.io.File,java.io.File)
org/sonar/scanner/report/ReportPublisher/generateReportFile()#java/lang/Long/valueOf(long)
org/sonar/scanner/report/ReportPublisher/generateReportFile()#org/sonar/api/utils/TempFolder/newFile(java.lang.String,java.lang.String)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/utils/log/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/apache/commons/lang/StringUtils/trim(java.lang.String)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/nio/charset/Charset/defaultCharset()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/DefaultInputModule/properties()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/nio/charset/Charset/displayName()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/nio/charset/Charset/forName(java.lang.String)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Locale/getDefault()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/initEncoding(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Test/newBuilder()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputComponent/batchId()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#com/google/common/collect/Iterables/isEmpty(java.lang.Iterable)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/test/MutableTestPlan/testCases()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/next()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/deprecated/test/TestPlanBuilder/loadPerspective(java.lang.Class,org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/filesystem/InputComponentStore/all()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/StreamSupport/stream(java.util.Spliterator,boolean)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeTests(int,java.lang.Iterable)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Set/stream()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Collectors/toList()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/branch/BranchConfiguration/isShortOrPullRequest()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/Iterable/spliterator()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile/newBuilder()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Collection/iterator()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeCoverageDetails(int,java.lang.Iterable)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/newBuilder()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/HashSet/HashSet()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#org/sonar/scanner/report/ReportPublisher/getWriter()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/util/SortedMap/values()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#org/sonar/scanner/sensor/DefaultSensorStorage/shouldSkipStorage(org.sonar.api.batch.fs.internal.DefaultInputFile)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeComponentSignificantCode(int,java.lang.Iterable)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#org/sonar/api/batch/sensor/code/internal/DefaultSignificantCode/significantCodePerLine()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#org/sonar/api/batch/fs/internal/DefaultInputFile/setPublished(boolean)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/lang/StringBuilder/toString()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#org/sonar/scanner/protocol/output/ScannerReportWriter/hasComponentData(org.sonar.scanner.protocol.output.FileStructure$Domain,int)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/util/Collection/stream()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#java/util/stream/Collectors/toList()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#org/sonar/api/batch/sensor/code/internal/DefaultSignificantCode/inputFile()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.code.internal.DefaultSignificantCode)#org/sonar/api/batch/fs/internal/DefaultInputFile/batchId()
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/util/concurrent/Future/get(long,java.util.concurrent.TimeUnit)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/scanner/util/ProgressReport/message(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/util/concurrent/Future/cancel(boolean)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/lang/Integer/valueOf(int)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/scanner/cpd/DuplicationPredicates/numberOfUnitsNotLessThan(int)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/scanner/cpd/CpdSettings/getMinimumTokens(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/lang/StringBuilder/toString()
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/scanner/scan/filesystem/InputComponentStore/getByKey(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/api/batch/fs/InputFile/absolutePath()
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/api/utils/log/Logger/warn(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/util/stream/Collectors/toList()
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/util/List/stream()
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Object)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/api/batch/fs/InputFile/language()
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)
org/sonar/scanner/cpd/CpdExecutor/runCpdAnalysis(java.util.concurrent.ExecutorService,java.lang.String,java.util.Collection,long)#java/util/concurrent/ExecutorService/submit(java.util.concurrent.Callable)
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/api/utils/text/JsonWriter/beginObject()
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/api/rule/RuleKey/rule()
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#java/util/Iterator/next()
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/api/utils/text/JsonWriter/endArray()
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#java/util/Set/iterator()
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/api/rule/RuleKey/repository()
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/api/utils/text/JsonWriter/endObject()
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/api/utils/text/JsonWriter/name(java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/api/utils/text/JsonWriter/beginArray()
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/scanner/scan/report/JSONReport/getRuleName(org.sonar.api.rule.RuleKey)
org/sonar/scanner/scan/report/JSONReport/writeJsonRules(org.sonar.api.utils.text.JsonWriter,java.util.Set)#org/sonar/api/rule/RuleKey/toString()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/lang/Integer/intValue()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/Iterator/hasNext()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/lang/StringBuilder/append(int)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Builder/setComponentRef(int)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/List/size()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/api/batch/fs/InputFile/lines()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/util/ProgressReport/message(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Builder/addChangesetIndexByLine(int)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/List/iterator()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/lang/StringBuilder/toString()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Builder/build()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Builder/getChangesetCount()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/Iterator/next()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/HashMap/HashMap()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeComponentChangesets(org.sonar.scanner.protocol.output.ScannerReport$Changesets)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/Set/contains(java.lang.Object)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/api/batch/scm/BlameLine/revision()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/protocol/output/ScannerReport$Changesets/newBuilder()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/scm/DefaultBlameOutput/validateLine(org.sonar.api.batch.scm.BlameLine,int,org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/api/batch/fs/internal/DefaultInputFile/batchId()
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/lang/Integer/valueOf(int)
org/sonar/scanner/scm/DefaultBlameOutput/blameResult(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/Set/remove(java.lang.Object)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#org/sonar/scanner/scan/filesystem/FileIndexer/access$600(int)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#org/sonar/scanner/scan/filesystem/FileIndexer/access$700(org.sonar.scanner.scan.filesystem.FileIndexer)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#org/sonar/scanner/scan/filesystem/FileIndexer/access$500(org.sonar.scanner.scan.filesystem.FileIndexer)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#org/sonar/api/batch/fs/internal/DefaultInputFile/getProjectRelativePath()
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#java/lang/StringBuilder/append(int)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#org/sonar/scanner/scan/filesystem/InputComponentStore/getFile(java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#org/sonar/scanner/util/ProgressReport/message(java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)#java/lang/StringBuilder/toString()
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReportWriter/getFileStructure()
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/FileStructure/analysisLog()
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/AnalysisMode/isIssues()
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/io/File/toPath()
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/utils/log/Logger/isDebugEnabled()
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/AnalysisContextReportPublisher/writeGlobalSettings(java.io.BufferedWriter)
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption%5B%5D)
org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/io/BufferedWriter/close()
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/nio/file/Path/relativize(java.nio.file.Path)
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/nio/file/Path/toString()
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputFile/getProjectRelativePath()
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/InputDir/path()
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputModule/getBaseDir()
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/StringBuilder/toString()
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/Object/getClass()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/util/Iterator/hasNext()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object)
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/util/Iterator/next()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption%5B%5D)
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/io/Writer/close()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/util/Set/iterator()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/nio/file/Path/getParent()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/util/Map/entrySet()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/util/Map$Entry/getKey()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/io/Writer/write(java.lang.String)
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/util/Map$Entry/getValue()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute%5B%5D)
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#java/lang/StringBuilder/toString()
org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)#org/sonar/scanner/scan/ScanProperties/metadataFilePath()
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#org/sonar/api/task/TaskDefinition/key()
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#java/util/SortedMap/containsKey(java.lang.Object)
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#java/lang/Object/Object()
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#com/google/common/collect/ImmutableSortedMap/copyOf(java.util.Map)
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#com/google/common/collect/Maps/newTreeMap()
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#java/lang/StringBuilder/toString()
org/sonar/scanner/task/Tasks/Tasks(org.sonar.api.task.TaskDefinition%5B%5D)#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/value()
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/measure/Metric/key()
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/fs/internal/DefaultInputComponent/key()
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/metric()
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/report/MeasuresPublisher/setValueAccordingToType(org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$Builder/clear()
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$Builder/build()
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/protocol/output/ScannerReport$Measure$Builder/setMetricKey(java.lang.String)
org/sonar/scanner/report/MeasuresPublisher/lambda$publish$0(org.sonar.api.batch.fs.internal.DefaultInputComponent,org.sonar.scanner.protocol.output.ScannerReport$Measure$Builder,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#java/util/ArrayList/ArrayList()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#com/google/common/base/Joiner/on(java.lang.String)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/batch/bootstrap/ProjectReactor/getRoot()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/scanner/scan/ProjectReactorValidator/validateModule(org.sonar.api.batch.bootstrap.ProjectDefinition,java.util.List)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/batch/bootstrap/ProjectReactor/getProjects()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/scanner/scan/ProjectReactorValidator/isBranchFeatureAvailable()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#java/util/List/isEmpty()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/scanner/scan/ProjectReactorValidator/validatePullRequestParamsWhenPluginAbsent(java.util.List)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/batch/bootstrap/ProjectDefinition/getBranch()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/scanner/scan/ProjectReactorValidator/validateBranch(java.util.List,java.lang.String)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/batch/AnalysisMode/isIssues()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#java/util/Iterator/next()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/scanner/scan/ProjectReactorValidator/validateModuleIssuesMode(org.sonar.api.batch.bootstrap.ProjectDefinition,java.util.List)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#com/google/common/base/Joiner/join(java.lang.Iterable)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/scanner/scan/branch/BranchParamsValidator/validate(java.util.List,java.lang.String)
org/sonar/scanner/scan/ProjectReactorValidator/validate(org.sonar.api.batch.bootstrap.ProjectReactor)#java/util/List/iterator()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#org/sonarqube/ws/Settings$Values/getValuesList()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/util/Iterator/hasNext()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#org/sonarqube/ws/Settings$Setting$ValueOneOfCase/ordinal()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/util/stream/Collectors/joining(java.lang.CharSequence)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/util/Iterator/next()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#org/sonarqube/ws/Settings$Setting/getValueOneOfCase()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#org/sonarqube/ws/Settings$Setting/getValue()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#org/sonarqube/ws/Settings$Setting/getValues()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/util/LinkedHashMap/LinkedHashMap()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/lang/StringBuilder/toString()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#org/sonarqube/ws/Settings$Setting/getKey()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#com/google/protobuf/ProtocolStringList/stream()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#java/util/List/iterator()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)#org/sonarqube/ws/Settings$Setting/getInherited()
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#org/sonar/scanner/protocol/output/ScannerReport$LineCoverage/getLine()
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#org/sonar/scanner/protocol/output/ScannerReportReader/readComponentCoverage(int)
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#org/sonar/core/util/CloseableIterator/hasNext()
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#org/sonar/core/util/CloseableIterator/next()
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#org/sonar/core/util/CloseableIterator/close()
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#org/sonar/scanner/protocol/output/ScannerReport$Component/getRef()
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#org/sonar/scanner/mediumtest/TaskResult/getReportReader()
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/coverageFor(org.sonar.api.batch.fs.InputFile,int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/nio/file/Path/resolve(java.lang.String)
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#org/sonar/api/batch/fs/internal/DefaultInputModule/getWorkDir()
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/nio/file/Files/deleteIfExists(java.nio.file.Path)
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/nio/file/Path/toFile()
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#org/sonar/api/utils/internal/DefaultTempFolder/DefaultTempFolder(java.io.File,boolean)
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/nio/file/Path/normalize()
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/lang/StringBuilder/toString()
org/sonar/scanner/analysis/AnalysisTempFolderProvider/provide(org.sonar.api.batch.fs.internal.InputModuleHierarchy)#java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute%5B%5D)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/config/Configuration/getStringArray(java.lang.String)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate%5B%5D)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#com/google/common/collect/Lists/newArrayList(java.lang.Iterable)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/doesNotMatchPathPatterns(java.lang.String%5B%5D)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/List/isEmpty()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/config()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasLanguage(java.lang.String)
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/apache/commons/io/IOUtils/closeQuietly(java.io.InputStream)
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonarqube/ws/Batch$WsProjectResponse$FileData/getHash()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonar/scanner/repository/ProjectRepositories/ProjectRepositories(com.google.common.collect.Table,com.google.common.collect.Table,java.util.Date)
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/util/Iterator/next()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonarqube/ws/Batch$WsProjectResponse/getLastAnalysisDate()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonarqube/ws/Batch$WsProjectResponse/getSettingsByModule()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonarqube/ws/Batch$WsProjectResponse$Settings/getSettings()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/util/Map$Entry/getKey()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonar/scanner/repository/FileData/FileData(java.lang.String,java.lang.String)
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/util/Set/iterator()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/util/Date/Date(long)
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonarqube/ws/Batch$WsProjectResponse$FileData/getRevision()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonarqube/ws/Batch$WsProjectResponse/getFileDataByModuleAndPath()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/util/Map$Entry/getValue()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonarqube/ws/Batch$WsProjectResponse$FileDataByPath/getFileDataByPath()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/util/Map/entrySet()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#com/google/common/collect/HashBasedTable/create()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/repository/DefaultProjectRepositoriesLoader/processStream(java.io.InputStream,java.lang.String)#org/sonarqube/ws/Batch$WsProjectResponse/parseFrom(java.io.InputStream)
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#org/sonar/scanner/issue/ignore/EnforceIssuesFilter/getRelativePath(java.lang.String)
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#java/util/Iterator/hasNext()
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#org/sonar/scanner/issue/ignore/pattern/IssuePattern/getRulePattern()
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#org/sonar/api/utils/WildcardPattern/match(java.lang.String)
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#org/sonar/api/scan/issue/filter/FilterableIssue/ruleKey()
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#org/sonar/api/scan/issue/filter/FilterableIssue/componentKey()
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#org/sonar/scanner/issue/ignore/pattern/IssuePattern/getResourcePattern()
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#java/util/Iterator/next()
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#org/sonar/api/scan/issue/filter/IssueFilterChain/accept(org.sonar.api.scan.issue.filter.FilterableIssue)
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#java/util/List/iterator()
org/sonar/scanner/issue/ignore/EnforceIssuesFilter/accept(org.sonar.api.scan.issue.filter.FilterableIssue,org.sonar.api.scan.issue.filter.IssueFilterChain)#org/sonar/api/rule/RuleKey/toString()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$3(org.sonar.api.batch.fs.TextRange)#org/sonar/api/batch/fs/TextPointer/lineOffset()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$3(org.sonar.api.batch.fs.TextRange)#org/sonar/api/batch/fs/TextPointer/line()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$3(org.sonar.api.batch.fs.TextRange)#org/sonar/api/batch/fs/TextRange/end()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$3(org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$LineSgnificantCode$Builder/setLine(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$3(org.sonar.api.batch.fs.TextRange)#org/sonar/api/batch/fs/TextRange/start()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$3(org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$LineSgnificantCode/newBuilder()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$3(org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$LineSgnificantCode$Builder/setEndOffset(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$3(org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$LineSgnificantCode$Builder/build()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$3(org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$LineSgnificantCode$Builder/setStartOffset(int)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#java/io/Reader/close()
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#org/sonarqube/ws/client/WsResponse/contentReader()
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#com/google/gson/Gson/Gson()
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#org/sonar/api/utils/log/Profiler/stopInfo()
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#com/google/gson/Gson/fromJson(java.io.Reader,java.lang.Class)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#org/sonarqube/ws/client/GetRequest/GetRequest(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/listInstalledPlugins()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$Issue/getGap()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/getEndOffset()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/getEndLine()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setStatus(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/getStartLine()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleKey()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setSeverity(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$Issue/getRuleRepository()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/Constants$Severity/name()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$Issue/hasTextRange()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/SourceHashHolder/getHashedSource()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$Issue/getTextRange()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setEndLineOffset(java.lang.Integer)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/core/util/Uuids/createFast()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setResolution(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setNew(boolean)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setMessage(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/api/batch/fs/InputComponent/key()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#java/lang/Double/valueOf(double)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setRuleKey(org.sonar.api.rule.RuleKey)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setStartLine(java.lang.Integer)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$Issue/getSeverity()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/getStartOffset()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/TrackedIssue(org.sonar.scanner.issue.tracking.FileHashes)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/apache/commons/lang/StringUtils/trimToNull(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/protocol/output/ScannerReport$Issue/getMsg()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setEndLine(java.lang.Integer)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setGap(java.lang.Double)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setStartLineOffset(java.lang.Integer)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setComponentKey(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#java/lang/Integer/valueOf(int)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Issue,org.sonar.scanner.issue.tracking.SourceHashHolder)#org/sonar/scanner/issue/tracking/TrackedIssue/setKey(java.lang.String)
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#java/util/Collections/unmodifiableMap(java.util.Map)
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#org/sonar/api/measures/Metric/key()
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#org/sonar/api/measures/Metric$Builder/Metric$Builder(java.lang.String,java.lang.String,org.sonar.api.measures.Metric$ValueType)
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#java/util/Iterator/next()
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#org/sonar/api/measures/Metric$Builder/create()
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#java/util/Collection/iterator()
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#org/sonar/api/measures/Metric/getType()
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#java/util/LinkedHashMap/LinkedHashMap()
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#java/lang/Object/Object()
org/sonar/scanner/scan/measure/DefaultMetricFinder/DefaultMetricFinder(org.sonar.scanner.repository.MetricsRepository)#org/sonar/scanner/repository/MetricsRepository/metrics()
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#ch/qos/logback/classic/pattern/ExtendedThrowableProxyConverter/ExtendedThrowableProxyConverter()
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#ch/qos/logback/classic/pattern/ExtendedThrowableProxyConverter/start()
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#ch/qos/logback/classic/spi/ILoggingEvent/getThrowableProxy()
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#org/sonar/batch/bootstrapper/LogOutput/log(java.lang.String,org.sonar.batch.bootstrapper.LogOutput$Level)
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#java/lang/StringBuilder/StringBuilder()
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#ch/qos/logback/classic/pattern/ExtendedThrowableProxyConverter/stop()
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#ch/qos/logback/classic/spi/ILoggingEvent/getLevel()
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#java/lang/StringBuilder/toString()
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#ch/qos/logback/classic/spi/ILoggingEvent/getFormattedMessage()
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#ch/qos/logback/classic/pattern/ExtendedThrowableProxyConverter/convert(ch.qos.logback.classic.spi.ILoggingEvent)
org/sonar/batch/bootstrapper/LogCallbackAppender/append(ch.qos.logback.classic.spi.ILoggingEvent)#org/sonar/batch/bootstrapper/LogCallbackAppender/translate(ch.qos.logback.classic.Level)
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/repository/ProjectRepositories/settings(java.lang.String)
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/api/config/Settings/Settings(org.sonar.api.config.PropertyDefinitions,org.sonar.api.config.Encryption)
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/api/batch/bootstrap/ProjectReactor/getRoot()
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/api/batch/bootstrap/ProjectDefinition/properties()
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/bootstrap/MutableGlobalSettings/getProperties()
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/bootstrap/MutableGlobalSettings/getEncryption()
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/scan/MutableProjectSettings/addProperties(java.util.Map)
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/bootstrap/MutableGlobalSettings/getDefinitions()
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/api/batch/bootstrap/ProjectDefinition/getKeyWithBranch()
org/sonar/scanner/scan/MutableProjectSettings/MutableProjectSettings(org.sonar.api.batch.bootstrap.ProjectReactor,org.sonar.scanner.bootstrap.MutableGlobalSettings,org.sonar.scanner.repository.ProjectRepositories,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/util/HashMap/HashMap()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Map/values()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/next()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/Iterable/iterator()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/batchId()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/LinkedHashMap/LinkedHashMap()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/filesystem/InputComponentStore/allFilesToPublish()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/lines()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/key()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeComponentCoverage(int,java.lang.Iterable)
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Collection/stream()
org/sonar/scanner/report/CoveragePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Collectors/toList()
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Test/parser()
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReportReader/readTests(int)
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/io/InputStream/close()
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#com/google/protobuf/Parser/parseDelimitedFrom(java.io.InputStream)
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Component/getRef()
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/mediumtest/TaskResult/getReportReader()
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/apache/commons/io/FileUtils/openInputStream(java.io.File)
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/mediumtest/TaskResult/firstTestExecutionForName(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Test/getName()
org/sonar/scanner/storage/Storage/keySet()#com/persistit/Exchange/next(boolean)
org/sonar/scanner/storage/Storage/keySet()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/storage/Storage/keySet()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/storage/Storage/keySet()#java/util/LinkedHashSet/LinkedHashSet()
org/sonar/scanner/storage/Storage/keySet()#com/persistit/Exchange/append(java.lang.Object)
org/sonar/scanner/storage/Storage/keySet()#com/persistit/Exchange/getKey()
org/sonar/scanner/storage/Storage/keySet()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/storage/Storage/keySet()#com/persistit/Exchange/Exchange(com.persistit.Exchange)
org/sonar/scanner/storage/Storage/keySet()#com/persistit/Key/decode()
org/sonar/scanner/storage/Storage/keySet()#com/persistit/Exchange/clear()
org/sonar/scanner/storage/Storage/keySet()#com/persistit/Key/indexTo(int)
org/sonar/scanner/storage/Storage/keySet()#java/util/Set/add(java.lang.Object)
org/sonar/scanner/storage/Storage/keySet()#java/lang/StringBuilder/toString()
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/api/batch/fs/TextPointer/lineOffset()
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/api/batch/fs/TextRange/end()
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setEndLine(int)
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setEndOffset(int)
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/api/batch/fs/TextRange/start()
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setStartLine(int)
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/clear()
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/api/batch/fs/TextPointer/line()
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/build()
org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setStartOffset(int)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeMetadata(org.sonar.scanner.protocol.output.ScannerReport$Metadata)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Plugin$Builder/setUpdatedAt(long)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/getMutablePluginsByKey()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Plugin/newBuilder()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/rule/QProfile/getKey()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setAnalysisDate(long)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/rule/ModuleQProfiles/findAll()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/ProjectAnalysisInfo/analysisDate()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/bootstrap/ScannerPlugin/getUpdatedAt()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Date/getTime()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setProjectKey(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/branch/BranchConfiguration/branchName()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/cpd/CpdSettings/isCrossProjectDuplicationEnabled()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputModule/batchId()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata/newBuilder()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$QProfile$Builder/setName(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$QProfile/newBuilder()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Map$Entry/getKey()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputModule/getBranch()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Plugin$Builder/build()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$QProfile$Builder/build()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$QProfile$Builder/setKey(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Optional/ofNullable(java.lang.Object)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/next()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputModule/key()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/build()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Optional/ifPresent(java.util.function.Consumer)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/rule/QProfile/getName()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Plugin$Builder/setKey(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/ScanProperties/organizationKey()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$QProfile$Builder/setLanguage(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Set/iterator()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/Object/getClass()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Map$Entry/getValue()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setRootComponentRef(int)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Collection/iterator()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Map/entrySet()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/rule/QProfile/getRulesUpdatedAt()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/bootstrap/ScannerPluginRepository/getPluginsByKey()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$QProfile$Builder/setRulesUpdatedAt(long)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setCrossProjectDuplicationActivated(boolean)
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/getMutableQprofilesPerLanguage()
org/sonar/scanner/report/MetadataPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/rule/QProfile/getLanguage()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation$Builder/setTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange)
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/api/batch/fs/internal/DefaultInputComponent/batchId()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#java/util/Iterator/hasNext()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$Flow/newBuilder()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#java/util/List/isEmpty()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#java/util/Iterator/next()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#java/util/function/Consumer/accept(java.lang.Object)
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/api/batch/sensor/issue/IssueLocation/message()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation$Builder/setComponentRef(int)
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/api/batch/sensor/issue/IssueLocation/textRange()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/api/batch/sensor/issue/Issue$Flow/locations()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation$Builder/clear()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$Flow$Builder/clear()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation$Builder/setMsg(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation$Builder/build()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$Flow$Builder/build()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$Flow$Builder/addLocation(org.sonar.scanner.protocol.output.ScannerReport$IssueLocation)
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#org/sonar/api/batch/sensor/issue/IssueLocation/inputComponent()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#java/util/List/iterator()
org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)#java/util/Collection/iterator()
org/sonar/scanner/sensor/SensorOptimizer/fsCondition(org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor)#org/sonar/api/batch/fs/FileSystem/hasFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/scanner/sensor/SensorOptimizer/fsCondition(org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor)#org/sonar/api/batch/fs/FilePredicates/all()
org/sonar/scanner/sensor/SensorOptimizer/fsCondition(org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor)#java/util/Collection/isEmpty()
org/sonar/scanner/sensor/SensorOptimizer/fsCondition(org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/scanner/sensor/SensorOptimizer/fsCondition(org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor)#org/sonar/api/batch/fs/FilePredicates/hasLanguages(java.util.Collection)
org/sonar/scanner/sensor/SensorOptimizer/fsCondition(org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor)#org/sonar/api/batch/sensor/internal/DefaultSensorDescriptor/languages()
org/sonar/scanner/sensor/SensorOptimizer/fsCondition(org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor)#org/sonar/api/batch/sensor/internal/DefaultSensorDescriptor/type()
org/sonar/scanner/sensor/SensorOptimizer/fsCondition(org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/scanner/sensor/SensorOptimizer/fsCondition(org.sonar.api.batch.sensor.internal.DefaultSensorDescriptor)#org/sonar/api/batch/fs/FilePredicates/and(org.sonar.api.batch.fs.FilePredicate,org.sonar.api.batch.fs.FilePredicate)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#com/persistit/Exchange/next(boolean)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#java/util/LinkedHashSet/LinkedHashSet()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#com/persistit/Exchange/append(java.lang.Object)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#com/persistit/Exchange/getKey()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#com/persistit/Exchange/Exchange(com.persistit.Exchange)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#com/persistit/Key/decode()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#com/persistit/Exchange/clear()
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#com/persistit/Key/indexTo(int)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/storage/Storage/keySet(java.lang.Object)#java/lang/StringBuilder/toString()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/GenericCoverageReportParser()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/firstUnknownFiles()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/resolvePath(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(int)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/List/stream()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parse(java.io.File,org.sonar.api.batch.sensor.SensorContext)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/numberOfUnknownFiles()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/numberOfMatchedFiles()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageSensor/loadReportPaths()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/stream/Collectors/joining(java.lang.CharSequence)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/info(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Set/iterator()
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Integer/valueOf(int)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/api/Plugin/define(org.sonar.api.Plugin$Context)
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/core/platform/PluginRepository/getPluginInstance(java.lang.String)
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/core/platform/PluginRepository/getPluginInfos()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/scanner/bootstrap/ExtensionInstaller/doInstall(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher,org.sonar.core.platform.PluginInfo,java.lang.Object)
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/api/internal/PluginContextImpl$Builder/setBootConfiguration(org.sonar.api.config.Configuration)
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/scanner/bootstrap/BatchComponents/all(org.sonar.scanner.bootstrap.GlobalAnalysisMode)
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/api/internal/PluginContextImpl$Builder/setSonarRuntime(org.sonar.api.SonarRuntime)
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/api/Plugin$Context/getExtensions()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/api/internal/PluginContextImpl$Builder/build()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#java/util/Iterator/hasNext()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#java/util/Iterator/next()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/core/platform/PluginInfo/getKey()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/api/ExtensionProvider/provide()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/api/internal/PluginContextImpl$Builder/PluginContextImpl$Builder()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#org/sonar/core/platform/ComponentContainer/getComponentsByType(java.lang.Class)
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#java/lang/Iterable/iterator()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#java/util/List/iterator()
org/sonar/scanner/bootstrap/ExtensionInstaller/install(org.sonar.core.platform.ComponentContainer,org.sonar.scanner.bootstrap.ExtensionMatcher)#java/util/Collection/iterator()
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/Map$Entry/getKey()
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/Iterator/next()
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/Set/iterator()
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/List/contains(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/Map$Entry/getValue()
org/sonar/scanner/scan/ProjectReactorBuilder/mergeParentProperties(java.util.Map,java.util.Map)#java/util/Map/entrySet()
org/sonar/scanner/DefaultFileLinesContext/save()#org/sonar/api/batch/sensor/measure/NewMeasure/withValue(java.io.Serializable)
org/sonar/scanner/DefaultFileLinesContext/save()#org/sonar/api/batch/sensor/measure/NewMeasure/save()
org/sonar/scanner/DefaultFileLinesContext/save()#java/util/Iterator/hasNext()
org/sonar/scanner/DefaultFileLinesContext/save()#org/sonar/api/batch/sensor/measure/NewMeasure/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/DefaultFileLinesContext/save()#org/sonar/api/batch/sensor/measure/NewMeasure/forMetric(org.sonar.api.batch.measure.Metric)
org/sonar/scanner/DefaultFileLinesContext/save()#com/google/common/collect/ImmutableMap/copyOf(java.util.Map)
org/sonar/scanner/DefaultFileLinesContext/save()#java/util/Iterator/next()
org/sonar/scanner/DefaultFileLinesContext/save()#java/util/Set/iterator()
org/sonar/scanner/DefaultFileLinesContext/save()#org/sonar/scanner/DefaultFileLinesContext/shouldSave(java.util.Map)
org/sonar/scanner/DefaultFileLinesContext/save()#java/util/Map$Entry/getValue()
org/sonar/scanner/DefaultFileLinesContext/save()#org/sonar/api/batch/sensor/SensorContext/newMeasure()
org/sonar/scanner/DefaultFileLinesContext/save()#java/util/Map$Entry/getKey()
org/sonar/scanner/DefaultFileLinesContext/save()#java/util/Map$Entry/setValue(java.lang.Object)
org/sonar/scanner/DefaultFileLinesContext/save()#org/sonar/api/utils/KeyValueFormat/format(java.util.Map)
org/sonar/scanner/DefaultFileLinesContext/save()#org/sonar/scanner/DefaultFileLinesContext/optimizeStorage(java.lang.String,java.util.Map)
org/sonar/scanner/DefaultFileLinesContext/save()#java/util/Map/entrySet()
org/sonar/scanner/DefaultFileLinesContext/save()#org/sonar/api/batch/measure/MetricFinder/findByKey(java.lang.String)
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputComponent/batchId()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputComponent/key()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/core/util/CloseableIterator/close()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/LinkedList/LinkedList()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReportReader/readComponentIssues(int)
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/List/add(java.lang.Object)
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/issue/IssueCache/put(org.sonar.scanner.issue.tracking.TrackedIssue)
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/List/iterator()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/lang/StringBuilder/toString()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/Iterator/hasNext()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/core/util/CloseableIterator/hasNext()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/issue/tracking/IssueTransition/doTransition(java.util.List,org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/Iterator/next()
org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/core/util/CloseableIterator/next()
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#java/lang/Integer/intValue()
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#org/apache/commons/lang/StringUtils/split(java.lang.String,char)
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#java/util/Collections/emptySet()
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#org/apache/commons/lang/StringUtils/trim(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#org/apache/commons/lang/StringUtils/equals(java.lang.String,java.lang.String)
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#java/lang/Integer/valueOf(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#org/apache/commons/lang/StringUtils/substringBetween(java.lang.String,java.lang.String,java.lang.String)
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#org/sonar/scanner/issue/ignore/pattern/LineRange/LineRange(int,int)
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#java/util/HashSet/HashSet()
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#org/apache/commons/lang/StringUtils/contains(java.lang.String,char)
org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#org/sonar/scanner/rule/RuleFinderCompatibility/findAll(org.sonar.api.rules.RuleQuery)
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#java/util/Collection/isEmpty()
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#java/util/Collection/size()
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#java/util/Iterator/next()
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#java/util/Collection/iterator()
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#java/lang/StringBuilder/toString()
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/rule/RuleFinderCompatibility/find(org.sonar.api.rules.RuleQuery)#org/apache/commons/lang/builder/ReflectionToStringBuilder/toString(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/scanner/analysis/AnalysisProperties/properties()
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/scanner/scan/ProjectReactorBuilder/cleanAndCheckProjectDefinitions(org.sonar.api.batch.bootstrap.ProjectDefinition)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/api/batch/bootstrap/ProjectDefinition/getWorkDir()
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#java/util/Map/get(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/scanner/bootstrap/DroppedPropertyChecker/checkDroppedProperties()
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/api/batch/bootstrap/ProjectReactor/ProjectReactor(org.sonar.api.batch.bootstrap.ProjectDefinition)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/scanner/scan/ProjectReactorBuilder/defineRootProject(java.util.Map,org.sonar.api.batch.bootstrap.ProjectDefinition)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/api/utils/log/Profiler/stopDebug()
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/scanner/bootstrap/DroppedPropertyChecker/DroppedPropertyChecker(java.util.Map,java.util.Map)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#java/util/Map/putAll(java.util.Map)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/scanner/scan/ProjectReactorBuilder/defineChildren(org.sonar.api.batch.bootstrap.ProjectDefinition,java.util.Map,java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)
org/sonar/scanner/scan/ProjectReactorBuilder/execute()#java/util/HashMap/HashMap()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#java/lang/StringBuilder/append(int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/expectedMessage(java.lang.String,java.lang.String,java.lang.String,int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#java/lang/Long/longValue()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#java/lang/StringBuilder/append(long)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#javax/xml/stream/Location/getLineNumber()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#org/codehaus/staxmate/in/SMInputCursor/getCursorLocation()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#java/lang/Long/valueOf(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#java/lang/StringBuilder/toString()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#java/util/Iterator/hasNext()
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#java/util/Iterator/next()
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#java/util/Set/isEmpty()
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#org/sonar/api/utils/WildcardPattern/create(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#java/util/Set/iterator()
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#java/lang/Integer/valueOf(int)
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#org/sonar/scanner/issue/ignore/pattern/LineRange/to()
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#java/lang/Object/Object()
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#java/util/LinkedHashSet/LinkedHashSet()
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#org/sonar/scanner/issue/ignore/pattern/LineRange/from()
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)#java/util/Collections/unmodifiableSet(java.util.Set)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/GenericTestExecutionReportParser(org.sonar.scanner.deprecated.test.TestPlanBuilder)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/config/DefaultConfiguration/getOriginalProperties()
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/firstUnknownFiles()
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/numberOfMatchedFiles()
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/resolvePath(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/List/stream()
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/numberOfUnknownFiles()
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/stream/Collectors/joining(java.lang.CharSequence)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Integer/valueOf(int)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parse(java.io.File,org.sonar.api.batch.sensor.SensorContext)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/util/Optional/get()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/util/List/isEmpty()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#org/apache/commons/lang/StringUtils/isBlank(java.lang.String)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/util/Iterator/next()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/util/List/iterator()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/util/Optional/isPresent()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#org/sonar/api/scan/filesystem/PathResolver/relativize(java.nio.file.Path,java.nio.file.Path)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/logPaths(java.lang.String,java.nio.file.Path,java.util.List)#org/sonar/api/utils/log/Logger/info(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#java/util/Iterator/hasNext()
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#com/google/common/base/Joiner/on(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#com/google/gson/JsonObject/getAsJsonArray(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#java/util/Iterator/next()
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#com/google/gson/JsonParser/JsonParser()
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#java/util/List/add(java.lang.Object)
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#com/google/gson/JsonParser/parse(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#com/google/gson/JsonElement/getAsString()
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#com/google/gson/JsonObject/get(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#com/google/gson/JsonArray/iterator()
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#java/util/ArrayList/ArrayList()
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#com/google/gson/JsonElement/getAsJsonObject()
org/sonar/scanner/bootstrap/ScannerWsClient/tryParseAsJsonError(java.lang.String)#com/google/common/base/Joiner/join(java.lang.Iterable)
org/sonar/scanner/storage/Storage$EntryIterator/next()#org/sonar/scanner/storage/Storage$EntryIterator/next()
org/sonar/scanner/storage/Storage$EntryIterator/next()#com/persistit/Exchange/getValue()
org/sonar/scanner/storage/Storage$EntryIterator/next()#com/persistit/Exchange/next(com.persistit.KeyFilter)
org/sonar/scanner/storage/Storage$EntryIterator/next()#java/util/NoSuchElementException/NoSuchElementException()
org/sonar/scanner/storage/Storage$EntryIterator/next()#com/persistit/Exchange/getKey()
org/sonar/scanner/storage/Storage$EntryIterator/next()#com/persistit/Key/getDepth()
org/sonar/scanner/storage/Storage$EntryIterator/next()#com/persistit/Key/indexTo(int)
org/sonar/scanner/storage/Storage$EntryIterator/next()#com/persistit/Value/isDefined()
org/sonar/scanner/storage/Storage$EntryIterator/next()#org/sonar/scanner/storage/Storage$Entry/Storage$Entry(java.lang.Object%5B%5D,java.lang.Object)
org/sonar/scanner/storage/Storage$EntryIterator/next()#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/scanner/storage/Storage$EntryIterator/next()#com/persistit/Value/get()
org/sonar/scanner/storage/Storage$EntryIterator/next()#com/persistit/Key/decode()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/batch/sensor/issue/ExternalIssue/remediationEffort()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$ExternalIssue$Builder/setSeverity(org.sonar.scanner.protocol.Constants$Severity)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/batch/sensor/issue/ExternalIssue/primaryLocation()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/rule/RuleKey/rule()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#java/lang/Long/longValue()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$ExternalIssue$Builder/setEffort(long)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/batch/sensor/issue/ExternalIssue/flows()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/batch/sensor/issue/IssueLocation/message()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/rule/RuleKey/repository()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/rules/RuleType/name()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation$Builder/setComponentRef(int)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/batch/sensor/issue/IssueLocation/textRange()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/batch/sensor/issue/ExternalIssue/type()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$ExternalIssue$Builder/setTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$ExternalIssue$Builder/setRuleRepository(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/batch/sensor/issue/ExternalIssue/severity()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$ExternalIssue$Builder/setType(org.sonar.scanner.protocol.output.ScannerReport$IssueType)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/newBuilder()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/batch/rule/Severity/name()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$ExternalIssue/newBuilder()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation/newBuilder()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$ExternalIssue$Builder/setMsg(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation$Builder/setMsg(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$ExternalIssue$Builder/build()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/Constants$Severity/valueOf(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$ExternalIssue$Builder/setRuleKey(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/protocol/output/ScannerReport$IssueType/valueOf(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/api/batch/sensor/issue/ExternalIssue/ruleKey()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#java/lang/Object/getClass()
org/sonar/scanner/issue/ModuleIssues/createReportExternalIssue(org.sonar.api.batch.sensor.issue.ExternalIssue,int)#org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getResolution()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getRuleKey()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setStartLine(java.lang.Integer)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getLine()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/hasLine()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setEndLine(java.lang.Integer)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setSeverity(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getSeverity()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/Constants$Severity/name()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setComponentKey(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/hasMsg()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setResolution(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setNew(boolean)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setMessage(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getKey()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getCreationDate()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setAssignee(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getMsg()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setStatus(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/hasResolution()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getStatus()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setRuleKey(org.sonar.api.rule.RuleKey)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#java/util/Date/Date(long)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/TrackedIssue()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/hasAssigneeLogin()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setCreationDate(java.util.Date)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#java/lang/Integer/valueOf(int)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/issue/tracking/TrackedIssue/setKey(java.lang.String)
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getRuleRepository()
org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.scanner.protocol.input.ScannerInput$ServerIssue,java.lang.String)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getAssigneeLogin()
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/util/stream/Collectors/joining(java.lang.CharSequence)
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/util/Map/keySet()
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/util/Set/stream()
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/util/Map/isEmpty()
org/sonar/scanner/scm/ScmConfiguration/setProviderIfSupported(java.lang.String)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#java/io/Writer/append(char)
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#org/sonar/core/platform/PluginInfo/getVersion()
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#java/io/BufferedWriter/append(java.lang.CharSequence)
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#java/util/Collection/iterator()
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#org/sonar/core/platform/PluginInfo/getKey()
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#java/util/Iterator/next()
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#org/sonar/core/platform/PluginInfo/getName()
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#java/io/BufferedWriter/write(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/writePlugins(java.io.BufferedWriter)#org/sonar/scanner/bootstrap/ScannerPluginRepository/getPluginInfos()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/scanner/protocol/output/ScannerReport$ActiveRule$Builder/clear()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/scanner/protocol/output/ScannerReport$ActiveRule$Builder/getMutableParamsByKey()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/api/batch/rule/internal/DefaultActiveRule/params()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/scanner/protocol/output/ScannerReport$ActiveRule$Builder/setSeverity(org.sonar.scanner.protocol.Constants$Severity)
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/scanner/protocol/Constants$Severity/valueOf(java.lang.String)
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/api/batch/rule/internal/DefaultActiveRule/ruleKey()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/scanner/protocol/output/ScannerReport$ActiveRule$Builder/setRuleRepository(java.lang.String)
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/api/rule/RuleKey/repository()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/scanner/protocol/output/ScannerReport$ActiveRule$Builder/setRuleKey(java.lang.String)
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/scanner/protocol/output/ScannerReport$ActiveRule$Builder/setCreatedAt(long)
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/api/batch/rule/internal/DefaultActiveRule/severity()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/scanner/protocol/output/ScannerReport$ActiveRule$Builder/build()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/api/batch/rule/internal/DefaultActiveRule/createdAt()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#org/sonar/api/rule/RuleKey/rule()
org/sonar/scanner/report/ActiveRulesPublisher/lambda$publish$0(org.sonar.scanner.protocol.output.ScannerReport$ActiveRule$Builder,org.sonar.api.batch.rule.internal.DefaultActiveRule)#java/util/Map/putAll(java.util.Map)
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonarqube/ws/Rules$ListResponse$Rule/getKey()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/api/batch/rule/internal/NewRule/setInternalKey(java.lang.String)
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#java/util/Iterator/next()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/api/batch/rule/internal/NewRule/setName(java.lang.String)
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/api/batch/rule/internal/RulesBuilder/add(org.sonar.api.rule.RuleKey)
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#java/util/List/iterator()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonarqube/ws/Rules$ListResponse$Rule/getRepository()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#java/util/Iterator/hasNext()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonarqube/ws/Rules$ListResponse$Rule/getInternalKey()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/scanner/rule/RulesLoader/load()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/api/batch/rule/internal/RulesBuilder/RulesBuilder()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/api/batch/rule/internal/RulesBuilder/build()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonar/api/utils/log/Profiler/stopInfo()
org/sonar/scanner/rule/RulesProvider/load(org.sonar.scanner.rule.RulesLoader)#org/sonarqube/ws/Rules$ListResponse$Rule/getName()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#com/google/common/collect/Iterators/addAll(java.util.Collection,java.util.Iterator)
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/util/Iterator/hasNext()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/util/Map$Entry/getKey()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#org/sonar/core/util/CloseableIterator/close()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/util/Set/iterator()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#org/sonar/scanner/protocol/output/ScannerReportReader/readComponentMeasures(int)
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/util/Map/entrySet()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/util/ArrayList/ArrayList()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/util/Iterator/next()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/util/HashMap/HashMap()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#org/sonar/scanner/protocol/output/ScannerReport$Component/getRef()
org/sonar/scanner/mediumtest/TaskResult/allMeasures()#java/util/Map$Entry/getValue()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#java/util/stream/StreamSupport/stream(java.util.Spliterator,boolean)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#com/google/common/base/Splitter/split(java.lang.CharSequence)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#com/google/common/base/Splitter/trimResults()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#java/util/stream/Collectors/toList()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#java/lang/Iterable/spliterator()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#org/sonar/api/config/Configuration/get(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#java/util/Optional/orElse(java.lang.Object)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#com/google/common/base/Splitter/on(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)#com/google/common/base/Splitter/omitEmptyStrings()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule/getInternalKey()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/api/rule/RuleKey/rule()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Active$Param/getKey()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Active/getSeverity()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#java/util/List/add(java.lang.Object)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Active/getCreatedAt()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule/getName()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#java/util/List/iterator()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$ActiveList/getActiveList(int)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/scanner/rule/LoadedActiveRule/setRuleKey(org.sonar.api.rule.RuleKey)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule$Params/getParamsList()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/scanner/rule/LoadedActiveRule/setParams(java.util.Map)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Active$Param/getValue()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Actives/getActives()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/scanner/rule/LoadedActiveRule/LoadedActiveRule()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule/getKey()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#java/util/Iterator/hasNext()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/api/utils/DateUtils/dateToLong(java.util.Date)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$SearchResponse/getActives()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/scanner/rule/LoadedActiveRule/setName(java.lang.String)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule$Param/getDefaultValue()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule/hasTemplateKey()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule/getTemplateKey()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$SearchResponse/getRulesList()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/api/utils/DateUtils/parseDateTime(java.lang.String)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#java/util/Iterator/next()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#java/util/HashMap/HashMap()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#java/lang/Long/longValue()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/scanner/rule/LoadedActiveRule/setInternalKey(java.lang.String)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#java/util/LinkedList/LinkedList()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/scanner/rule/LoadedActiveRule/setCreatedAt(long)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/scanner/rule/LoadedActiveRule/setLanguage(java.lang.String)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/api/rule/RuleKey/parse(java.lang.String)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule/getParams()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/scanner/rule/LoadedActiveRule/setSeverity(java.lang.String)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonar/scanner/rule/LoadedActiveRule/setTemplateRuleKey(java.lang.String)
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule$Param/getKey()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Rule/getLang()
org/sonar/scanner/rule/DefaultActiveRulesLoader/readPage(org.sonarqube.ws.Rules$SearchResponse)#org/sonarqube/ws/Rules$Active/getParamsList()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/nio/file/attribute/FileTime/toMillis()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/nio/file/Path/toString()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/io/File/exists()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/lang/System/currentTimeMillis()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/nio/file/Files/readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption%5B%5D)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#org/sonar/scanner/bootstrap/GlobalTempFolderProvider/access$100()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#org/sonar/scanner/bootstrap/GlobalTempFolderProvider/access$200()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/nio/file/Path/toFile()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/nio/file/attribute/BasicFileAttributes/creationTime()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/lang/String/startsWith(java.lang.String)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/accept(java.nio.file.Path)#java/nio/file/Path/getFileName()
org/sonar/scanner/scan/DirectoryLock/tryLock()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/scan/DirectoryLock/tryLock()#java/io/RandomAccessFile/RandomAccessFile(java.io.File,java.lang.String)
org/sonar/scanner/scan/DirectoryLock/tryLock()#java/nio/file/Path/toString()
org/sonar/scanner/scan/DirectoryLock/tryLock()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/DirectoryLock/tryLock()#java/nio/file/Path/toFile()
org/sonar/scanner/scan/DirectoryLock/tryLock()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/DirectoryLock/tryLock()#java/io/RandomAccessFile/getChannel()
org/sonar/scanner/scan/DirectoryLock/tryLock()#java/nio/channels/FileChannel/tryLock(long,long,boolean)
org/sonar/scanner/scan/DirectoryLock/tryLock()#java/lang/StringBuilder/toString()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/io/Writer/append(char)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/protocol/output/ScannerReportWriter/getFileStructure()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Iterator/hasNext()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/report/AnalysisContextReportPublisher/dumpPropIfNotSensitive(java.io.BufferedWriter,java.lang.String,java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/report/AnalysisContextReportPublisher/isSystemProp(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/TreeSet/TreeSet(java.util.Collection)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/report/AnalysisContextReportPublisher/isSqProp(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/io/BufferedWriter/append(java.lang.CharSequence)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/protocol/output/FileStructure/analysisLog()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/report/AnalysisContextReportPublisher/isEnvVariable(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/AnalysisMode/isIssues()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Iterator/next()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/DefaultInputModule/key()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map/keySet()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.charset.Charset,java.nio.file.OpenOption%5B%5D)
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/io/BufferedWriter/close()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/io/File/toPath()
org/sonar/scanner/report/AnalysisContextReportPublisher/dumpModuleSettings(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/TreeSet/iterator()
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/lang/StringBuilder/append(int)
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#org/sonar/scanner/externalissue/ExternalIssueImporter/pluralize(java.lang.String,int)
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/lang/Integer/valueOf(int)
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/util/stream/Stream/limit(long)
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/lang/StringBuilder/toString()
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/util/Set/stream()
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/util/Set/size()
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#java/util/stream/Collectors/joining(java.lang.CharSequence)
org/sonar/scanner/externalissue/ExternalIssueImporter/execute()#org/sonar/api/utils/log/Logger/info(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/validateMaxLine(java.util.Map,org.sonar.api.batch.fs.InputFile)#java/lang/Integer/intValue()
org/sonar/scanner/sensor/DefaultSensorStorage/validateMaxLine(java.util.Map,org.sonar.api.batch.fs.InputFile)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/validateMaxLine(java.util.Map,org.sonar.api.batch.fs.InputFile)#java/util/Iterator/hasNext()
org/sonar/scanner/sensor/DefaultSensorStorage/validateMaxLine(java.util.Map,org.sonar.api.batch.fs.InputFile)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/sensor/DefaultSensorStorage/validateMaxLine(java.util.Map,org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/lines()
org/sonar/scanner/sensor/DefaultSensorStorage/validateMaxLine(java.util.Map,org.sonar.api.batch.fs.InputFile)#java/util/Set/iterator()
org/sonar/scanner/sensor/DefaultSensorStorage/validateMaxLine(java.util.Map,org.sonar.api.batch.fs.InputFile)#java/lang/Integer/valueOf(int)
org/sonar/scanner/sensor/DefaultSensorStorage/validateMaxLine(java.util.Map,org.sonar.api.batch.fs.InputFile)#java/util/Iterator/next()
org/sonar/scanner/sensor/DefaultSensorStorage/validateMaxLine(java.util.Map,org.sonar.api.batch.fs.InputFile)#java/util/Map/keySet()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/utils/log/Logger/warn(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(int)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#javax/xml/stream/Location/getLineNumber()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMHierarchicCursor/childElementCursor()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/toString()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMHierarchicCursor/getLocalName()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMHierarchicCursor/getAttrValue(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseRootNode(org.codehaus.staxmate.in.SMHierarchicCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMHierarchicCursor/getCursorLocation()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)#java/nio/file/Files/isSymbolicLink(java.nio.file.Path)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)#java/nio/file/Files/createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute%5B%5D)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)#java/nio/file/Path/toRealPath(java.nio.file.LinkOption%5B%5D)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)#java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute%5B%5D)
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/hasNext()
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/internal/DefaultInputFile/isExcludedForCoverage()
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/scan/measure/MeasureCache/byMetric(java.lang.String,java.lang.String)
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasType(org.sonar.api.batch.fs.InputFile$Type)
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/util/Iterator/next()
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFiles(org.sonar.api.batch.fs.FilePredicate)
org/sonar/scanner/source/ZeroCoverageSensor/execute(org.sonar.api.batch.sensor.SensorContext)#java/lang/Iterable/iterator()
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#java/util/concurrent/TimeUnit/toMillis(long)
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#org/sonar/scanner/util/ProgressReport/ProgressReport(java.lang.String,long)
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#java/util/Set/addAll(java.util.Collection)
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#java/util/List/size()
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#org/sonar/scanner/util/ProgressReport/start(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#java/lang/Object/Object()
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#java/lang/StringBuilder/toString()
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#java/util/LinkedHashSet/LinkedHashSet()
org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)#java/lang/StringBuilder/append(int)
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#java/util/stream/StreamSupport/stream(java.util.Spliterator,boolean)
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#com/google/common/collect/Sets$SetView/isEmpty()
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#org/sonar/core/util/stream/MoreCollectors/toSet()
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#com/google/common/collect/Sets/intersection(java.util.Set,java.util.Set)
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#java/lang/Iterable/spliterator()
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/sensor/coverage/CoverageType/allMetrics()
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/scan/measure/MeasureCache/byComponentKey(java.lang.String)
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#java/util/Set/stream()
org/sonar/scanner/source/ZeroCoverageSensor/isCoverageMeasuresAlreadyDefined(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#org/apache/commons/codec/digest/DigestUtils/md5Hex(java.io.InputStream)
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#java/io/InputStream/close()
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#org/apache/commons/io/FileUtils/openInputStream(java.io.File)
org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/ProjectReactorBuilder/checkMandatoryProperties(java.util.Map,java.lang.String%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/checkMandatoryProperties(java.util.Map,java.lang.String%5B%5D)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/checkMandatoryProperties(java.util.Map,java.lang.String%5B%5D)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/checkMandatoryProperties(java.util.Map,java.lang.String%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/ProjectReactorBuilder/checkMandatoryProperties(java.util.Map,java.lang.String%5B%5D)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/checkMandatoryProperties(java.util.Map,java.lang.String%5B%5D)#org/apache/commons/lang/StringUtils/defaultIfBlank(java.lang.String,java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/checkMandatoryProperties(java.util.Map,java.lang.String%5B%5D)#java/lang/StringBuilder/length()
org/sonar/scanner/scan/ProjectReactorBuilder/checkMandatoryProperties(java.util.Map,java.lang.String%5B%5D)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/checkMandatoryProperties(java.util.Map,java.lang.String%5B%5D)#java/lang/StringBuilder/toString()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/fs/InputComponent/key()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/sensor/DefaultSensorStorage/saveCoverageMetricInternal(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.measure.Metric,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/value()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/sensor/DefaultSensorStorage/logOnce(java.lang.String,java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/core/metric/ScannerMetrics/getMetrics()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/on(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/util/Set/contains(java.lang.Object)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/fs/InputComponent/isFile()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/fs/internal/DefaultInputFile/isExcludedForCoverage()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/StringBuilder/toString()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/DefaultMeasure()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/withValue(java.io.Serializable)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/measure/Metric/key()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/sensor/DefaultSensorStorage/shouldSkipStorage(org.sonar.api.batch.fs.internal.DefaultInputFile)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/forMetric(org.sonar.api.batch.measure.Metric)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/metric()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/scan/measure/MeasureCache/contains(java.lang.String,java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/inputComponent()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/isFromCore()
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/scanner/scan/measure/MeasureCache/put(java.lang.String,java.lang.String,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/fs/internal/DefaultInputFile/setPublished(boolean)
org/sonar/scanner/sensor/DefaultSensorStorage/saveMeasure(org.sonar.api.batch.fs.InputComponent,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/measure/MetricFinder/findByKey(java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/createBaseInput(java.util.Collection,org.sonar.scanner.issue.tracking.SourceHashHolder)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/core/issue/tracking/Tracker/track(org.sonar.core.issue.tracking.Input,org.sonar.core.issue.tracking.Input)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/core/issue/tracking/Tracking/getUnmatchedRaws()
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#java/util/LinkedList/LinkedList()
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/core/issue/tracking/Tracking/getUnmatchedBases()
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/addUnmatchedFromReport(java.lang.Iterable,java.util.Collection,java.util.Date)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/IssueTransformer/toTrackedIssue(org.sonar.api.batch.fs.InputComponent,java.util.Collection,org.sonar.scanner.issue.tracking.SourceHashHolder)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#java/lang/StringBuilder/toString()
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/api/batch/fs/InputComponent/key()
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/shouldCopyServerIssues(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/api/batch/fs/internal/InputComponentTree/getParent(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/loadServerIssues(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/createRawInput(java.util.Collection,org.sonar.scanner.issue.tracking.SourceHashHolder)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/loadSourceHashes(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/addIssuesOnDeletedComponents(java.util.Collection,java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/addUnmatchedFromServer(java.lang.Iterable,java.util.Collection,java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/copyServerIssues(java.util.Collection,java.util.List,java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/issue/tracking/LocalIssueTracking/trackIssues(org.sonar.api.batch.fs.InputComponent,java.util.Collection,java.util.Date)#java/lang/Object/getClass()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/scanner/rule/LoadedActiveRule/getName()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/NewActiveRule/setInternalKey(java.lang.String)
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#java/util/Iterator/hasNext()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/scanner/rule/LoadedActiveRule/getTemplateRuleKey()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/scanner/rule/LoadedActiveRule/getLanguage()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#java/util/Iterator/next()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#java/util/Set/iterator()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/NewActiveRule/setName(java.lang.String)
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/scanner/rule/LoadedActiveRule/getCreatedAt()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#java/util/Map/entrySet()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/ActiveRulesBuilder/build()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/scanner/rule/LoadedActiveRule/getInternalKey()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/ActiveRulesBuilder/create(org.sonar.api.rule.RuleKey)
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/scanner/rule/LoadedActiveRule/getRuleKey()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/NewActiveRule/setLanguage(java.lang.String)
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/NewActiveRule/setCreatedAt(long)
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#java/util/Map$Entry/getKey()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/NewActiveRule/setParam(java.lang.String,java.lang.String)
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/NewActiveRule/setTemplateRuleKey(java.lang.String)
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/NewActiveRule/setSeverity(java.lang.String)
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/ActiveRulesBuilder/ActiveRulesBuilder()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/scanner/rule/LoadedActiveRule/getSeverity()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#java/util/Map$Entry/getValue()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/api/batch/rule/internal/NewActiveRule/activate()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#org/sonar/scanner/rule/LoadedActiveRule/getParams()
org/sonar/scanner/rule/ActiveRulesProvider/transform(java.util.Collection)#java/util/Collection/iterator()
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#java/util/Optional/get()
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#java/nio/file/Path/resolve(java.lang.String)
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#org/sonar/api/config/Configuration/get(java.lang.String)
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#java/nio/file/Path/resolve(java.nio.file.Path)
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#org/sonar/api/batch/fs/internal/DefaultInputModule/getWorkDir()
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#org/sonar/api/batch/fs/internal/DefaultInputModule/getBaseDir()
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#java/nio/file/Path/isAbsolute()
org/sonar/scanner/scan/ScanProperties/metadataFilePath()#java/util/Optional/isPresent()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/endLine()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.Number)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/assignee()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/getMessage()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/status()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#java/lang/Iterable/iterator()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/utils/text/JsonWriter/endArray()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/utils/text/JsonWriter/endObject()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/utils/text/JsonWriter/name(java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/startLineOffset()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/componentKey()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/scan/filesystem/InputComponentStore/getByKey(java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/utils/text/JsonWriter/beginArray()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/utils/text/JsonWriter/beginObject()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/scan/report/JSONReport/getIssues()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/resolution()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/isNew()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/gap()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/startLine()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/getRuleKey()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/creationDate()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/batch/bootstrap/ProjectDefinition/getKeyWithBranch()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#java/util/Iterator/next()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/scan/report/JSONReport/getModule(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/key()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,boolean)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/endLineOffset()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/batch/fs/internal/DefaultInputModule/definition()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/core/component/ComponentKeys/createEffectiveKey(java.lang.String,org.sonar.api.batch.fs.InputPath)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/rule/RuleKey/toString()
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/api/utils/text/JsonWriter/propDateTime(java.lang.String,java.util.Date)
org/sonar/scanner/scan/report/JSONReport/writeJsonIssues(org.sonar.api.utils.text.JsonWriter,java.util.Set,java.util.Set)#org/sonar/scanner/issue/tracking/TrackedIssue/severity()
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#org/sonar/scanner/util/ProgressReport/stop(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#java/util/Iterator/hasNext()
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#org/sonar/api/utils/log/Logger/warn(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#java/lang/StringBuilder/append(int)
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#java/util/Iterator/next()
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#java/util/Set/isEmpty()
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#java/util/Set/iterator()
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)#java/lang/StringBuilder/toString()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#okhttp3/HttpUrl/url()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/api/platform/Server/getPublicRootUrl()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#java/net/URL/toExternalForm()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#okhttp3/HttpUrl$Builder/addQueryParameter(java.lang.String,java.lang.String)
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/api/utils/log/Logger/info(java.lang.String)
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/api/batch/fs/internal/DefaultInputModule/getKeyWithBranch()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#okhttp3/HttpUrl$Builder/build()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#java/util/LinkedHashMap/LinkedHashMap()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#okhttp3/HttpUrl/parse(java.lang.String)
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#java/util/Optional/ifPresent(java.util.function.Consumer)
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/scanner/scan/ScanProperties/branch()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/scanner/report/ReportPublisher/dumpMetadata(java.util.Map)
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/scanner/scan/ScanProperties/organizationKey()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#okhttp3/HttpUrl$Builder/addPathSegment(java.lang.String)
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/api/platform/Server/getVersion()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/report/ReportPublisher/logSuccess(java.lang.String)#okhttp3/HttpUrl/newBuilder()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/api/config/Configuration/getStringArray(java.lang.String)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/scanner/scan/filesystem/LanguageDetection/getFileLangPatternPropKey(java.lang.String)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Collection/size()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Collection/toArray(java.lang.Object%5B%5D)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/apache/commons/lang/StringUtils/defaultIfBlank(java.lang.String,java.lang.String)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Collections/singletonList(java.lang.Object)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/scanner/repository/language/LanguagesRepository/all()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/slf4j/Logger/info(java.lang.String,java.lang.Object)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Collection/iterator()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/scanner/repository/language/Language/key()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/api/batch/fs/internal/PathPattern/create(java.lang.String%5B%5D)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/ArrayList/ArrayList(java.util.Collection)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Collections/unmodifiableMap(java.util.Map)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/scanner/scan/filesystem/LanguageDetection/getDetails(java.lang.String,org.sonar.api.batch.fs.internal.PathPattern%5B%5D)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Iterator/next()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Map/keySet()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/scanner/scan/filesystem/LanguageDetection/sanitizeExtension(java.lang.String)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/api/config/Configuration/get(java.lang.String)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Collections/unmodifiableList(java.util.List)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#org/sonar/scanner/repository/language/Language/fileSuffixes()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/Optional/orElse(java.lang.Object)
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/util/LinkedHashMap/LinkedHashMap()
org/sonar/scanner/scan/filesystem/LanguageDetection/LanguageDetection(org.sonar.api.config.Configuration,org.sonar.scanner.repository.language.LanguagesRepository)#java/lang/Object/Object()
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/api/batch/scm/BlameLine/author()
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Changeset/newBuilder()
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/api/batch/scm/BlameLine/date()
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Changeset$Builder/setAuthor(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/scanner/scm/DefaultBlameOutput/normalizeString(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Changeset$Builder/build()
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/api/batch/scm/BlameLine/revision()
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Changeset$Builder/setRevision(java.lang.String)
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#java/util/Date/getTime()
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Changeset$Builder/setDate(long)
org/sonar/scanner/scm/DefaultBlameOutput/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Builder,org.sonar.api.batch.scm.BlameLine)#org/sonar/scanner/protocol/output/ScannerReport$Changesets$Builder/addChangeset(org.sonar.scanner.protocol.output.ScannerReport$Changesets$Changeset)
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#java/util/Iterator/hasNext()
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/scanner/protocol/output/ScannerReportReader/ScannerReportReader(java.io.File)
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/slf4j/Logger/info(java.lang.String)
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/api/batch/AnalysisMode/isIssues()
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#java/util/Iterator/next()
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/scanner/scan/ProjectScanContainer/getComponentByType(java.lang.Class)
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#java/util/List/add(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/scanner/mediumtest/TaskResult/getReportReader()
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#java/nio/file/Path/toFile()
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/scanner/mediumtest/TaskResult/storeFs(org.sonar.scanner.scan.ProjectScanContainer)
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/scanner/issue/IssueCache/all()
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#java/lang/Iterable/iterator()
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/scanner/mediumtest/TaskResult/storeReportComponents(int,java.lang.String)
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/scanner/protocol/output/ScannerReportReader/readMetadata()
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/scanner/report/ReportPublisher/getReportDir()
org/sonar/scanner/mediumtest/TaskResult/scanTaskCompleted(org.sonar.scanner.scan.ProjectScanContainer)#org/sonar/scanner/protocol/output/ScannerReport$Metadata/getRootComponentRef()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/api/batch/fs/TextPointer/lineOffset()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule$Builder/build()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule$Builder/setRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/api/batch/fs/TextRange/end()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setEndLine(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setEndOffset(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule$Builder/setType(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$HighlightingType)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/scanner/report/ScannerReportUtils/toProtocolType(org.sonar.api.batch.sensor.highlighting.TypeOfText)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setStartLine(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/api/batch/fs/TextPointer/line()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/build()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setStartOffset(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/api/batch/sensor/highlighting/internal/SyntaxHighlightingRule/range()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/api/batch/fs/TextRange/start()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$0(org.sonar.scanner.protocol.output.ScannerReport$SyntaxHighlightingRule$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.sensor.highlighting.internal.SyntaxHighlightingRule)#org/sonar/api/batch/sensor/highlighting/internal/SyntaxHighlightingRule/getTextType()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/getStartOffset()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/getStartLine()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#java/util/Collections/emptyList()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/core/util/CloseableIterator/close()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReport$Symbol/getReferenceList()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReport$Component/getRef()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/mediumtest/TaskResult/getReportReader()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/core/util/CloseableIterator/hasNext()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReport$Symbol/getDeclaration()
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/scanner/protocol/output/ScannerReportReader/readComponentSymbols(int)
org/sonar/scanner/mediumtest/TaskResult/symbolReferencesFor(org.sonar.api.batch.fs.InputFile,int,int)#org/sonar/core/util/CloseableIterator/next()
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#org/sonar/scanner/scan/WorkDirectoriesInitializer/list(java.nio.file.Path)
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/util/Iterator/next()
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/nio/file/Path/toFile()
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/nio/file/DirectoryStream/iterator()
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/nio/file/Path/toString()
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/nio/file/DirectoryStream/close()
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#org/sonar/core/util/FileUtils/deleteQuietly(java.io.File)
org/sonar/scanner/scan/WorkDirectoriesInitializer/deleteAllRecursivelyExceptLockFile(java.nio.file.Path)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/io/Reader/close()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetricsResponse/getP()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonarqube/ws/client/WsResponse/contentReader()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/lang/StringBuilder/append(int)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetric/getType()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetric/isCustom()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/lang/Integer/valueOf(int)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/util/List/iterator()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/api/measures/Metric/setQualitative(java.lang.Boolean)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetric/isQualitative()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetric/getKey()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetric/getDirection()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetric/getName()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/api/measures/Metric/setDescription(java.lang.String)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetricsResponse/getPs()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/util/Iterator/hasNext()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/api/measures/Metric$Builder/Metric$Builder(java.lang.String,java.lang.String,org.sonar.api.measures.Metric$ValueType)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetricsResponse/access$000(org.sonar.scanner.repository.DefaultMetricsRepositoryLoader$WsMetricsResponse)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonarqube/ws/client/GetRequest/GetRequest(java.lang.String)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/util/Iterator/next()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetric/getId()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/api/measures/Metric$Builder/create()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/api/measures/Metric/setId(java.lang.Integer)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/api/measures/Metric/setDirection(java.lang.Integer)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/lang/Boolean/valueOf(boolean)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/api/measures/Metric$ValueType/valueOf(java.lang.String)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/api/measures/Metric/setUserManaged(java.lang.Boolean)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/util/List/add(java.lang.Object)
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetricsResponse/getTotal()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/protocol/GsonHelper/create()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#org/sonar/scanner/repository/DefaultMetricsRepositoryLoader$WsMetric/getDescription()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#java/lang/StringBuilder/toString()
org/sonar/scanner/repository/DefaultMetricsRepositoryLoader/loadFromPaginatedWs(java.util.List)#com/google/gson/Gson/fromJson(java.io.Reader,java.lang.Class)
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonarqube/ws/Qualityprofiles$SearchWsResponse$QualityProfile/getRulesUpdatedAt()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonarqube/ws/Qualityprofiles$SearchWsResponse$QualityProfile/getLanguage()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonar/scanner/rule/QProfile$Builder/QProfile$Builder()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#java/util/Iterator/hasNext()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonar/scanner/rule/QProfile$Builder/setKey(java.lang.String)
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#java/util/Collection/size()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#java/util/Iterator/next()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonar/scanner/rule/QProfile$Builder/setRulesUpdatedAt(java.util.Date)
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonarqube/ws/Qualityprofiles$SearchWsResponse$QualityProfile/getName()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#java/util/Collection/iterator()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonar/scanner/rule/QProfile$Builder/setLanguage(java.lang.String)
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#java/lang/Object/Object()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonarqube/ws/Qualityprofiles$SearchWsResponse$QualityProfile/getKey()
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#java/util/Collections/unmodifiableMap(java.util.Map)
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonar/api/utils/DateUtils/parseDateTime(java.lang.String)
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonar/scanner/rule/QProfile$Builder/setName(java.lang.String)
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#java/util/HashMap/HashMap(int)
org/sonar/scanner/rule/ModuleQProfiles/ModuleQProfiles(java.util.Collection)#org/sonar/scanner/rule/QProfile$Builder/build()
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/deprecated/test/DefaultCoverageBlock/DefaultCoverageBlock(org.sonar.api.test.TestCase,org.sonar.api.batch.fs.internal.DefaultInputFile,java.util.List)
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#java/lang/StringBuilder/toString()
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/api/batch/fs/InputFile/type()
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/api/batch/fs/internal/DefaultInputFile/key()
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/scanner/deprecated/test/DefaultTestCase/name()
org/sonar/scanner/deprecated/test/DefaultTestCase/setCoverageBlock(org.sonar.api.batch.fs.InputFile,java.util.List)#org/sonar/api/test/exception/CoverageAlreadyExistsException/CoverageAlreadyExistsException(java.lang.String)
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/getTestName()
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReportReader/readCoverageDetails(int)
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/io/InputStream/close()
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#com/google/protobuf/Parser/parseDelimitedFrom(java.io.InputStream)
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Component/getRef()
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/mediumtest/TaskResult/getReportReader()
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/apache/commons/io/FileUtils/openInputStream(java.io.File)
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail/parser()
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/coveragePerTestFor(org.sonar.api.batch.fs.InputFile,java.lang.String)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
java+initializer:///org/sonar/scanner/rule/DefaultActiveRulesLoader/DefaultActiveRulesLoader$initializer#java/util/stream/Stream/map(java.util.function.Function)
java+initializer:///org/sonar/scanner/rule/DefaultActiveRulesLoader/DefaultActiveRulesLoader$initializer#java/util/stream/Stream/collect(java.util.stream.Collector)
java+initializer:///org/sonar/scanner/rule/DefaultActiveRulesLoader/DefaultActiveRulesLoader$initializer#java/lang/StringBuilder/append(java.lang.String)
java+initializer:///org/sonar/scanner/rule/DefaultActiveRulesLoader/DefaultActiveRulesLoader$initializer#java/util/stream/Collectors/joining(java.lang.CharSequence)
java+initializer:///org/sonar/scanner/rule/DefaultActiveRulesLoader/DefaultActiveRulesLoader$initializer#java/util/stream/Stream/filter(java.util.function.Predicate)
java+initializer:///org/sonar/scanner/rule/DefaultActiveRulesLoader/DefaultActiveRulesLoader$initializer#org/sonar/api/rules/RuleType/values()
java+initializer:///org/sonar/scanner/rule/DefaultActiveRulesLoader/DefaultActiveRulesLoader$initializer#java/lang/StringBuilder/StringBuilder()
java+initializer:///org/sonar/scanner/rule/DefaultActiveRulesLoader/DefaultActiveRulesLoader$initializer#java/util/Arrays/stream(java.lang.Object%5B%5D)
java+initializer:///org/sonar/scanner/rule/DefaultActiveRulesLoader/DefaultActiveRulesLoader$initializer#java/lang/StringBuilder/toString()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/type()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/Collections/emptyMap()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/value()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/Set/stream()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/Set/size()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/scan/measure/MeasureCache/byMetric(java.lang.String,java.lang.String)
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/count()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#org/sonar/api/utils/KeyValueFormat/parseIntInt(java.lang.String)
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/Collection/stream()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/Map/keySet()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/scan/measure/MeasureCache/put(java.lang.String,java.lang.String,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/stream/IntStream/sum()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/lang/Integer/valueOf(int)
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/mapToInt(java.util.function.ToIntFunction)
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/DefaultMeasure()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/withValue(java.io.Serializable)
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/Map/values()
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/forMetric(org.sonar.api.batch.measure.Metric)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/lang/System/getProperty(java.lang.String,java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/batch/bootstrapper/EnvironmentInformation/toString()
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/bootstrap/ScannerWsClient/ScannerWsClient(org.sonarqube.ws.client.WsClient,boolean,org.sonar.scanner.bootstrap.GlobalAnalysisMode)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/lang/String/isEmpty()
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/apache/commons/lang/StringUtils/defaultIfBlank(java.lang.String,java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/WsClientFactory/newClient(org.sonarqube.ws.client.WsConnector)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/bootstrap/GlobalProperties/property(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/HttpConnector$Builder/userAgent(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/HttpConnector$Builder/proxyCredentials(java.lang.String,java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/lang/String/valueOf(int)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/HttpConnector$Builder/connectTimeoutMilliseconds(int)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/HttpConnector/newBuilder()
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/HttpConnector$Builder/readTimeoutMilliseconds(int)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/HttpConnector$Builder/url(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/WsClientFactories/getDefault()
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/lang/System/getProperty(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/HttpConnector$Builder/build()
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonarqube/ws/client/HttpConnector$Builder/credentials(java.lang.String,java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClientProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties,org.sonar.batch.bootstrapper.EnvironmentInformation,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/lang/Integer/parseInt(java.lang.String)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/util/Optional/get()
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#org/sonar/scanner/bootstrap/GlobalAnalysisMode/isIssues()
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#org/sonar/api/config/Encryption/isEncrypted(java.lang.String)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/util/Optional/of(java.lang.Object)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/util/Optional/ofNullable(java.lang.Object)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#org/sonar/api/config/PropertyDefinitions/getDefaultValue(java.lang.String)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#org/sonar/api/config/Encryption/decrypt(java.lang.String)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/util/Optional/isPresent()
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonarqube/ws/client/HttpException/url()
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonar/scanner/bootstrap/PluginFiles/downloadBinaryTo(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin,java.io.File,org.sonarqube.ws.client.WsResponse)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonar/scanner/bootstrap/PluginFiles/jarInCache(java.lang.String,java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonarqube/ws/client/HttpException/code()
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonarqube/ws/client/WsResponse/header(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/util/Optional/isPresent()
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonar/scanner/bootstrap/PluginFiles/computeMd5(java.io.File)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/util/Optional/get()
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonarqube/ws/client/WsResponse/close()
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonarqube/ws/client/GetRequest/GetRequest(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonarqube/ws/client/WsResponse/requestUrl()
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/util/Optional/of(java.lang.Object)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/util/Optional/orElseThrow(java.util.function.Supplier)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonar/scanner/bootstrap/PluginFiles/newTempFile()
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/util/Optional/empty()
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/lang/Integer/valueOf(int)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonarqube/ws/client/GetRequest/setParam(java.lang.String,java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#java/io/File/getParentFile()
org/sonar/scanner/bootstrap/PluginFiles/download(org.sonar.scanner.bootstrap.ScannerPluginInstaller$InstalledPlugin)#org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File)
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/lang/Integer/intValue()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/util/Map$Entry/getKey()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/coverage/NewCoverage/onFile(org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/fs/InputFile/lines()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/util/Iterator/next()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/coverage/NewCoverage/save()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/SensorContext/newCoverage()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/util/Set/iterator()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/util/Map$Entry/getValue()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/util/Map/entrySet()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#java/util/Iterator/hasNext()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/value()
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/batch/sensor/coverage/NewCoverage/lineHits(int,int)
org/sonar/scanner/source/ZeroCoverageSensor/storeZeroCoverageForEachExecutableLine(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)#org/sonar/api/utils/KeyValueFormat/parseIntInt(java.lang.String)
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#com/persistit/Value/getString()
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/forMetric(org.sonar.api.batch.measure.Metric)
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#com/persistit/Value/get()
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#org/sonar/api/batch/measure/MetricFinder/findByKey(java.lang.String)
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/DefaultMeasure()
org/sonar/scanner/scan/measure/MeasureValueCoder/get(com.persistit.Value,java.lang.Class,com.persistit.encoding.CoderContext)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/withValue(java.io.Serializable)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#java/util/ArrayList/ArrayList()
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#org/sonar/batch/bootstrapper/Batch$Builder/access$000(org.sonar.batch.bootstrapper.Batch$Builder)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#org/sonar/batch/bootstrapper/Batch$Builder/access$100(org.sonar.batch.bootstrapper.Batch$Builder)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#org/sonar/batch/bootstrapper/Batch$Builder/access$200(org.sonar.batch.bootstrapper.Batch$Builder)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#org/sonar/batch/bootstrapper/Batch$Builder/access$300(org.sonar.batch.bootstrapper.Batch$Builder)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#org/sonar/batch/bootstrapper/LoggingConfiguration/LoggingConfiguration(org.sonar.batch.bootstrapper.EnvironmentInformation)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#java/util/Map/putAll(java.util.Map)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#java/util/List/addAll(java.util.Collection)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#java/util/HashMap/HashMap()
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#java/util/List/add(java.lang.Object)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#org/sonar/batch/bootstrapper/LoggingConfiguration/setProperties(java.util.Map)
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#java/lang/Object/Object()
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#org/sonar/batch/bootstrapper/Batch$Builder/isEnableLoggingConfiguration()
org/sonar/batch/bootstrapper/Batch/Batch(org.sonar.batch.bootstrapper.Batch$Builder)#org/sonar/batch/bootstrapper/LoggingConfiguration/setLogOutput(org.sonar.batch.bootstrapper.LogOutput)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Issue$Builder/setMsg(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Issue$Builder/setRuleKey(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation/newBuilder()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/rule/RuleKey/rule()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Issue$Builder/setTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/IssueLocation/message()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/rule/RuleKey/repository()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Issue/newBuilder()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/Issue/ruleKey()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation$Builder/setComponentRef(int)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/newBuilder()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/batch/rule/Severity/name()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/Issue/overriddenSeverity()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Issue$Builder/setGap(double)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$IssueLocation$Builder/setMsg(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Issue$Builder/setRuleRepository(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/Issue/gap()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#java/lang/Double/doubleValue()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/Constants$Severity/valueOf(java.lang.String)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/Issue/primaryLocation()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/issue/ModuleIssues/applyFlows(java.util.function.Consumer,org.sonar.scanner.protocol.output.ScannerReport$IssueLocation$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Collection)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Issue$Builder/setSeverity(org.sonar.scanner.protocol.Constants$Severity)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#java/lang/Object/getClass()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$Issue$Builder/build()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/scanner/issue/ModuleIssues/toProtobufTextRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,org.sonar.api.batch.fs.TextRange)
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/IssueLocation/textRange()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#org/sonar/api/batch/sensor/issue/Issue/flows()
org/sonar/scanner/issue/ModuleIssues/createReportIssue(org.sonar.api.batch.sensor.issue.Issue,int,java.lang.String,java.lang.String)#com/google/common/base/Strings/isNullOrEmpty(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/category(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/description(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/onQualifiers(java.lang.String,java.lang.String%5B%5D)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/properties()#org/sonar/api/config/PropertyDefinition/builder(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/properties()#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/name(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/deprecatedKey(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/multiValues(boolean)
org/sonar/scanner/genericcoverage/GenericTestExecutionSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/build()
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#org/sonar/api/utils/log/Logger/warn(java.lang.String,java.lang.Object)
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#java/util/Optional/get()
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#org/sonar/api/config/PropertyDefinitions/get(java.lang.String)
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#java/util/List/isEmpty()
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#org/sonar/core/config/MultivalueProperty/parseAsCsv(java.lang.String,java.lang.String)
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#org/sonar/api/config/PropertyDefinition/multiValues()
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#org/sonar/scanner/config/DefaultConfiguration/getInternal(java.lang.String)
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#org/sonar/api/config/PropertyDefinition/fields()
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#java/util/Optional/isPresent()
org/sonar/scanner/config/DefaultConfiguration/getStringArray(java.lang.String)#org/sonar/api/config/PropertyDefinitions/validKey(java.lang.String)
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#java/util/regex/Pattern/compile(java.lang.String)
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#java/util/Iterator/hasNext()
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#java/util/List/isEmpty()
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/getAllFilePatterns()
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#java/util/Iterator/next()
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#org/sonar/scanner/issue/ignore/pattern/BlockIssuePattern/getBeginBlockRegexp()
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#java/util/List/add(java.lang.Object)
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#java/util/List/iterator()
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader$DoubleRegexpMatcher/IssueExclusionsLoader$DoubleRegexpMatcher(java.util.regex.Pattern,java.util.regex.Pattern)
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#org/sonar/scanner/issue/ignore/pattern/BlockIssuePattern/getEndBlockRegexp()
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#java/util/ArrayList/ArrayList()
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#java/lang/Object/Object()
org/sonar/scanner/issue/ignore/scanner/IssueExclusionsLoader/IssueExclusionsLoader(org.sonar.scanner.issue.ignore.pattern.IssueExclusionPatternInitializer,org.sonar.scanner.issue.ignore.pattern.PatternMatcher)#org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/getBlockPatterns()
org/sonar/scanner/bootstrap/MutableGlobalSettings/get(java.lang.String)#org/sonar/scanner/bootstrap/GlobalAnalysisMode/isIssues()
org/sonar/scanner/bootstrap/MutableGlobalSettings/get(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/MutableGlobalSettings/get(java.lang.String)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/bootstrap/MutableGlobalSettings/get(java.lang.String)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/bootstrap/MutableGlobalSettings/get(java.lang.String)#java/util/Optional/ofNullable(java.lang.Object)
org/sonar/scanner/bootstrap/MutableGlobalSettings/get(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/MutableGlobalSettings/get(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/sonar/scanner/bootstrap/MutableGlobalSettings/get(java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/MutableGlobalSettings/get(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/sonar/scanner/report/ReportPublisher/start()#org/sonar/scanner/protocol/output/ScannerReportWriter/ScannerReportWriter(java.io.File)
org/sonar/scanner/report/ReportPublisher/start()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/report/ReportPublisher/start()#org/sonar/scanner/report/AnalysisContextReportPublisher/init(org.sonar.scanner.protocol.output.ScannerReportWriter)
org/sonar/scanner/report/ReportPublisher/start()#org/sonar/scanner/bootstrap/GlobalAnalysisMode/isMediumTest()
org/sonar/scanner/report/ReportPublisher/start()#java/nio/file/Path/toFile()
org/sonar/scanner/report/ReportPublisher/start()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/report/ReportPublisher/start()#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/report/ReportPublisher/start()#java/lang/StringBuilder/toString()
org/sonar/scanner/report/ReportPublisher/start()#okhttp3/HttpUrl/parse(java.lang.String)
org/sonar/scanner/report/ReportPublisher/start()#java/nio/file/Path/resolve(java.lang.String)
org/sonar/scanner/report/ReportPublisher/start()#org/sonar/scanner/bootstrap/GlobalAnalysisMode/isIssues()
org/sonar/scanner/report/ReportPublisher/start()#org/sonar/api/platform/Server/getPublicRootUrl()
org/sonar/scanner/report/ReportPublisher/start()#org/sonar/api/batch/fs/internal/DefaultInputModule/getWorkDir()
org/sonar/scanner/report/ReportPublisher/start()#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.Collection)#org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.Collection)#org/sonar/api/utils/text/JsonWriter/beginObject()
org/sonar/scanner/scan/report/JSONReport/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.Collection)#java/util/Iterator/next()
org/sonar/scanner/scan/report/JSONReport/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.Collection)#org/sonar/api/utils/text/JsonWriter/endArray()
org/sonar/scanner/scan/report/JSONReport/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.Collection)#org/sonar/api/utils/text/JsonWriter/endObject()
org/sonar/scanner/scan/report/JSONReport/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.Collection)#java/util/Collection/iterator()
org/sonar/scanner/scan/report/JSONReport/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.Collection)#org/sonar/api/utils/text/JsonWriter/name(java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.Collection)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/report/JSONReport/writeUsers(org.sonar.api.utils.text.JsonWriter,java.util.Collection)#org/sonar/api/utils/text/JsonWriter/beginArray()
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#java/io/File/isDirectory()
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object)
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#java/io/File/exists()
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#java/io/File/toPath()
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#java/io/File/getAbsolutePath()
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/PluginFiles/mkdir(java.io.File,java.lang.String)#java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute%5B%5D)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#org/sonar/scanner/bootstrap/ScannerPluginInstaller/loadPlugins(java.util.Map)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#org/sonar/scanner/bootstrap/ScannerPluginInstaller$Loaded/access$100(org.sonar.scanner.bootstrap.ScannerPluginInstaller$Loaded)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#java/util/HashMap/HashMap()
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#java/util/Map/clear()
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#org/sonar/api/utils/log/Profiler/stopInfo()
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#org/sonar/scanner/bootstrap/ScannerPluginInstaller$Loaded/access$000(org.sonar.scanner.bootstrap.ScannerPluginInstaller$Loaded)
org/sonar/scanner/bootstrap/ScannerPluginInstaller/installRemotes()#org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#java/util/ArrayList/ArrayList(java.util.Collection)
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#java/util/Map/isEmpty()
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#java/util/Optional/ifPresent(java.util.function.Consumer)
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#org/sonar/scanner/scan/ScanProperties/organizationKey()
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#java/lang/StringBuilder/toString()
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#org/sonar/scanner/util/ScannerUtils/encodeForUrl(java.lang.String)
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#java/util/Map/putAll(java.util.Map)
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#java/util/Map/values()
org/sonar/scanner/repository/DefaultQualityProfileLoader/loadAndOverrideIfNeeded(java.lang.String,java.lang.StringBuilder)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#com/google/common/collect/ImmutableMultimap$Builder/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#java/util/Collections/unmodifiableMap(java.util.Map)
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#com/google/common/collect/ImmutableMultimap$Builder/ImmutableMultimap$Builder()
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#java/util/Iterator/next()
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#java/util/Set/iterator()
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#com/google/common/collect/ImmutableMultimap$Builder/build()
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#java/util/Map/entrySet()
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#java/lang/Object/Object()
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#java/util/Map$Entry/getKey()
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#java/util/HashMap/HashMap(java.util.Map)
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#org/sonar/scanner/scan/DefaultInputModuleHierarchy/findRoot(java.util.Map)
org/sonar/scanner/scan/DefaultInputModuleHierarchy/DefaultInputModuleHierarchy(java.util.Map)#java/util/Map$Entry/getValue()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#com/google/common/collect/Maps/newHashMap()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/util/Iterator/hasNext()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/util/Map/get(java.lang.Object)
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/util/Iterator/next()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/lang/Class/getName()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#org/sonar/api/task/TaskDefinition/taskClass()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#org/sonar/scanner/task/Tasks/definitions()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/util/Collection/iterator()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/lang/StringBuilder/toString()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#org/sonar/api/task/TaskDefinition/key()
org/sonar/scanner/task/Tasks/checkDuplicatedClasses()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/api/batch/scm/ScmProvider/key()
org/sonar/scanner/scm/ScmPublisher/publish()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/api/batch/scm/ScmProvider/blameCommand()
org/sonar/scanner/scm/ScmPublisher/publish()#java/util/List/isEmpty()
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/scanner/scm/ScmPublisher/collectFilesToBlame(org.sonar.scanner.protocol.output.ScannerReportWriter)
org/sonar/scanner/scm/ScmPublisher/publish()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/scanner/scm/DefaultBlameOutput/DefaultBlameOutput(org.sonar.scanner.protocol.output.ScannerReportWriter,java.util.List)
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/api/batch/scm/BlameCommand/blame(org.sonar.api.batch.scm.BlameCommand$BlameInput,org.sonar.api.batch.scm.BlameCommand$BlameOutput)
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/scanner/scm/ScmConfiguration/isDisabled()
org/sonar/scanner/scm/ScmPublisher/publish()#java/lang/StringBuilder/toString()
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/scanner/scm/DefaultBlameOutput/finish(boolean)
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/scanner/scm/ScmConfiguration/provider()
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/scanner/scm/DefaultBlameInput/DefaultBlameInput(org.sonar.api.batch.fs.FileSystem,java.lang.Iterable)
org/sonar/scanner/scm/ScmPublisher/publish()#org/sonar/api/utils/log/Logger/info(java.lang.String)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/reflect/Array/getLength(java.lang.Object)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/util/List/addAll(java.util.Collection)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#org/sonar/core/platform/ComponentContainer/getComponentsByType(java.lang.Class)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/util/List/add(java.lang.Object)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/reflect/Array/get(java.lang.Object,int)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/Class/isArray()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/evaluateMethod(java.lang.Object,java.lang.reflect.Method,java.util.List)#java/lang/Object/getClass()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/codehaus/staxmate/in/SMInputCursor/getNext()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#java/lang/Long/valueOf(long)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/codehaus/staxmate/in/SMInputCursor/collectDescendantText()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/codehaus/staxmate/in/SMInputCursor/descendantElementCursor()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/sonar/api/test/MutableTestCase/setDurationInMs(java.lang.Long)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/sonar/api/test/MutableTestCase/setMessage(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/sonar/api/test/MutableTestPlan/addTestCase(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/sonar/api/test/MutableTestCase/setStackTrace(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/codehaus/staxmate/in/SMInputCursor/getLocalName()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/longValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,long)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)#org/sonar/api/test/MutableTestCase/setStatus(org.sonar.api.test.TestCase$Status)
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#org/sonar/api/utils/KeyValueFormat/parseIntString(java.lang.String)
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/lang/Integer/intValue()
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/util/Map$Entry/getKey()
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#org/sonar/scanner/scan/measure/MeasureCache/byMetric(java.lang.String,java.lang.String)
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/util/Iterator/next()
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#org/sonar/scanner/protocol/output/ScannerReport$LineCoverage$Builder/setLine(int)
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/util/Set/iterator()
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#org/sonar/scanner/report/CoveragePublisher$MeasureOperation/apply(java.lang.String,org.sonar.scanner.protocol.output.ScannerReport$LineCoverage$Builder)
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/lang/Integer/valueOf(int)
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#org/sonar/scanner/protocol/output/ScannerReport$LineCoverage/newBuilder()
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/util/Map$Entry/getValue()
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/util/Map/entrySet()
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/util/Iterator/hasNext()
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/value()
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/report/CoveragePublisher/applyLineMeasure(java.lang.String,int,java.lang.String,java.util.Map,org.sonar.scanner.report.CoveragePublisher$MeasureOperation)#org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)
org/sonar/scanner/scan/MutableModuleSettings/get(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/MutableModuleSettings/get(java.lang.String)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/MutableModuleSettings/get(java.lang.String)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/scan/MutableModuleSettings/get(java.lang.String)#org/sonar/api/batch/AnalysisMode/isIssues()
org/sonar/scanner/scan/MutableModuleSettings/get(java.lang.String)#java/util/Optional/ofNullable(java.lang.Object)
org/sonar/scanner/scan/MutableModuleSettings/get(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/MutableModuleSettings/get(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/sonar/scanner/scan/MutableModuleSettings/get(java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/MutableModuleSettings/get(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Iterator/remove()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/length()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#org/sonar/scanner/scan/ProjectReactorBuilder/getListFromProperty(java.util.Map,java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/isEmpty()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Set/iterator()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/startsWith(java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Map/entrySet()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Map$Entry/getKey()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Iterator/next()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/HashMap/HashMap()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#org/apache/commons/lang/ArrayUtils/reverse(java.lang.Object%5B%5D)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/substring(int)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Map$Entry/getValue()
org/sonar/scanner/scan/ProjectReactorBuilder/extractPropertiesByModule(java.util.Map,java.lang.String,java.lang.String,java.util.Map)#java/util/Arrays/sort(java.lang.Object%5B%5D)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#java/lang/Integer/intValue()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#java/lang/StringBuilder/append(int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/expectedMessage(java.lang.String,java.lang.String,java.lang.String,int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#javax/xml/stream/Location/getLineNumber()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#java/lang/StringBuilder/toString()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#java/lang/Integer/valueOf(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)#org/codehaus/staxmate/in/SMInputCursor/getCursorLocation()
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonar/scanner/bootstrap/ScannerWsClient/failIfUnauthorized(org.sonarqube.ws.client.WsResponse)
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonar/api/utils/log/Profiler/createIfDebug(org.sonar.api.utils.log.Logger)
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonar/api/utils/log/Profiler/start()
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonar/scanner/bootstrap/GlobalAnalysisMode/isMediumTest()
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonar/api/utils/log/Profiler/stopDebug(java.lang.String)
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonarqube/ws/client/WsRequest/getMethod()
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#java/lang/Integer/valueOf(int)
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonarqube/ws/client/WsResponse/code()
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonarqube/ws/client/WsConnector/call(org.sonarqube.ws.client.WsRequest)
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonarqube/ws/client/WsClient/wsConnector()
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#org/sonarqube/ws/client/WsResponse/requestUrl()
org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/DefaultInputModule/definition()
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Collection/iterator()
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/utils/text/JsonWriter/beginObject()
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/children(org.sonar.api.batch.fs.InputModule)
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/bootstrap/ProjectDefinition/getKeyWithBranch()
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Iterator/next()
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/relativePath(org.sonar.api.batch.fs.InputModule)
org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/utils/text/JsonWriter/endObject()
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/internal/DefaultInputFile/getProjectRelativePath()
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/scan/filesystem/InputComponentStore/addToLanguageCache(org.sonar.api.batch.fs.internal.DefaultInputFile)
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#com/google/common/collect/Table/put(java.lang.Object,java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#com/google/common/collect/SetMultimap/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/filename()
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/internal/FileExtensionPredicate/getExtension(org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/internal/DefaultInputFile/moduleKey()
org/sonar/scanner/scan/filesystem/InputComponentStore/put(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/internal/DefaultInputFile/getModuleRelativePath()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/io/BufferedReader/close()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/SourcePublisher/writeSource(java.io.BufferedReader,java.io.OutputStream,int)
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/inputStream()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/charset()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/batchId()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/filesystem/InputComponentStore/allFilesToPublish()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/io/OutputStream/close()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/lines()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/next()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/io/InputStream/close()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/Iterable/iterator()
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/sonar/scanner/report/SourcePublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReportWriter/getSourceFile(int)
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/io/File/exists()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/nio/channels/FileLock/release()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/io/FileOutputStream/close()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/nio/channels/FileChannel/lock()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/io/File/getName()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#org/sonar/scanner/bootstrap/ScannerPluginJarExploder/newLibFilter()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#org/sonar/scanner/bootstrap/PluginFiles/createTempDir()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#org/apache/commons/io/FileUtils/moveDirectory(java.io.File,java.io.File)
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#org/sonar/core/util/FileUtils/deleteQuietly(java.io.File)
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#org/sonar/api/utils/ZipUtils/unzip(java.io.File,java.io.File,java.util.function.Predicate)
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/io/FileOutputStream/getChannel()
org/sonar/scanner/bootstrap/ScannerPluginJarExploder/unzipFile(java.io.File)#java/io/File/getParentFile()
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#org/sonar/scanner/storage/Storage/Storage(java.lang.String,com.persistit.Exchange)
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#com/google/common/base/Preconditions/checkState(boolean,java.lang.Object)
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#com/persistit/Volume/isOpened()
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#com/persistit/Exchange/setMaximumValueSize(int)
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/storage/Storages/createCache(java.lang.String)#com/persistit/Persistit/getExchange(com.persistit.Volume,java.lang.String,boolean)
org/sonar/scanner/task/TaskContainer/doAfterStart()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/task/TaskContainer/doAfterStart()#org/sonar/api/task/Task/execute()
org/sonar/scanner/task/TaskContainer/doAfterStart()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/task/TaskContainer/doAfterStart()#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/task/TaskContainer/doAfterStart()#java/util/Map/get(java.lang.Object)
org/sonar/scanner/task/TaskContainer/doAfterStart()#org/sonar/scanner/task/Tasks/definition(java.lang.String)
org/sonar/scanner/task/TaskContainer/doAfterStart()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/task/TaskContainer/doAfterStart()#org/sonar/scanner/task/TaskContainer/getComponentByType(java.lang.Class)
org/sonar/scanner/task/TaskContainer/doAfterStart()#org/apache/commons/lang/StringUtils/defaultIfEmpty(java.lang.String,java.lang.String)
org/sonar/scanner/task/TaskContainer/doAfterStart()#java/lang/StringBuilder/toString()
org/sonar/scanner/task/TaskContainer/doAfterStart()#java/util/Map/clear()
org/sonar/scanner/task/TaskContainer/doAfterStart()#org/sonar/api/task/TaskDefinition/taskClass()
org/sonar/scanner/sensor/DefaultSensorStorage/mergeCoverageLineMetric(org.sonar.api.batch.measure.Metric,java.lang.String,java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/sensor/DefaultSensorStorage/mergeCoverageLineMetric(org.sonar.api.batch.measure.Metric,java.lang.String,java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/sensor/DefaultSensorStorage/mergeCoverageLineMetric(org.sonar.api.batch.measure.Metric,java.lang.String,java.lang.String)#java/util/stream/Collectors/toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)
org/sonar/scanner/sensor/DefaultSensorStorage/mergeCoverageLineMetric(org.sonar.api.batch.measure.Metric,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/sensor/DefaultSensorStorage/mergeCoverageLineMetric(org.sonar.api.batch.measure.Metric,java.lang.String,java.lang.String)#java/util/stream/Stream/flatMap(java.util.function.Function)
org/sonar/scanner/sensor/DefaultSensorStorage/mergeCoverageLineMetric(org.sonar.api.batch.measure.Metric,java.lang.String,java.lang.String)#org/sonar/api/utils/KeyValueFormat/format(java.util.Map)
org/sonar/scanner/sensor/DefaultSensorStorage/mergeCoverageLineMetric(org.sonar.api.batch.measure.Metric,java.lang.String,java.lang.String)#java/util/stream/Stream/of(java.lang.Object%5B%5D)
org/sonar/scanner/sensor/DefaultSensorStorage/mergeCoverageLineMetric(org.sonar.api.batch.measure.Metric,java.lang.String,java.lang.String)#org/sonar/api/batch/measure/Metric/key()
org/sonar/scanner/sensor/DefaultSensorStorage/mergeCoverageLineMetric(org.sonar.api.batch.measure.Metric,java.lang.String,java.lang.String)#org/sonar/api/utils/KeyValueFormat/parseIntInt(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#java/io/Writer/append(char)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#java/util/TreeSet/iterator()
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#org/sonar/api/utils/System2/envVariables()
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#java/util/TreeSet/TreeSet(java.util.Collection)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#java/io/BufferedWriter/append(java.lang.CharSequence)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#java/util/Iterator/next()
org/sonar/scanner/report/AnalysisContextReportPublisher/writeEnvVariables(java.io.BufferedWriter)#java/util/Map/keySet()
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#java/nio/file/Path/startsWith(java.nio.file.Path)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/FileIndexer/accept(org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#java/nio/file/Path/normalize()
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/api/batch/fs/internal/DefaultInputModule/getBaseDir()
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/LanguageDetection/language(java.nio.file.Path,java.nio.file.Path)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/api/batch/fs/internal/DefaultInputFile/language()
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#java/nio/file/Path/toAbsolutePath()
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/FileIndexer$Progress/markAsIndexed(org.sonar.api.batch.fs.internal.DefaultInputFile)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/FileIndexer/getParentRelativePath(java.nio.file.Path)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/InputFileBuilder/checkMetadata(org.sonar.api.batch.fs.internal.DefaultInputFile)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#java/nio/file/Path/relativize(java.nio.file.Path)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/LanguageDetection/getForcedLanguage()
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/FileIndexer/indexFileAndParentDir(org.sonar.api.batch.fs.InputFile,java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#java/nio/file/Path/toRealPath(java.nio.file.LinkOption%5B%5D)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/FileIndexer$Progress/increaseExcludedByPatternsCount()
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/InputFileBuilder/create(org.sonar.api.batch.fs.InputFile$Type,java.nio.file.Path,java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer/indexFile(java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)#org/sonar/scanner/scan/filesystem/ExclusionFilters/accept(java.nio.file.Path,java.nio.file.Path,org.sonar.api.batch.fs.InputFile$Type)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#java/nio/file/Path/normalize()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#org/sonar/api/utils/log/Logger/error(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#java/nio/file/Path/resolve(java.nio.file.Path)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#org/apache/commons/lang/StringUtils/defaultIfBlank(java.lang.String,java.lang.String)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#org/sonar/scanner/bootstrap/GlobalTempFolderProvider/findSonarHome(org.sonar.scanner.bootstrap.GlobalProperties)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#org/sonar/scanner/bootstrap/GlobalTempFolderProvider/createTempFolder(java.nio.file.Path)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#java/nio/file/Path/toFile()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#java/nio/file/Path/isAbsolute()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#org/sonar/scanner/bootstrap/GlobalProperties/property(java.lang.String)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/provide(org.sonar.scanner.bootstrap.GlobalProperties)#org/sonar/api/utils/internal/DefaultTempFolder/DefaultTempFolder(java.io.File,boolean)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/scanner/sensor/DefaultSensorStorage/saveCoverageMetricInternal(org.sonar.api.batch.fs.InputFile,org.sonar.api.batch.measure.Metric,org.sonar.api.batch.sensor.measure.internal.DefaultMeasure)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/coverage/internal/DefaultCoverage/coveredConditions()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/coverage/internal/DefaultCoverage/conditionsByLine()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/coverage/internal/DefaultCoverage/coveredLines()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/coverage/internal/DefaultCoverage/hitsByLine()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/coverage/internal/DefaultCoverage/coveredConditionsByLine()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#java/lang/Integer/valueOf(int)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/coverage/internal/DefaultCoverage/conditions()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/fs/internal/DefaultInputFile/setPublished(boolean)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/coverage/internal/DefaultCoverage/linesToCover()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/DefaultMeasure()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/withValue(java.io.Serializable)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/scanner/sensor/DefaultSensorStorage/shouldSkipStorage(org.sonar.api.batch.fs.internal.DefaultInputFile)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/measure/internal/DefaultMeasure/forMetric(org.sonar.api.batch.measure.Metric)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/batch/sensor/coverage/internal/DefaultCoverage/inputFile()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.coverage.internal.DefaultCoverage)#org/sonar/api/utils/KeyValueFormat/format(java.util.Map)
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#org/sonar/core/util/CloseableIterator/hasNext()
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#org/sonar/api/batch/fs/internal/DefaultInputFile/status()
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#org/sonar/scanner/scan/branch/BranchConfiguration/isShortOrPullRequest()
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#org/sonar/core/util/CloseableIterator/close()
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReportReader/readComponentIssues(int)
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/isRoot(org.sonar.api.batch.fs.InputModule)
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#org/sonar/api/batch/fs/internal/DefaultInputFile/isPublished()
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#org/sonar/api/batch/fs/internal/DefaultInputComponent/batchId()
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#java/util/Collection/isEmpty()
org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setBranchType(org.sonar.scanner.protocol.output.ScannerReport$Metadata$BranchType)
org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/scan/branch/BranchConfiguration/branchName()
org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/scan/branch/BranchConfiguration/branchTarget()
org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setBranchName(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/scan/branch/BranchConfiguration/pullRequestKey()
org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setMergeBranchName(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/report/MetadataPublisher/toProtobufBranchType(org.sonar.scanner.scan.branch.BranchType)
org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setPullRequestKey(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/addBranchInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/scan/branch/BranchConfiguration/branchType()
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#org/sonar/batch/bootstrapper/LoggingConfiguration/getSubstitutionVariables()
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#java/util/Map/get(java.lang.Object)
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#org/sonar/batch/bootstrapper/LoggingConfiguration/getLogOutput()
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#ch/qos/logback/classic/Level/toLevel(java.lang.String)
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#org/slf4j/LoggerFactory/getLogger(java.lang.String)
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#org/apache/commons/lang/StringUtils/defaultIfBlank(java.lang.String,java.lang.String)
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#ch/qos/logback/classic/Logger/addAppender(ch.qos.logback.core.Appender)
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#ch/qos/logback/classic/Logger/getAppender(java.lang.String)
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#org/sonar/batch/bootstrapper/LoggingConfigurator/createAppender(org.sonar.batch.bootstrapper.LogOutput)
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#ch/qos/logback/classic/Logger/setLevel(ch.qos.logback.classic.Level)
org/sonar/batch/bootstrapper/LoggingConfigurator/setCustomRootAppender(org.sonar.batch.bootstrapper.LoggingConfiguration)#ch/qos/logback/classic/Logger/detachAndStopAllAppenders()
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/io/File/exists()
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/io/File/toPath()
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/io/File/getAbsolutePath()
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/nio/file/Files/move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption%5B%5D)
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#org/sonar/api/utils/log/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#org/sonar/api/utils/log/Logger/warn(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/PluginFiles/moveFile(java.io.File,java.io.File)#java/io/File/renameTo(java.io.File)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/api/batch/fs/InputFile/absolutePath()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/util/Iterator/hasNext()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeCpdTextBlocks(int,java.lang.Iterable)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/util/Iterator/next()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/api/batch/fs/internal/DefaultInputFile/batchId()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/api/batch/fs/InputFile/relativePath()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/util/Collection/iterator()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/lang/StringBuilder/toString()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReportWriter/hasComponentData(org.sonar.scanner.protocol.output.FileStructure$Domain,int)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/duplications/index/CloneIndex/insert(org.sonar.duplications.block.Block)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/scanner/cpd/CpdSettings/isCrossProjectDuplicationEnabled()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/scanner/report/ReportPublisher/getWriter()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock/newBuilder()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/util/Collection/isEmpty()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/util/Collection/stream()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)#java/util/stream/Collectors/toList()
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#java/util/ArrayList/ArrayList()
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#org/sonar/core/util/CloseableIterator/hasNext()
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/protocol/output/ScannerReportReader/readComponentDuplications(int)
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#org/sonar/api/batch/fs/InputFile/key()
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#org/sonar/core/util/CloseableIterator/next()
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#org/sonar/core/util/CloseableIterator/close()
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#java/util/List/add(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/protocol/output/ScannerReport$Component/getRef()
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#org/sonar/scanner/mediumtest/TaskResult/getReportReader()
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/mediumtest/TaskResult/duplicationsFor(org.sonar.api.batch.fs.InputFile)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputComponent/batchId()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputComponent/isFile()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/Collectors/toList()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/api/batch/fs/internal/DefaultInputComponent/key()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Iterator/next()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReport$Measure/newBuilder()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/Collection/iterator()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/measure/MeasureCache/byComponentKey(java.lang.String)
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/MeasuresPublisher/updateTestExecutionFromTestPlan(org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/scan/filesystem/InputComponentStore/all()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/util/stream/StreamSupport/stream(java.util.Spliterator,boolean)
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/Iterable/spliterator()
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/report/MeasuresPublisher/updateCoverageFromLineData(org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeComponentMeasures(int,java.lang.Iterable)
org/sonar/scanner/report/MeasuresPublisher/publish(org.sonar.scanner.protocol.output.ScannerReportWriter)#java/lang/Iterable/iterator()
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/DefaultInputModule/getWorkDir()
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Iterator/next()
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Collection/iterator()
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/children(org.sonar.api.batch.fs.InputModule)
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/WorkDirectoriesInitializer/mkdirsAllWorkingDirs(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute%5B%5D)
org/sonar/scanner/scm/ScmConfiguration/autodetection()#java/util/Iterator/hasNext()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#org/sonar/api/batch/scm/ScmProvider/key()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scm/ScmConfiguration/autodetection()#java/util/Map/values()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#java/util/Iterator/next()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#java/nio/file/Path/toFile()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#org/sonar/api/batch/scm/ScmProvider/supports(java.io.File)
org/sonar/scanner/scm/ScmConfiguration/autodetection()#java/util/Collection/iterator()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#java/lang/StringBuilder/toString()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#org/sonar/api/batch/fs/internal/DefaultInputModule/getBaseDir()
org/sonar/scanner/scm/ScmConfiguration/autodetection()#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#org/sonar/scanner/repository/DefaultQualityProfileLoader/throwingMerger()
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#org/sonarqube/ws/client/WsResponse/contentStream()
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#org/sonarqube/ws/Qualityprofiles$SearchWsResponse/parseFrom(java.io.InputStream)
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#java/util/List/stream()
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#java/io/InputStream/close()
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#java/util/function/Function/identity()
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#org/sonarqube/ws/client/GetRequest/GetRequest(java.lang.String)
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#java/util/stream/Collectors/toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)
org/sonar/scanner/repository/DefaultQualityProfileLoader/call(java.lang.String)#org/sonarqube/ws/Qualityprofiles$SearchWsResponse/getProfilesList()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#org/sonarqube/ws/Settings$Setting/getKey()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/Iterator/hasNext()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/lang/StringBuilder/append(int)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/List/stream()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/Iterator/next()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/Set/iterator()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/List/add(java.lang.Object)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#org/sonarqube/ws/Settings$FieldValues$Value/getValue()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/Map$Entry/getValue()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/List/iterator()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/ArrayList/ArrayList()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/Map$Entry/getKey()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/stream/Collectors/joining(java.lang.CharSequence)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#org/sonarqube/ws/Settings$FieldValues/getFieldValuesList()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/util/Map/entrySet()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#org/sonarqube/ws/Settings$Setting/getFieldValues()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/lang/StringBuilder/toString()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/convertPropertySetToProps(java.util.Map,org.sonarqube.ws.Settings$Setting)#java/lang/String/valueOf(int)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/profiles/RulesProfile/setName(java.lang.String)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/rules/Rule/setConfigKey(java.lang.String)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/batch/rule/ActiveRule/internalKey()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/batch/rule/ActiveRule/ruleKey()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#java/util/Iterator/hasNext()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#java/util/Map$Entry/getKey()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/profiles/RulesProfile/activateRule(org.sonar.api.rules.Rule,org.sonar.api.rules.RulePriority)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/batch/rule/ActiveRule/templateRuleKey()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/profiles/RulesProfile/setLanguage(java.lang.String)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/rules/ActiveRule/setParameter(java.lang.String,java.lang.String)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/batch/rule/ActiveRules/findByLanguage(java.lang.String)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#java/util/Iterator/next()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/scanner/rule/QProfile/getName()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#java/util/Set/iterator()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/profiles/RulesProfile/RulesProfile()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/rule/RuleKey/repository()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#java/util/Map$Entry/getValue()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#java/util/Map/entrySet()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/scanner/rule/QProfile/getLanguage()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/rules/Rule/setTemplate(org.sonar.api.rules.Rule)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/rule/RuleKey/rule()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/rules/RulePriority/valueOf(java.lang.String)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/batch/rule/ActiveRule/severity()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/rules/Rule/create(java.lang.String,java.lang.String)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/rules/Rule/createParameter(java.lang.String)
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#java/util/Collection/iterator()
org/sonar/scanner/rule/RulesProfileProvider/select(org.sonar.scanner.rule.QProfile,org.sonar.api.batch.rule.ActiveRules)#org/sonar/api/batch/rule/ActiveRule/params()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$Symbol$Builder/setDeclaration(org.sonar.scanner.protocol.output.ScannerReport$TextRange)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/api/batch/fs/TextPointer/lineOffset()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#java/util/Iterator/hasNext()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#java/util/Map$Entry/getKey()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$Symbol$Builder/addReference(org.sonar.scanner.protocol.output.ScannerReport$TextRange)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setEndLine(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$Symbol$Builder/build()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#java/util/Map$Entry/getValue()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/api/batch/fs/TextRange/start()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setStartLine(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#java/util/Iterator/next()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/clear()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/api/batch/fs/TextPointer/line()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/build()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setStartOffset(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#java/util/Set/iterator()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/api/batch/fs/TextRange/end()
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setEndOffset(int)
org/sonar/scanner/sensor/DefaultSensorStorage/lambda$store$1(org.sonar.scanner.protocol.output.ScannerReport$Symbol$Builder,org.sonar.scanner.protocol.output.ScannerReport$TextRange$Builder,java.util.Map$Entry)#org/sonar/scanner/protocol/output/ScannerReport$Symbol$Builder/clear()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/inputFile(org.sonar.api.batch.fs.FilePredicate)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#java/util/List/add(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#java/lang/Integer/valueOf(int)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FileSystem/predicates()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMInputCursor/getCursorLocation()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/language()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseTestCase(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.test.MutableTestPlan)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/FilePredicates/hasPath(java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/type()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMInputCursor/getNext()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/fs/InputFile/absolutePath()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/codehaus/staxmate/in/SMInputCursor/childElementCursor()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#com/google/common/base/Preconditions/checkState(boolean,java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#javax/xml/stream/Location/getLineNumber()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/api/batch/sensor/SensorContext/fileSystem()
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericTestExecutionReportParser/parseFiles(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.SensorContext)#org/sonar/scanner/deprecated/test/TestPlanBuilder/loadPerspective(java.lang.Class,org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/duplications/block/Block/getStartUnit()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock$Builder/setStartTokenIndex(int)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock$Builder/setHash(java.lang.String)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock$Builder/build()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock$Builder/setEndTokenIndex(int)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/duplications/block/Block/getEndLine()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock$Builder/setEndLine(int)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/duplications/block/Block/getStartLine()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/duplications/block/Block/getEndUnit()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock$Builder/clear()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/scanner/protocol/output/ScannerReport$CpdTextBlock$Builder/setStartLine(int)
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/duplications/block/ByteArray/toHexString()
org/sonar/scanner/cpd/index/SonarCpdBlockIndex/lambda$insert$0(org.sonar.scanner.protocol.output.ScannerReport$CpdTextBlock$Builder,org.sonar.duplications.block.Block)#org/sonar/duplications/block/Block/getBlockHash()
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#org/sonar/api/batch/fs/InputDir/relativePath()
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#java/lang/StringBuilder/toString()
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#org/sonar/api/batch/fs/internal/DefaultInputFile/getModuleRelativePath()
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#java/lang/Object/getClass()
org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/relativePath(org.sonar.api.batch.fs.InputModule)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/sonar/api/utils/log/Profiler/createIfDebug(org.sonar.api.utils.log.Logger)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/sonarqube/ws/client/WsResponse/contentReader()
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/sonarqube/ws/client/GetRequest/GetRequest(java.lang.String)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/apache/commons/io/IOUtils/toString(java.io.Reader)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/sonar/api/utils/log/Profiler/startDebug(java.lang.String)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/sonar/scanner/util/ScannerUtils/encodeForUrl(java.lang.String)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/sonar/api/utils/log/Loggers/get(java.lang.Class)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/sonar/api/utils/log/Profiler/addContext(java.lang.String,java.lang.Object)
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#java/lang/Object/getClass()
org/sonar/scanner/issue/tracking/DefaultServerLineHashesLoader/loadHashesFromWs(java.lang.String)#org/sonar/api/utils/log/Profiler/stopDebug()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/api/batch/fs/internal/DefaultInputFile/key()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/duplications/java/JavaStatementBuilder/build()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/util/Iterator/hasNext()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/duplications/statement/StatementChunker/chunk(org.sonar.duplications.token.TokenQueue)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/api/batch/fs/InputFile/charset()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/lang/StringBuilder/toString()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/api/batch/fs/InputFile/file()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/io/Reader/close()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/duplications/block/BlockChunker/chunk(java.lang.String,java.util.List)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/duplications/token/TokenChunker/chunk(java.io.Reader)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/duplications/java/JavaTokenProducer/build()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/duplications/block/BlockChunker/BlockChunker(int)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.nio.charset.Charset)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/util/Iterator/next()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/scanner/cpd/index/SonarCpdBlockIndex/insert(org.sonar.api.batch.fs.InputFile,java.util.Collection)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/io/InputStream/close()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/lang/Iterable/iterator()
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/cpd/JavaCpdBlockIndexerSensor/createIndex(java.lang.Iterable)#org/sonar/api/batch/fs/InputFile/inputStream()
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/util/Optional/get()
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/util/stream/Stream/findFirst()
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/lang/System/getenv(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/util/stream/Stream/of(java.lang.Object%5B%5D)
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/util/Optional/map(java.util.function.Function)
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#org/sonar/api/config/Configuration/get(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/lang/System/getProperty(java.lang.String)
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/PluginFiles/locateHomeDir(org.sonar.api.config.Configuration)#java/util/Optional/orElse(java.lang.Object)
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/repository/ProjectRepositories/settings(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Iterator/hasNext()
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map$Entry/getKey()
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/scanner/repository/ProjectRepositories/moduleExists(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map/putAll(java.util.Map)
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/parent(org.sonar.api.batch.fs.InputModule)
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Set/iterator()
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/DefaultInputModule/properties()
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map$Entry/getValue()
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map/entrySet()
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Iterator/next()
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/HashMap/HashMap()
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#java/util/Map/containsKey(java.lang.Object)
org/sonar/scanner/report/AnalysisContextReportPublisher/collectModuleSpecificProps(org.sonar.api.batch.fs.internal.DefaultInputModule)#org/sonar/api/batch/fs/internal/DefaultInputModule/getKeyWithBranch()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/api/batch/fs/InputComponent/key()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/scan/filesystem/InputComponentStore/getByKey(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/duplications/index/ClonePart/getEndLine()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#java/util/Iterator/hasNext()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/api/utils/log/Logger/warn(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$Duplicate$Builder/build()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$Duplication$Builder/build()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/duplications/index/CloneGroup/getCloneParts()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#java/util/List/iterator()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#java/lang/StringBuilder/toString()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/newBuilder()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/api/batch/fs/internal/DefaultInputComponent/batchId()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$Duplication$Builder/addDuplicate(org.sonar.scanner.protocol.output.ScannerReport$Duplicate)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/duplications/index/ClonePart/getResourceId()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#java/lang/StringBuilder/append(int)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/duplications/index/ClonePart/getStartLine()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$Duplicate$Builder/clear()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$Duplication$Builder/clear()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/duplications/index/CloneGroup/getOriginPart()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setStartLine(int)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#java/util/Iterator/next()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$Duplicate$Builder/setOtherFileRef(int)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$Duplicate$Builder/setRange(org.sonar.scanner.protocol.output.ScannerReport$TextRange)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/build()
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$Duplication$Builder/setOriginPosition(org.sonar.scanner.protocol.output.ScannerReport$TextRange)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/duplications/index/ClonePart/equals(java.lang.Object)
org/sonar/scanner/cpd/CpdExecutor/toReportDuplication(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Duplication$Builder,org.sonar.scanner.protocol.output.ScannerReport$Duplicate$Builder,org.sonar.duplications.index.CloneGroup)#org/sonar/scanner/protocol/output/ScannerReport$TextRange$Builder/setEndLine(int)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/category(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/description(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/onQualifiers(java.lang.String,java.lang.String%5B%5D)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/properties()#org/sonar/api/config/PropertyDefinition/builder(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/properties()#com/google/common/collect/ImmutableList/of(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/name(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/deprecatedKey(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/multiValues(boolean)
org/sonar/scanner/genericcoverage/GenericCoverageSensor/properties()#org/sonar/api/config/PropertyDefinition$Builder/build()
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#org/sonar/api/utils/log/Logger/debug(java.lang.String,java.lang.Object)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/util/jar/Pack200/newUnpacker()
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/util/jar/JarOutputStream/JarOutputStream(java.io.OutputStream)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/util/jar/Pack200$Unpacker/unpack(java.io.InputStream,java.util.jar.JarOutputStream)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#org/apache/commons/io/FileUtils/openInputStream(java.io.File)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/util/jar/JarOutputStream/close()
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#org/apache/commons/io/FileUtils/openOutputStream(java.io.File)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/io/InputStream/close()
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
org/sonar/scanner/bootstrap/PluginFiles/unpack200(java.lang.String,java.io.File)#org/sonar/scanner/bootstrap/PluginFiles/newTempFile()
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/utils/MessageException/of(java.lang.String,java.lang.Throwable)
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/batch/bootstrap/ProjectBuilder/build(org.sonar.api.batch.bootstrap.ProjectBuilder$Context)
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/batch/bootstrap/internal/ProjectBuilderContext/ProjectBuilderContext(org.sonar.api.batch.bootstrap.ProjectReactor)
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/scanner/scan/ProjectBuildersExecutor/getDescription(org.sonar.api.batch.bootstrap.ProjectBuilder)
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/utils/log/Profiler/stopInfo()
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/ProjectBuildersExecutor/execute(org.sonar.api.batch.bootstrap.ProjectReactor)#org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#org/sonar/api/utils/System2/properties()
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/util/Properties/getProperty(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/io/BufferedWriter/append(java.lang.CharSequence)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/util/Iterator/next()
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/lang/String/startsWith(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/util/TreeSet/TreeSet(java.util.Collection)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/util/Properties/stringPropertyNames()
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/io/Writer/append(char)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/io/BufferedWriter/write(java.lang.String)
org/sonar/scanner/report/AnalysisContextReportPublisher/writeSystemProps(java.io.BufferedWriter)#java/util/TreeSet/iterator()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#org/sonar/api/utils/dag/DirectAcyclicGraph/add(java.lang.Object,java.lang.Object%5B%5D)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#org/sonar/api/utils/dag/DirectAcyclicGraph/DirectAcyclicGraph(java.lang.Object%5B%5D)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#java/util/Iterator/next()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/completePhaseDependencies(org.sonar.api.utils.dag.DirectAcyclicGraph,java.lang.Object)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#java/lang/Object/getClass()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#org/sonar/api/utils/dag/DirectAcyclicGraph/sort()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#java/util/Iterator/hasNext()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/getDependents(java.lang.Object)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#java/util/stream/Collectors/toList()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#java/util/List/stream()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#java/util/List/iterator()
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/getDependencies(java.lang.Object)
org/sonar/scanner/bootstrap/ScannerExtensionDictionnary/sort(java.util.Collection)#java/util/Collection/iterator()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/utils/text/JsonWriter/prop(java.lang.String,java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/batch/fs/InputFile$Status/name()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/status()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/scanner/scan/report/JSONReport/writeJsonModuleComponents(org.sonar.api.utils.text.JsonWriter,org.sonar.api.batch.fs.internal.DefaultInputModule)
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#java/lang/Iterable/iterator()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/utils/text/JsonWriter/endArray()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/scanner/scan/report/JSONReport/getModule(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/batch/fs/InputDir/relativePath()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/batch/fs/internal/DefaultInputModule/definition()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/utils/text/JsonWriter/endObject()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/core/component/ComponentKeys/createEffectiveKey(java.lang.String,org.sonar.api.batch.fs.InputPath)
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/utils/text/JsonWriter/name(java.lang.String)
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/scanner/scan/filesystem/InputComponentStore/allFilesToPublish()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/utils/text/JsonWriter/beginArray()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/batch/fs/internal/DefaultInputFile/relativePath()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/utils/text/JsonWriter/beginObject()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/scanner/scan/filesystem/InputComponentStore/allDirs()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#org/sonar/api/batch/bootstrap/ProjectDefinition/getKeyWithBranch()
org/sonar/scanner/scan/report/JSONReport/writeJsonComponents(org.sonar.api.utils.text.JsonWriter)#java/util/Iterator/next()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/util/ProgressReport/stop(java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/FileIndexer$Progress/count()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/FileIndexer$Progress/FileIndexer$Progress(org.sonar.scanner.scan.filesystem.FileIndexer,org.sonar.scanner.scan.filesystem.FileIndexer$1)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/util/concurrent/TimeUnit/toMillis(long)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/util/ProgressReport/ProgressReport(java.lang.String,long)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/lang/Runtime/getRuntime()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/lang/Math/max(int,int)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/lang/StringBuilder/append(int)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#com/google/common/util/concurrent/ThreadFactoryBuilder/setNameFormat(java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/sources()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/util/concurrent/Executors/newFixedThreadPool(int,java.util.concurrent.ThreadFactory)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/lang/Integer/valueOf(int)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/ExclusionFilters/prepare()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/ExclusionFilters/hasPattern()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#com/google/common/util/concurrent/ThreadFactoryBuilder/setDaemon(boolean)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#com/google/common/util/concurrent/ThreadFactoryBuilder/ThreadFactoryBuilder()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/util/ProgressReport/start(java.lang.String)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/FileIndexer/pluralizeFiles(int)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/FileIndexer/waitForTasksToComplete(org.sonar.scanner.util.ProgressReport)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#com/google/common/util/concurrent/ThreadFactoryBuilder/build()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/lang/Runtime/availableProcessors()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/FileIndexer/indexFiles(java.util.List,org.sonar.api.batch.fs.InputFile$Type,org.sonar.scanner.scan.filesystem.FileIndexer$Progress)
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/FileIndexer$Progress/excludedByPatternsCount()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/filesystem/FileIndexer/index()#org/sonar/scanner/scan/filesystem/ModuleFileSystemInitializer/tests()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/Iterator/hasNext()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#org/sonar/core/platform/PluginInfo/PluginInfo(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/Collection/stream()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/Set/iterator()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/function/Function/identity()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/List/iterator()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#org/sonar/scanner/bootstrap/PluginInstaller/installLocals()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/Map/entrySet()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#org/sonar/core/platform/PluginLoader/load(java.util.Map)
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#org/sonar/scanner/bootstrap/ScannerPlugin/ScannerPlugin(java.lang.String,long,org.sonar.core.platform.PluginInfo)
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/Map$Entry/getKey()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/HashMap/HashMap(java.util.Map)
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#org/sonar/scanner/bootstrap/PluginInstaller/installRemotes()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/Map/values()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/Iterator/next()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#org/sonar/core/platform/PluginInfo/getKey()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/HashMap/HashMap()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/lang/Long/longValue()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/stream/Collectors/toMap(java.util.function.Function,java.util.function.Function)
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#org/sonar/scanner/bootstrap/ScannerPluginRepository/logPlugins()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/lang/Object/getClass()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/util/Map$Entry/getValue()
org/sonar/scanner/bootstrap/ScannerPluginRepository/start()#java/lang/Class/getClassLoader()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getResolution()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/core/issue/tracking/Tracking/getMatchedRaws()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#java/util/Iterator/hasNext()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getStatus()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#java/util/Map$Entry/getKey()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/Constants$Severity/name()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#java/util/Set/iterator()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#java/util/Date/Date(long)
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#java/util/Map$Entry/getValue()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getAssigneeLogin()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#java/util/Map/entrySet()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/issue/tracking/TrackedIssue/setResolution(java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/issue/tracking/TrackedIssue/setNew(boolean)
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getKey()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getCreationDate()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/issue/tracking/TrackedIssue/setAssignee(java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/issue/tracking/TrackedIssue/setStatus(java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/hasResolution()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#java/util/Iterator/next()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/issue/tracking/TrackedIssue/setSeverity(java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getSeverity()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/issue/tracking/ServerIssueFromWs/getDto()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#java/util/Collection/add(java.lang.Object)
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/hasAssigneeLogin()
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/issue/tracking/TrackedIssue/setCreationDate(java.util.Date)
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/issue/tracking/TrackedIssue/setKey(java.lang.String)
org/sonar/scanner/issue/tracking/LocalIssueTracking/mergeMatched(org.sonar.core.issue.tracking.Tracking,java.util.Collection,java.util.Collection)#org/sonar/scanner/protocol/input/ScannerInput$ServerIssue/getManualSeverity()
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#org/sonar/api/batch/bootstrap/ProjectDefinition/getSubProjects()
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#java/util/Iterator/next()
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#java/lang/String/equals(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#java/util/List/iterator()
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#org/sonar/api/batch/bootstrap/ProjectDefinition/getKey()
org/sonar/scanner/scan/ProjectReactorBuilder/checkUniquenessOfChildKey(org.sonar.api.batch.bootstrap.ProjectDefinition,org.sonar.api.batch.bootstrap.ProjectDefinition)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#org/sonar/scanner/issue/ignore/pattern/PatternDecoder/checkDoubleRegexpLineConstraints(java.lang.String,java.lang.String%5B%5D)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#java/util/ArrayList/ArrayList()
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#org/sonar/api/config/Configuration/getStringArray(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#org/sonar/scanner/issue/ignore/pattern/PatternDecoder/checkWholeFileRegexp(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/getSettings()
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#org/sonar/scanner/issue/ignore/pattern/BlockIssuePattern/BlockIssuePattern(java.lang.String,java.lang.String)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#org/apache/commons/lang/StringUtils/join(java.lang.Object%5B%5D,java.lang.String)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#java/util/List/add(java.lang.Object)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#java/lang/StringBuilder/toString()
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#com/google/common/base/Strings/nullToEmpty(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#org/sonar/api/config/Configuration/get(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#java/util/Collections/unmodifiableList(java.util.List)
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/issue/ignore/pattern/IssueExclusionPatternInitializer/loadFileContentPatterns()#java/util/Optional/orElse(java.lang.Object)
org/sonar/scanner/storage/StoragesManager/initPersistit()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/storage/StoragesManager/initPersistit()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/sonar/scanner/storage/StoragesManager/initPersistit()#org/sonar/api/utils/TempFolder/newDir(java.lang.String)
org/sonar/scanner/storage/StoragesManager/initPersistit()#com/persistit/Persistit/setPersistitLogger(com.persistit.logging.PersistitLogger)
org/sonar/scanner/storage/StoragesManager/initPersistit()#com/persistit/Persistit/setProperties(java.util.Properties)
org/sonar/scanner/storage/StoragesManager/initPersistit()#org/slf4j/LoggerFactory/getLogger(java.lang.String)
org/sonar/scanner/storage/StoragesManager/initPersistit()#java/util/Properties/Properties()
org/sonar/scanner/storage/StoragesManager/initPersistit()#com/persistit/Persistit/Persistit()
org/sonar/scanner/storage/StoragesManager/initPersistit()#java/io/File/getAbsolutePath()
org/sonar/scanner/storage/StoragesManager/initPersistit()#com/persistit/Persistit/initialize()
org/sonar/scanner/storage/StoragesManager/initPersistit()#com/persistit/logging/Slf4jAdapter/Slf4jAdapter(org.slf4j.Logger)
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeComponentDuplications(int,java.lang.Iterable)
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#org/sonar/api/batch/fs/internal/DefaultInputComponent/batchId()
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#org/sonar/api/utils/log/Logger/warn(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/lang/StringBuilder/append(int)
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/util/List/stream()
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/util/List/size()
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/util/stream/Stream/limit(long)
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/lang/StringBuilder/toString()
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#org/sonar/scanner/report/ReportPublisher/getWriter()
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#org/sonar/scanner/cpd/CpdExecutor$1/CpdExecutor$1(org.sonar.scanner.cpd.CpdExecutor,org.sonar.api.batch.fs.internal.DefaultInputComponent)
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/cpd/CpdExecutor/saveDuplications(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.List)#java/lang/Object/getClass()
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#org/sonar/scanner/scan/report/JSONReport/writeJson(java.io.Writer)
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#org/slf4j/Logger/info(java.lang.String,java.lang.Object)
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/io/FileOutputStream/close()
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#java/io/File/getAbsolutePath()
org/sonar/scanner/scan/report/JSONReport/exportResults(java.lang.String)#org/sonar/api/batch/fs/FileSystem/workDir()
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#org/sonar/scanner/issue/ignore/pattern/IssuePattern/IssuePattern(java.lang.String,java.lang.String,java.util.Set)
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#org/sonar/api/config/Configuration/getStringArray(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#org/sonar/api/config/Configuration/get(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#org/apache/commons/lang/StringUtils/join(java.lang.Object%5B%5D,java.lang.String)
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#java/util/List/add(java.lang.Object)
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#java/lang/StringBuilder/toString()
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/getMulticriteriaConfigurationKey()
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#java/util/ArrayList/ArrayList()
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#com/google/common/base/MoreObjects/firstNonNull(java.lang.Object,java.lang.Object)
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#org/sonar/scanner/issue/ignore/pattern/PatternDecoder/decodeRangeOfLines(java.lang.String)
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#org/sonar/scanner/issue/ignore/pattern/PatternDecoder/checkRegularLineConstraints(java.lang.String,java.lang.String%5B%5D)
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/issue/ignore/pattern/AbstractPatternInitializer/initPatterns()#java/util/Optional/orElse(java.lang.Object)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#org/codehaus/staxmate/in/SMInputCursor/getAttrValue(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/StringBuilder/append(int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#javax/xml/stream/Location/getLineNumber()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#org/codehaus/staxmate/in/SMInputCursor/getCursorLocation()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#org/codehaus/staxmate/in/SMInputCursor/getLocalName()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setScmRevisionId(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/report/MetadataPublisher/toSonarQubePath(java.nio.file.Path)
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/scm/ScmConfiguration/provider()
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/api/batch/fs/internal/DefaultInputModule/getBaseDir()
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/api/batch/scm/ScmProvider/revisionId(java.nio.file.Path)
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/api/batch/scm/ScmProvider/relativePathFromScmRoot(java.nio.file.Path)
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#org/sonar/scanner/protocol/output/ScannerReport$Metadata$Builder/setRelativePathFromScmRoot(java.lang.String)
org/sonar/scanner/report/MetadataPublisher/addScmInformation(org.sonar.scanner.protocol.output.ScannerReport$Metadata$Builder)#java/lang/UnsupportedOperationException/getMessage()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/writeLinks(org.sonar.api.batch.fs.InputComponent,org.sonar.scanner.protocol.output.ScannerReport$Component$Builder)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setProjectRelativePath(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputComponent/isFile()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setPath(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/getProjectRelativePath(org.sonar.api.batch.fs.internal.DefaultInputComponent)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setLines(int)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/writeVersion(org.sonar.api.batch.fs.internal.DefaultInputModule,org.sonar.scanner.protocol.output.ScannerReport$Component$Builder)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/getDescription(org.sonar.api.batch.fs.internal.DefaultInputModule)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/getName(org.sonar.api.batch.fs.internal.DefaultInputModule)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setRef(int)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputFile/lines()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/getType(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setStatus(org.sonar.scanner.protocol.output.ScannerReport$Component$FileStatus)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/convert(org.sonar.api.batch.fs.InputFile$Status)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setLanguage(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputComponent/batchId()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/Iterator/hasNext()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/shouldSkipComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent,java.util.Collection)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputFile/status()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/getLanguageKey(org.sonar.api.batch.fs.InputFile)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/InputComponentTree/getChildren(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/Collection/stream()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/stream/Collectors/toList()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputFile/type()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/addChildRef(int)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/Iterator/next()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/api/batch/fs/internal/DefaultInputModule/key()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setIsTest(boolean)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/report/ComponentsPublisher/getPath(org.sonar.api.batch.fs.InputComponent)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeComponent(org.sonar.scanner.protocol.output.ScannerReport$Component)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setName(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setType(org.sonar.scanner.protocol.output.ScannerReport$Component$ComponentType)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component/newBuilder()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#java/util/Collection/iterator()
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setDescription(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/setKey(java.lang.String)
org/sonar/scanner/report/ComponentsPublisher/recursiveWriteComponent(org.sonar.api.batch.fs.internal.DefaultInputComponent)#org/sonar/scanner/protocol/output/ScannerReport$Component$Builder/build()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/api/test/MutableTestCase/doesCover()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/scanner/protocol/output/ScannerReport$Test$Builder/setStatus(org.sonar.scanner.protocol.output.ScannerReport$Test$TestStatus)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/api/test/MutableTestCase/status()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/api/test/MutableTestCase/message()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/scanner/protocol/output/ScannerReport$Test$Builder/setDurationInMs(long)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/scanner/protocol/output/ScannerReport$Test$Builder/setMsg(java.lang.String)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/scanner/protocol/output/ScannerReport$Test$Builder/setName(java.lang.String)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#java/lang/Long/longValue()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/api/test/MutableTestCase/stackTrace()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/scanner/protocol/output/ScannerReport$Test$Builder/clear()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/scanner/protocol/output/ScannerReport$Test$TestStatus/valueOf(java.lang.String)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/api/test/TestCase$Status/name()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/scanner/protocol/output/ScannerReport$Test$Builder/build()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/api/test/MutableTestCase/durationInMs()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/api/test/MutableTestCase/name()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufTest(org.sonar.scanner.protocol.output.ScannerReport$Test$Builder,java.util.Set,org.sonar.api.test.MutableTestCase)#org/sonar/scanner/protocol/output/ScannerReport$Test$Builder/setStacktrace(java.lang.String)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/api/batch/fs/internal/DefaultInputFile/key()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#java/lang/Integer/intValue()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/api/test/CoverageBlock/testable()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/api/batch/fs/internal/DefaultInputComponent/batchId()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile$Builder/clear()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile$Builder/build()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/api/test/MutableTestPlan/testCasesByName(java.lang.String)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#java/util/Iterator/next()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile$Builder/addCoveredLine(int)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#java/lang/Iterable/iterator()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/deprecated/test/DefaultTestable/inputFile()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$Builder/clear()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$Builder/build()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#java/util/List/iterator()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/api/test/CoverageBlock/lines()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/api/test/MutableTestCase/coverageBlocks()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/scan/filesystem/InputComponentStore/getByKey(java.lang.String)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#java/util/Iterator/hasNext()
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$Builder/addCoveredFile(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$CoveredFile$Builder/setFileRef(int)
org/sonar/scanner/report/TestExecutionAndCoveragePublisher/toProtobufCoverageDetails(org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$Builder,org.sonar.scanner.protocol.output.ScannerReport$CoverageDetail$CoveredFile$Builder,org.sonar.api.test.MutableTestPlan,java.lang.String)#org/sonar/scanner/protocol/output/ScannerReport$CoverageDetail$Builder/setTestName(java.lang.String)
org/sonar/scanner/storage/Storages/stop()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/storage/Storages/stop()#java/util/Iterator/hasNext()
org/sonar/scanner/storage/Storages/stop()#java/util/Iterator/next()
org/sonar/scanner/storage/Storages/stop()#java/util/Set/iterator()
org/sonar/scanner/storage/Storages/stop()#java/util/Map/clear()
org/sonar/scanner/storage/Storages/stop()#com/persistit/Persistit/releaseExchange(com.persistit.Exchange)
org/sonar/scanner/storage/Storages/stop()#java/util/Map$Entry/getValue()
org/sonar/scanner/storage/Storages/stop()#com/persistit/Volume/close()
org/sonar/scanner/storage/Storages/stop()#java/util/Map/entrySet()
org/sonar/scanner/storage/Storages/stop()#com/persistit/Volume/delete()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#org/sonar/scanner/util/ProgressReport/stop(java.lang.String)
org/sonar/scanner/issue/tracking/IssueTransition/execute()#org/sonar/scanner/scan/filesystem/InputComponentStore/all()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/util/concurrent/TimeUnit/toMillis(long)
org/sonar/scanner/issue/tracking/IssueTransition/execute()#org/sonar/scanner/protocol/output/ScannerReportReader/ScannerReportReader(java.io.File)
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/lang/StringBuilder/append(int)
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/nio/file/Path/toFile()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#org/sonar/scanner/util/ProgressReport/message(java.lang.String)
org/sonar/scanner/issue/tracking/IssueTransition/execute()#org/sonar/scanner/report/ReportPublisher/getReportDir()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#org/sonar/scanner/issue/tracking/LocalIssueTracking/init()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/util/Collection/iterator()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/lang/StringBuilder/toString()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#org/sonar/scanner/util/ProgressReport/ProgressReport(java.lang.String,long)
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/util/Iterator/hasNext()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/util/Collection/size()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#org/sonar/scanner/issue/tracking/IssueTransition/trackIssues(org.sonar.scanner.protocol.output.ScannerReportReader,org.sonar.api.batch.fs.internal.DefaultInputComponent)
org/sonar/scanner/issue/tracking/IssueTransition/execute()#java/util/Iterator/next()
org/sonar/scanner/issue/tracking/IssueTransition/execute()#org/sonar/scanner/util/ProgressReport/start(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#org/codehaus/staxmate/in/SMInputCursor/getAttrValue(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#org/sonar/api/batch/sensor/coverage/NewCoverage/conditions(int,int,int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#org/sonar/api/batch/sensor/coverage/NewCoverage/lineHits(int,int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/mandatoryAttribute(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/intValue(java.lang.String,org.codehaus.staxmate.in.SMInputCursor,java.lang.String,int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#javax/xml/stream/Location/getLineNumber()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/checkElementName(org.codehaus.staxmate.in.SMInputCursor,java.lang.String)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#org/codehaus/staxmate/in/SMInputCursor/getCursorLocation()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#java/lang/StringBuilder/toString()
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#java/lang/StringBuilder/append(int)
org/sonar/scanner/genericcoverage/GenericCoverageReportParser/parseLineToCover(org.codehaus.staxmate.in.SMInputCursor,org.sonar.api.batch.sensor.coverage.NewCoverage)#org/sonar/scanner/genericcoverage/GenericCoverageReportParser/getCoveredValue(org.codehaus.staxmate.in.SMInputCursor)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#org/sonar/scanner/bootstrap/GlobalTempFolderProvider$CleanFilter/GlobalTempFolderProvider$CleanFilter(org.sonar.scanner.bootstrap.GlobalTempFolderProvider$1)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#java/nio/file/DirectoryStream/close()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#java/io/File/exists()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#java/util/Iterator/next()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#java/nio/file/Path/toFile()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#java/nio/file/DirectoryStream/iterator()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#java/util/Iterator/hasNext()
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#java/nio/file/Files/newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream$Filter)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#org/sonar/core/util/FileUtils/deleteQuietly(java.io.File)
org/sonar/scanner/bootstrap/GlobalTempFolderProvider/cleanTempFolders(java.nio.file.Path)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/scanner/protocol/output/ScannerReport$TextRange/newBuilder()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/scanner/report/ReportPublisher/getWriter()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/scanner/protocol/output/ScannerReportWriter/writeComponentSyntaxHighlighting(int,java.lang.Iterable)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/scanner/sensor/DefaultSensorStorage/shouldSkipStorage(org.sonar.api.batch.fs.internal.DefaultInputFile)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/api/batch/fs/internal/DefaultInputFile/batchId()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#java/lang/StringBuilder/append(java.lang.Object)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting/inputFile()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/api/batch/fs/internal/DefaultInputFile/setPublished(boolean)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#java/lang/StringBuilder/toString()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#java/util/stream/Stream/map(java.util.function.Function)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/scanner/protocol/output/ScannerReportWriter/hasComponentData(org.sonar.scanner.protocol.output.FileStructure$Domain,int)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/api/batch/sensor/highlighting/internal/DefaultHighlighting/getSyntaxHighlightingRuleSet()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#org/sonar/scanner/protocol/output/ScannerReport$SyntaxHighlightingRule/newBuilder()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#java/util/stream/Collectors/toList()
org/sonar/scanner/sensor/DefaultSensorStorage/store(org.sonar.api.batch.sensor.highlighting.internal.DefaultHighlighting)#java/util/List/stream()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonarqube/ws/client/WsResponse/contentStream()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonar/scanner/bootstrap/ScannerWsClient/call(org.sonarqube.ws.client.WsRequest)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonar/api/utils/log/Profiler/create(org.sonar.api.utils.log.Logger)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonar/scanner/repository/settings/DefaultSettingsLoader/toMap(java.util.List)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonar/api/utils/log/Profiler/stopInfo()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonar/scanner/util/ScannerUtils/encodeForUrl(java.lang.String)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonarqube/ws/client/GetRequest/GetRequest(java.lang.String)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#java/io/InputStream/close()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonarqube/ws/Settings$ValuesWsResponse/parseFrom(java.io.InputStream)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonar/api/utils/log/Profiler/startInfo(java.lang.String)
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/repository/settings/DefaultSettingsLoader/load(java.lang.String)#org/sonarqube/ws/Settings$ValuesWsResponse/getSettingsList()
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#okhttp3/HttpUrl$Builder/addEncodedQueryParameter(java.lang.String,java.lang.String)
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#okhttp3/HttpUrl/url()
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#org/sonar/scanner/scan/branch/BranchConfiguration/branchName()
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#org/sonar/scanner/report/ReportPublisher/onPullRequest(org.sonar.scanner.scan.branch.BranchConfiguration)
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#org/sonar/scanner/report/ReportPublisher/encoded(java.lang.String)
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#org/sonar/scanner/report/ReportPublisher/onShortLivingBranch(org.sonar.scanner.scan.branch.BranchConfiguration)
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#okhttp3/HttpUrl$Builder/addPathSegment(java.lang.String)
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#org/sonar/scanner/report/ReportPublisher/onLongLivingBranch(org.sonar.scanner.scan.branch.BranchConfiguration)
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#okhttp3/HttpUrl$Builder/build()
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#okhttp3/HttpUrl/newBuilder()
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#okhttp3/HttpUrl/parse(java.lang.String)
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#org/sonar/scanner/report/ReportPublisher/onMainBranch(org.sonar.scanner.scan.branch.BranchConfiguration)
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#okhttp3/HttpUrl$Builder/addQueryParameter(java.lang.String,java.lang.String)
org/sonar/scanner/report/ReportPublisher/buildDashboardUrl(java.lang.String,java.lang.String)#org/sonar/scanner/scan/branch/BranchConfiguration/pullRequestKey()
org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)#java/util/Iterator/hasNext()
org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)#org/sonar/scanner/bootstrap/GlobalConfiguration/get(java.lang.String)
org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)#java/util/Iterator/next()
org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)#java/util/Optional/orElse(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)#java/util/List/add(java.lang.Object)
org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)#java/util/List/iterator()
org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)#java/util/Arrays/asList(java.lang.Object%5B%5D)
org/sonar/scanner/scan/ProjectReactorValidator/validateBranchParamsWhenPluginAbsent(java.util.List)#org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#java/lang/Integer/intValue()
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/sensor/issue/NewExternalIssue/severity(org.sonar.api.batch.rule.Severity)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#java/lang/Long/valueOf(long)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/scanner/externalissue/ExternalIssueImporter/fillLocation(org.sonar.api.batch.sensor.SensorContext,org.sonar.api.batch.sensor.issue.NewIssueLocation,org.sonar.scanner.externalissue.ReportParser$Location)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/sensor/issue/NewExternalIssue/save()
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/sensor/issue/NewExternalIssue/remediationEffortMinutes(java.lang.Long)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/sensor/issue/NewExternalIssue/forRule(org.sonar.api.rule.RuleKey)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/sensor/issue/NewExternalIssue/addLocation(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/rule/RuleKey/of(java.lang.String,java.lang.String)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/sensor/issue/NewExternalIssue/type(org.sonar.api.rules.RuleType)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/sensor/SensorContext/newExternalIssue()
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/sensor/issue/NewExternalIssue/newLocation()
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#java/util/Set/add(java.lang.Object)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/rule/Severity/valueOf(java.lang.String)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/rules/RuleType/valueOf(java.lang.String)
org/sonar/scanner/externalissue/ExternalIssueImporter/importIssue(org.sonar.scanner.externalissue.ReportParser$Issue)#org/sonar/api/batch/sensor/issue/NewExternalIssue/at(org.sonar.api.batch.sensor.issue.NewIssueLocation)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/ProjectScanContainer/pullRequestBaseToDisplayName(java.lang.String)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/utils/log/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/branch/BranchConfiguration/pullRequestKey()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/batch/fs/internal/DefaultInputModule/key()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/branch/BranchConfiguration/branchType()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/ProjectScanContainer/branchTypeToDisplayName(org.sonar.scanner.scan.branch.BranchType)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/batch/fs/internal/InputModuleHierarchy/root()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/utils/log/Logger/debug(java.lang.String)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/branch/BranchConfiguration/branchName()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/ScanProperties/validate()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/branch/BranchConfiguration/branchBase()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/batch/fs/internal/DefaultInputModule/getBaseDir()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/batch/bootstrap/ProjectDefinition/getBranch()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#java/util/Optional/ifPresent(java.util.function.Consumer)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/mediumtest/ScanTaskObservers/notifyEndOfScanTask()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/bootstrap/GlobalAnalysisMode/isMediumTest()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/ProjectScanContainer/scanRecursively(org.sonar.api.batch.fs.internal.InputModuleHierarchy,org.sonar.api.batch.fs.internal.DefaultInputModule,org.sonar.scanner.bootstrap.GlobalAnalysisMode)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/ScanProperties/organizationKey()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object%5B%5D)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/scanner/scan/ProjectScanContainer/getComponentByType(java.lang.Class)
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/batch/fs/internal/DefaultInputModule/definition()
org/sonar/scanner/scan/ProjectScanContainer/doAfterStart()#org/sonar/api/utils/log/Logger/info(java.lang.String,java.lang.Object)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/bootstrap/ScannerPluginPredicate/propertyValues(org.sonar.api.config.Configuration,java.lang.String,java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/bootstrap/GlobalAnalysisMode/isIssues()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/util/Set/addAll(java.util.Collection)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/api/utils/log/Logger/info(java.lang.String)
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/util/Set/isEmpty()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/util/HashSet/HashSet()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/lang/Object/Object()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/lang/StringBuilder/toString()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#org/sonar/scanner/bootstrap/GlobalAnalysisMode/isPreview()
org/sonar/scanner/bootstrap/ScannerPluginPredicate/ScannerPluginPredicate(org.sonar.api.config.Configuration,org.sonar.scanner.bootstrap.GlobalAnalysisMode)#com/google/common/base/Joiner/join(java.lang.Iterable)
org/sonar/scanner/scan/MutableProjectSettings/get(java.lang.String)#org/sonar/scanner/bootstrap/GlobalAnalysisMode/isIssues()
org/sonar/scanner/scan/MutableProjectSettings/get(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/sonar/scanner/scan/MutableProjectSettings/get(java.lang.String)#org/sonar/api/utils/MessageException/of(java.lang.String)
org/sonar/scanner/scan/MutableProjectSettings/get(java.lang.String)#java/util/Map/get(java.lang.Object)
org/sonar/scanner/scan/MutableProjectSettings/get(java.lang.String)#java/util/Optional/ofNullable(java.lang.Object)
org/sonar/scanner/scan/MutableProjectSettings/get(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/sonar/scanner/scan/MutableProjectSettings/get(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/sonar/scanner/scan/MutableProjectSettings/get(java.lang.String)#java/lang/StringBuilder/toString()
org/sonar/scanner/scan/MutableProjectSettings/get(java.lang.String)#java/lang/String/endsWith(java.lang.String)
