com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#com/github/sardine/Sardine/put(java.lang.String,java.io.InputStream)
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#java/io/IOException/getCause()
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#com/github/sardine/impl/SardineException/getStatusCode()
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#java/lang/StringBuilder/StringBuilder()
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#org/springframework/http/HttpStatus/value()
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#com/gooddata/gdc/DataStoreService/createUnAuthRequestWarningMessage(java.net.URI)
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#java/lang/StringBuilder/toString()
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#com/gooddata/gdc/DataStoreException/DataStoreException(java.lang.String,java.lang.Throwable)
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#java/net/URI/toString()
com/gooddata/gdc/DataStoreService/upload(java.net.URI,java.io.InputStream)#java/lang/StringBuilder/append(int)
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#com/gooddata/featureflag/FeatureFlagService/getProjectFeatureFlag(java.lang.String)
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#com/gooddata/project/Project/getId()
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#java/net/URI/toString()
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#org/springframework/web/client/RestTemplate/postForLocation(java.lang.String,java.lang.Object,java.lang.Object%5B%5D)
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#org/springframework/web/util/UriTemplate/expand(java.lang.Object%5B%5D)
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#java/lang/StringBuilder/StringBuilder()
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#java/lang/StringBuilder/toString()
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/featureflag/FeatureFlagService/createProjectFeatureFlag(com.gooddata.project.Project,com.gooddata.featureflag.ProjectFeatureFlag)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#com/gooddata/project/Project/getId()
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#com/gooddata/connector/ConnectorException/ConnectorException(java.lang.String,java.lang.Throwable)
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#com/gooddata/connector/IntegrationNotFoundException/IntegrationNotFoundException(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,java.lang.Throwable)
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#java/lang/StringBuilder/StringBuilder()
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#org/springframework/http/HttpStatus/value()
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#com/gooddata/connector/ConnectorType/getName()
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#java/lang/StringBuilder/toString()
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#com/gooddata/GoodDataRestException/getStatusCode()
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/connector/ConnectorService/getIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/md/MetadataService/getQueryType(java.lang.Class)#java/lang/String/toLowerCase()
com/gooddata/md/MetadataService/getQueryType(java.lang.Class)#java/util/Set/stream()
com/gooddata/md/MetadataService/getQueryType(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/md/MetadataService/getQueryType(java.lang.Class)#java/util/stream/Stream/anyMatch(java.util.function.Predicate)
com/gooddata/md/MetadataService/getQueryType(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/gooddata/md/MetadataService/getQueryType(java.lang.Class)#java/lang/Object/getClass()
com/gooddata/md/MetadataService/getQueryType(java.lang.Class)#java/lang/StringBuilder/toString()
com/gooddata/md/MetadataService/getQueryType(java.lang.Class)#java/lang/Object/equals(java.lang.Object)
com/gooddata/md/MetadataService/getQueryType(java.lang.Class)#java/lang/Class/getSimpleName()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/PollHandler/isDone()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/PollHandler/getPolling()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/PollHandler/handlePollException(com.gooddata.GoodDataRestException)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/PollHandler/handlePollResult(java.lang.Object)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#java/lang/Class/getName()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#java/lang/Integer/valueOf(int)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/PollHandler/getPollClass()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/PollHandler/isFinished(org.springframework.http.client.ClientHttpResponse)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#org/springframework/http/HttpStatus/series()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#java/lang/StringBuilder/StringBuilder()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#org/springframework/http/HttpStatus$Series/equals(java.lang.Object)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#org/springframework/web/client/RestTemplate/execute(java.net.URI,org.springframework.http.HttpMethod,org.springframework.web.client.RequestCallback,org.springframework.web.client.ResponseExtractor)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#org/springframework/http/HttpStatus/value()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#java/lang/Object/getClass()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#org/springframework/http/client/ClientHttpResponse/getStatusCode()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#java/lang/StringBuilder/toString()
com/gooddata/AbstractService/pollOnce(com.gooddata.PollHandler)#com/gooddata/AbstractService/extractData(org.springframework.http.client.ClientHttpResponse,java.lang.Class)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/impl/conn/PoolingHttpClientConnectionManager/setDefaultMaxPerRoute(int)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/client/config/RequestConfig/copy(org.apache.http.client.config.RequestConfig)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/config/SocketConfig/copy(org.apache.http.config.SocketConfig)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#com/gooddata/GoodData/getUserAgent()
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/impl/conn/PoolingHttpClientConnectionManager/setMaxTotal(int)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/client/config/RequestConfig$Builder/setSocketTimeout(int)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/impl/conn/PoolingHttpClientConnectionManager/setDefaultSocketConfig(org.apache.http.config.SocketConfig)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/config/SocketConfig$Builder/setSoTimeout(int)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#com/gooddata/GoodDataSettings/getConnectionRequestTimeout()
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#com/gooddata/GoodDataSettings/getMaxConnections()
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/impl/client/HttpClientBuilder/setUserAgent(java.lang.String)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#com/gooddata/GoodDataSettings/getSocketTimeout()
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/impl/client/HttpClientBuilder/create()
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/client/config/RequestConfig$Builder/setConnectTimeout(int)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/config/SocketConfig$Builder/build()
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#com/gooddata/GoodDataSettings/getUserAgent()
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/client/config/RequestConfig$Builder/build()
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/client/config/RequestConfig$Builder/setConnectionRequestTimeout(int)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/impl/client/HttpClientBuilder/setConnectionManager(org.apache.http.conn.HttpClientConnectionManager)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/impl/client/HttpClientBuilder/setDefaultRequestConfig(org.apache.http.client.config.RequestConfig)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/http/impl/conn/PoolingHttpClientConnectionManager/PoolingHttpClientConnectionManager()
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)
com/gooddata/GoodData/createHttpClientBuilder(com.gooddata.GoodDataSettings)#com/gooddata/GoodDataSettings/getConnectionTimeout()
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#java/lang/StringBuilder/StringBuilder()
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#org/springframework/http/HttpStatus/value()
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#java/lang/StringBuilder/toString()
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#org/springframework/web/client/RestTemplate/delete(java.lang.String,java.lang.Object%5B%5D)
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#java/lang/Class/getSimpleName()
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#com/gooddata/md/Obj/getUri()
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#com/gooddata/md/ObjNotFoundException/ObjNotFoundException(com.gooddata.md.Obj)
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#java/lang/String/toLowerCase()
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#java/lang/Object/getClass()
com/gooddata/md/MetadataService/removeObj(com.gooddata.md.Obj)#com/gooddata/GoodDataRestException/getStatusCode()
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#com/gooddata/project/ProjectTemplate/getUrl()
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#java/util/Collection/isEmpty()
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#java/util/Iterator/next()
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#java/lang/StringBuilder/StringBuilder()
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#com/gooddata/connector/ConnectorService/updateSettings(com.gooddata.project.Project,com.gooddata.connector.Settings)
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#com/gooddata/connector/Integration/Integration(java.lang.String)
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#java/lang/StringBuilder/toString()
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#com/gooddata/project/ProjectService/getProjectTemplates(com.gooddata.project.Project)
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#com/gooddata/project/Project/getId()
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#java/util/Collection/iterator()
com/gooddata/connector/ConnectorService/createIntegration(com.gooddata.project.Project,com.gooddata.connector.Settings)#com/gooddata/connector/Settings/getConnectorType()
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#com/gooddata/md/DisplayForm/getElementsUri()
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#java/util/Collections/emptyList()
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#com/gooddata/md/AttributeElements/getElements()
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#java/lang/StringBuilder/StringBuilder()
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#org/springframework/util/StringUtils/isEmpty(java.lang.Object)
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/md/MetadataService/getAttributeElements(com.gooddata.md.DisplayForm)#java/lang/StringBuilder/toString()
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#com/gooddata/dataset/Uploads/items()
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#java/util/Collections/emptyList()
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#org/springframework/util/StringUtils/isEmpty(java.lang.Object)
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#com/gooddata/dataset/UploadsInfo$DataSet/getUploadsUri()
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#java/lang/StringBuilder/toString()
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataset/DatasetService/listUploadsForDataset(com.gooddata.project.Project,java.lang.String)#com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)
com/gooddata/dataload/OutputStageService/getOutputStageByUri(java.lang.String)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/dataload/OutputStageService/getOutputStageByUri(java.lang.String)#com/gooddata/util/Validate/notEmpty(java.lang.CharSequence,java.lang.String)
com/gooddata/dataload/OutputStageService/getOutputStageByUri(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataload/OutputStageService/getOutputStageByUri(java.lang.String)#com/gooddata/util/Validate/isTrue(boolean,java.lang.String)
com/gooddata/dataload/OutputStageService/getOutputStageByUri(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataload/OutputStageService/getOutputStageByUri(java.lang.String)#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/dataload/OutputStageService/getOutputStageByUri(java.lang.String)#org/springframework/web/util/UriTemplate/matches(java.lang.String)
com/gooddata/dataload/OutputStageService/getOutputStageByUri(java.lang.String)#org/springframework/web/util/UriTemplate/toString()
com/gooddata/dataload/OutputStageService/getOutputStageByUri(java.lang.String)#java/lang/StringBuilder/toString()
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#org/springframework/http/HttpHeaders/getLocation()
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#org/springframework/http/ResponseEntity/getHeaders()
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#com/gooddata/gdc/DataStoreService/getUri(java.lang.String)
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#java/lang/StringBuilder/toString()
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#org/springframework/http/ResponseEntity/getStatusCode()
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#com/gooddata/util/Validate/notEmpty(java.lang.CharSequence,java.lang.String)
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#com/gooddata/gdc/DataStoreException/DataStoreException(java.lang.String,java.lang.Throwable)
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#org/springframework/http/HttpStatus/equals(java.lang.Object)
com/gooddata/gdc/DataStoreService/delete(java.lang.String)#org/springframework/web/client/RestTemplate/exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class)
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/node/JsonNodeType/name()
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/core/JsonParser/readValueAsTree()
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/gooddata/md/AttributeSort/AttributeSort(java.lang.String)
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/getNodeType()
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/findValue(java.lang.String)
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/gooddata/md/AttributeSort/AttributeSort(java.lang.String,boolean)
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/isObject()
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/textValue()
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/DeserializationContext/mappingException(java.lang.String,java.lang.Object%5B%5D)
com/gooddata/md/AttributeSort$Deserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/isTextual()
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#java/lang/Class/getSimpleName()
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#java/lang/String/toLowerCase()
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#org/springframework/http/HttpStatus/value()
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#java/lang/StringBuilder/toString()
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#com/gooddata/md/ObjNotFoundException/ObjNotFoundException(java.lang.String,java.lang.Class,java.lang.Exception)
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/md/MetadataService/getObjByUri(java.lang.String,java.lang.Class)#com/gooddata/GoodDataRestException/getStatusCode()
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/stream/Stream/map(java.util.function.Function)
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/ArrayList/ArrayList(int)
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/Iterator/hasNext()
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/stream/Stream/collect(java.util.stream.Collector)
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/List/size()
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/List/addAll(java.util.Collection)
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/Iterator/next()
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/List/add(java.lang.Object)
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/List/iterator()
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/stream/Collectors/toList()
com/gooddata/md/report/AttributeInGrid/getTotals()#java/util/List/stream()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/dataset/DatasetManifests/DatasetManifests(java.util.Collection)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/gdc/DataStoreService/upload(java.lang.String,java.io.InputStream)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/project/Project/getId()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/util/Iterator/hasNext()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte%5B%5D)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/dataset/DatasetManifest/getFile()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/util/Collection/iterator()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/lang/StringBuilder/toString()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/util/ArrayList/ArrayList(int)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/dataset/DatasetService/pullLoad(com.gooddata.project.Project,java.lang.String,java.util.Collection)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/util/Collection/size()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/util/Iterator/next()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/dataset/DatasetException/DatasetException(java.lang.String,java.util.Collection,java.lang.Throwable)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#org/apache/commons/lang3/RandomStringUtils/randomAlphabetic(int)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/dataset/DatasetManifest/getSource()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#com/gooddata/dataset/DatasetManifest/getDataSet()
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/util/List/add(java.lang.Object)
com/gooddata/dataset/DatasetService/loadDatasets(com.gooddata.project.Project,java.util.Collection)#java/lang/String/getBytes(java.nio.charset.Charset)
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#org/springframework/http/ResponseEntity/getBody()
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#com/gooddata/dataload/processes/ScheduleNotFoundException/ScheduleNotFoundException(java.lang.String,java.lang.Throwable)
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#com/gooddata/dataload/processes/Schedule/getUri()
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#org/springframework/http/HttpStatus/value()
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#org/springframework/web/client/RestTemplate/exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#com/gooddata/GoodDataRestException/getStatusCode()
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#java/lang/StringBuilder/toString()
com/gooddata/dataload/processes/ProcessService/updateSchedule(com.gooddata.dataload.processes.Schedule)#org/springframework/http/HttpEntity/HttpEntity(java.lang.Object)
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/Entry/getIdentifier()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#java/util/ArrayList/ArrayList(int)
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/Entry/getSummary()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#java/util/Iterator/hasNext()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/Restriction/getType()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/Restriction$Type/ordinal()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#java/util/Collection/size()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#java/util/Iterator/next()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#java/lang/String/equals(java.lang.Object)
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/Restriction/getValue()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#java/util/Collection/iterator()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/Entry/getTitle()
com/gooddata/md/MetadataService/filterEntries(java.util.Collection,com.gooddata.md.Restriction%5B%5D)#java/util/Collection/add(java.lang.Object)
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#org/springframework/web/client/RestClientException/RestClientException(java.lang.String)
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#org/springframework/web/client/RestTemplate/exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#org/springframework/http/ResponseEntity/getBody()
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#com/gooddata/dataload/OutputStage/getUri()
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#java/lang/StringBuilder/toString()
com/gooddata/dataload/OutputStageService/updateOutputStage(com.gooddata.dataload.OutputStage)#org/springframework/http/HttpEntity/HttpEntity(java.lang.Object)
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonMappingException/JsonMappingException(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation)
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/Scanner/close()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/core/JsonParser/readValueAsTree()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/getNodeType()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/Scanner/Scanner(java.lang.String)
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/HashSet/add(java.lang.Object)
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/lang/StringBuilder/StringBuilder()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/core/JsonParser/getCurrentLocation()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/isTextual()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/Scanner/next()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/lang/StringBuilder/toString()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/Scanner/hasNext()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/textValue()
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
com/gooddata/util/TagsDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/HashSet/HashSet()
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#java/io/File/isDirectory()
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#com/gooddata/util/ZipHelper/zipDir(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#java/nio/file/Files/newInputStream(java.nio.file.Path,java.nio.file.OpenOption%5B%5D)
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#org/springframework/util/StreamUtils/copy(java.io.InputStream,java.io.OutputStream)
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#java/util/zip/ZipOutputStream/close()
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#java/io/File/getParentFile()
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#java/util/zip/ZipOutputStream/ZipOutputStream(java.io.OutputStream)
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#com/gooddata/util/ZipHelper/isZipped(java.io.File)
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#java/io/File/toPath()
com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream,boolean)#java/io/InputStream/close()
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#com/gooddata/project/Project/getId()
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#java/util/Collections/emptyList()
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#java/lang/StringBuilder/toString()
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/dataset/DatasetService/listDatasetLinks(com.gooddata.project.Project)#com/gooddata/dataset/DatasetLinks/getLinks()
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#com/gooddata/warehouse/WarehouseS3CredentialsException/WarehouseS3CredentialsException(java.lang.String,java.lang.String,java.lang.Exception)
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#com/gooddata/util/Validate/notEmpty(java.lang.CharSequence,java.lang.String)
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#java/net/URI/toString()
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#com/gooddata/warehouse/WarehouseService/getWarehouseS3CredentialsUri(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#org/springframework/http/HttpStatus/value()
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#com/gooddata/warehouse/WarehouseS3CredentialsNotFoundException/WarehouseS3CredentialsNotFoundException(java.lang.String,com.gooddata.GoodDataRestException)
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/warehouse/WarehouseService/getWarehouseS3Credentials(com.gooddata.warehouse.Warehouse,java.lang.String,java.lang.String)#com/gooddata/GoodDataRestException/getStatusCode()
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/gooddata/project/Users/iterator()
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/core/JsonGenerator/getCodec()
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/core/JsonGenerator/writeEndArray()
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#java/util/Iterator/next()
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/core/ObjectCodec/writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/core/JsonGenerator/writeEndObject()
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#java/util/Iterator/hasNext()
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/core/JsonGenerator/writeFieldName(java.lang.String)
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/core/JsonGenerator/writeStartArray()
com/gooddata/project/UsersSerializer/serialize(com.gooddata.project.Users,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/core/JsonGenerator/writeStartObject()
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#java/nio/file/Path/relativize(java.nio.file.Path)
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#java/util/zip/ZipOutputStream/closeEntry()
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#java/nio/file/Files/newInputStream(java.nio.file.Path,java.nio.file.OpenOption%5B%5D)
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#org/springframework/util/StreamUtils/copy(java.io.InputStream,java.io.OutputStream)
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#java/util/zip/ZipEntry/ZipEntry(java.lang.String)
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#java/nio/file/Path/toString()
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#java/util/zip/ZipOutputStream/putNextEntry(java.util.zip.ZipEntry)
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#java/io/File/toPath()
com/gooddata/util/ZipHelper/zipFile(java.nio.file.Path,java.io.File,java.util.zip.ZipOutputStream)#java/io/InputStream/close()
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#com/gooddata/util/Validate/notEmpty(java.lang.CharSequence,java.lang.String)
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#org/springframework/web/client/RestTemplate/getForObject(java.net.URI,java.lang.Class)
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#com/gooddata/project/ProjectService/getUserUri(com.gooddata.project.Project,com.gooddata.account.Account)
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#com/gooddata/account/Account/getId()
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#java/lang/StringBuilder/StringBuilder()
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#org/springframework/http/HttpStatus/value()
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#com/gooddata/project/UserInProjectNotFoundException/UserInProjectNotFoundException(java.lang.String,java.lang.Throwable)
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#java/lang/StringBuilder/toString()
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/project/ProjectService/getUser(com.gooddata.project.Project,com.gooddata.account.Account)#com/gooddata/GoodDataRestException/getStatusCode()
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#com/gooddata/dataset/DatasetManifest$Part/setColumnName(java.lang.String)
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/util/List/size()
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/util/Iterator/next()
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#java/util/List/iterator()
com/gooddata/dataset/DatasetManifest/setMapping(java.lang.String,java.lang.String)#com/gooddata/dataset/DatasetManifest$Part/getPopulates()
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/stream/Stream/map(java.util.function.Function)
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/ArrayList/ArrayList(int)
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String)
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/Iterator/hasNext()
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/stream/Stream/collect(java.util.stream.Collector)
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/List/size()
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/List/addAll(java.util.Collection)
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/Iterator/next()
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/List/add(java.lang.Object)
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/List/iterator()
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/stream/Collectors/toList()
com/gooddata/md/report/AttributeInGrid/AttributeInGrid(java.lang.String,java.lang.String,java.util.List)#java/util/List/stream()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#org/springframework/http/ResponseEntity/getStatusCode()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#org/springframework/http/ResponseEntity/getBody()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#com/gooddata/dataload/processes/AsyncTask/getUri()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#com/gooddata/dataload/processes/DataloadProcess/getUri()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#org/springframework/web/client/RestTemplate/exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#com/gooddata/dataload/processes/ProcessService$4/ProcessService$4(com.gooddata.dataload.processes.ProcessService,java.lang.String,java.lang.Class)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#com/gooddata/dataload/processes/ProcessService$3/ProcessService$3(com.gooddata.dataload.processes.ProcessService,java.lang.String,java.lang.Class)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#com/gooddata/PollResult/PollResult(com.gooddata.AbstractService,com.gooddata.PollHandler)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#java/lang/StringBuilder/toString()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.net.URI,org.springframework.http.HttpMethod)#org/springframework/http/HttpEntity/HttpEntity(java.lang.Object)
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#org/springframework/http/ResponseEntity/getBody()
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#com/gooddata/warehouse/WarehouseUserNotFoundException/WarehouseUserNotFoundException(java.lang.String,com.gooddata.GoodDataRestException)
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#java/lang/StringBuilder/StringBuilder()
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#org/springframework/http/HttpStatus/value()
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#com/gooddata/warehouse/WarehouseUser/getUri()
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#org/springframework/web/client/RestTemplate/exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#java/lang/StringBuilder/toString()
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#com/gooddata/warehouse/WarehouseService$3/WarehouseService$3(com.gooddata.warehouse.WarehouseService,java.lang.String,java.lang.Class,java.lang.Class)
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#com/gooddata/warehouse/WarehouseTask/getPollUri()
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#com/gooddata/PollResult/PollResult(com.gooddata.AbstractService,com.gooddata.PollHandler)
com/gooddata/warehouse/WarehouseService/removeUserFromWarehouse(com.gooddata.warehouse.WarehouseUser)#com/gooddata/GoodDataRestException/getStatusCode()
com/gooddata/AbstractService$ReusableClientHttpResponse/AbstractService$ReusableClientHttpResponse(org.springframework.http.client.ClientHttpResponse)#org/springframework/http/client/ClientHttpResponse/getHeaders()
com/gooddata/AbstractService$ReusableClientHttpResponse/AbstractService$ReusableClientHttpResponse(org.springframework.http.client.ClientHttpResponse)#org/springframework/http/client/ClientHttpResponse/getRawStatusCode()
com/gooddata/AbstractService$ReusableClientHttpResponse/AbstractService$ReusableClientHttpResponse(org.springframework.http.client.ClientHttpResponse)#org/springframework/util/FileCopyUtils/copyToByteArray(java.io.InputStream)
com/gooddata/AbstractService$ReusableClientHttpResponse/AbstractService$ReusableClientHttpResponse(org.springframework.http.client.ClientHttpResponse)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/gooddata/AbstractService$ReusableClientHttpResponse/AbstractService$ReusableClientHttpResponse(org.springframework.http.client.ClientHttpResponse)#java/lang/Object/Object()
com/gooddata/AbstractService$ReusableClientHttpResponse/AbstractService$ReusableClientHttpResponse(org.springframework.http.client.ClientHttpResponse)#org/springframework/http/client/ClientHttpResponse/getStatusText()
com/gooddata/AbstractService$ReusableClientHttpResponse/AbstractService$ReusableClientHttpResponse(org.springframework.http.client.ClientHttpResponse)#org/springframework/http/client/ClientHttpResponse/getStatusCode()
com/gooddata/AbstractService$ReusableClientHttpResponse/AbstractService$ReusableClientHttpResponse(org.springframework.http.client.ClientHttpResponse)#org/springframework/http/client/ClientHttpResponse/getBody()
com/gooddata/AbstractService$ReusableClientHttpResponse/AbstractService$ReusableClientHttpResponse(org.springframework.http.client.ClientHttpResponse)#org/springframework/http/client/ClientHttpResponse/close()
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#org/springframework/web/client/RestTemplate/put(java.lang.String,java.lang.Object,java.lang.Object%5B%5D)
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#com/gooddata/project/Project/getId()
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#com/gooddata/connector/ConnectorException/ConnectorException(java.lang.String,java.lang.Throwable)
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#com/gooddata/connector/IntegrationNotFoundException/IntegrationNotFoundException(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,java.lang.Throwable)
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#java/lang/StringBuilder/StringBuilder()
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#org/springframework/http/HttpStatus/value()
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#com/gooddata/connector/ConnectorType/getName()
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#java/lang/StringBuilder/toString()
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#com/gooddata/GoodDataRestException/getStatusCode()
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/connector/ConnectorService/updateIntegration(com.gooddata.project.Project,com.gooddata.connector.ConnectorType,com.gooddata.connector.Integration)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#org/springframework/http/client/support/HttpRequestWrapper/HttpRequestWrapper(org.springframework.http.HttpRequest)
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#java/util/Iterator/hasNext()
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#java/util/Map$Entry/getKey()
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#org/springframework/http/client/support/HttpRequestWrapper/getHeaders()
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#org/springframework/http/HttpHeaders/set(java.lang.String,java.lang.String)
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#java/util/Iterator/next()
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#java/util/Set/iterator()
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#org/springframework/http/client/ClientHttpRequestExecution/execute(org.springframework.http.HttpRequest,byte%5B%5D)
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#java/util/Map$Entry/getValue()
com/gooddata/HeaderSettingRequestInterceptor/intercept(org.springframework.http.HttpRequest,byte%5B%5D,org.springframework.http.client.ClientHttpRequestExecution)#java/util/Map/entrySet()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/stream/Stream/map(java.util.function.Function)
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/isArray()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/core/JsonParser/readValueAsTree()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/getNodeType()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/stream/Stream/collect(java.util.stream.Collector)
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonMappingException/from(com.fasterxml.jackson.core.JsonParser,java.lang.String)
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/gooddata/executeafm/result/DataValue/DataValue(java.lang.String)
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/stream/Collectors/toList()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/Spliterators/spliteratorUnknownSize(java.util.Iterator,int)
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/isNull()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/textValue()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/elements()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/fasterxml/jackson/databind/JsonNode/isTextual()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/lang/StringBuilder/toString()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/gooddata/executeafm/result/DataList/DataList(java.util.List)
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/util/stream/StreamSupport/stream(java.util.Spliterator,boolean)
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#java/lang/StringBuilder/StringBuilder()
com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)#com/gooddata/executeafm/result/Data$DataDeserializer/deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/util/LinkedMultiValueMap/LinkedMultiValueMap(int)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#com/gooddata/gdc/DataStoreService/upload(java.lang.String,java.io.InputStream)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/http/ResponseEntity/getBody()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#com/gooddata/util/ZipHelper/zip(java.io.File,java.io.OutputStream)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/util/MultiValueMap/add(java.lang.Object,java.lang.Object)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/http/HttpHeaders/HttpHeaders()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#com/gooddata/dataload/processes/ProcessService/deleteTempFile(java.io.File)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/io/File/getAbsolutePath()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/web/util/UriTemplate/matches(java.lang.String)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/core/io/FileSystemResource/FileSystemResource(java.io.File)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/io/OutputStream/close()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#com/gooddata/dataload/processes/ProcessService/createTempFile(java.lang.String,java.lang.String)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/nio/file/Files/newOutputStream(java.nio.file.Path,java.nio.file.OpenOption%5B%5D)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/io/File/getName()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/net/URI/toString()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/http/HttpEntity/HttpEntity(java.lang.Object,org.springframework.util.MultiValueMap)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/io/File/toPath()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/net/URI/getPath()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/io/InputStream/close()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/nio/file/Files/newInputStream(java.nio.file.Path,java.nio.file.OpenOption%5B%5D)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#com/gooddata/dataload/processes/DataloadProcess/setPath(java.lang.String)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/io/File/length()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#com/gooddata/gdc/DataStoreService/getUri(java.lang.String)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/http/HttpHeaders/setContentType(org.springframework.http.MediaType)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/web/client/RestTemplate/exchange(java.net.URI,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class)
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#java/lang/StringBuilder/toString()
com/gooddata/dataload/processes/ProcessService/postProcess(com.gooddata.dataload.processes.DataloadProcess,java.io.File,java.net.URI)#org/springframework/http/HttpEntity/HttpEntity(java.lang.Object)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#com/gooddata/util/ResponseErrorHandler/ResponseErrorHandler(java.util.List)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#java/util/Arrays/asList(java.lang.Object%5B%5D)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#org/springframework/web/client/RestTemplate/setInterceptors(java.util.List)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#com/gooddata/GoodDataEndpoint/toUri()
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#org/springframework/web/client/RestTemplate/RestTemplate(org.springframework.http.client.ClientHttpRequestFactory)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#org/springframework/http/client/HttpComponentsClientHttpRequestFactory/HttpComponentsClientHttpRequestFactory(org.apache.http.client.HttpClient)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#org/springframework/web/client/RestTemplate/setErrorHandler(org.springframework.web.client.ResponseErrorHandler)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#com/gooddata/HeaderSettingRequestInterceptor/HeaderSettingRequestInterceptor(java.util.Map)
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#com/gooddata/GoodData/getAcceptHeaderValue()
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#org/springframework/web/client/RestTemplate/getMessageConverters()
com/gooddata/GoodData/createRestTemplate(com.gooddata.GoodDataEndpoint,org.apache.http.client.HttpClient)#com/gooddata/UriPrefixingClientHttpRequestFactory/UriPrefixingClientHttpRequestFactory(org.springframework.http.client.ClientHttpRequestFactory,java.lang.String)
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#java/util/ArrayList/ArrayList(int)
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/Restriction$Type/equals(java.lang.Object)
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#com/gooddata/util/Validate/noNullElements(java.lang.Object%5B%5D,java.lang.String)
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/Restriction/getType()
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/MetadataService/getUrisForIdentifiers(com.gooddata.project.Project,java.util.Collection)
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#java/lang/StringBuilder/StringBuilder()
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/Restriction/getValue()
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#java/util/List/add(java.lang.Object)
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#java/lang/StringBuilder/toString()
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#com/gooddata/md/IdentifiersAndUris/getUris()
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#java/lang/StringBuilder/append(java.lang.Object)
com/gooddata/md/MetadataService/findUris(com.gooddata.project.Project,com.gooddata.md.Restriction%5B%5D)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#com/gooddata/warehouse/WarehouseS3CredentialsException/WarehouseS3CredentialsException(java.lang.String,java.lang.String,java.lang.Exception)
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#java/net/URI/toString()
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#org/springframework/http/HttpEntity/getBody()
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#com/gooddata/warehouse/WarehouseS3Credentials/getAccessKey()
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#org/springframework/web/util/UriTemplate/expand(java.lang.Object%5B%5D)
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#com/gooddata/warehouse/WarehouseS3Credentials/getRegion()
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#org/springframework/web/client/RestTemplate/exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#org/springframework/http/HttpMethod/name()
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#org/springframework/web/util/UriTemplate/UriTemplate(java.lang.String)
com/gooddata/warehouse/WarehouseService/createWarehouseTask(java.lang.String,org.springframework.http.HttpMethod,com.gooddata.warehouse.WarehouseS3Credentials,org.springframework.http.HttpEntity,java.lang.Object%5B%5D)#com/gooddata/warehouse/WarehouseS3CredentialsException/WarehouseS3CredentialsException(java.lang.String,java.lang.String)
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#com/gooddata/AbstractPollHandler/isFinished(org.springframework.http.client.ClientHttpResponse)
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#org/springframework/http/client/ClientHttpResponse/getHeaders()
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#com/gooddata/project/ProjectService$2/getPollingUri()
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#java/net/URI/toString()
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#com/gooddata/project/ProjectService$2/setResult(java.lang.Object)
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#org/springframework/web/client/RestTemplate/getForObject(java.lang.String,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#org/springframework/http/HttpHeaders/getLocation()
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#java/lang/StringBuilder/toString()
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#com/gooddata/project/ProjectService$2/setPollingUri(java.lang.String)
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#com/gooddata/project/ProjectService/access$100(com.gooddata.project.ProjectService)
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#java/lang/StringBuilder/StringBuilder()
com/gooddata/project/ProjectService$2/isFinished(org.springframework.http.client.ClientHttpResponse)#com/gooddata/project/ProjectService$2/getResultClass()
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#java/util/stream/Stream/map(java.util.function.Function)
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#com/gooddata/md/InUseMany/InUseMany(java.util.Collection,boolean,java.lang.Class%5B%5D)
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#com/gooddata/project/Project/getId()
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#java/util/stream/Stream/collect(java.util.stream.Collector)
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#java/util/Collection/size()
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#java/util/List/addAll(java.util.Collection)
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#com/gooddata/md/UseMany/getUseMany()
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#org/springframework/web/client/RestTemplate/postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#java/util/ArrayList/ArrayList(int)
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#java/util/Collection/stream()
com/gooddata/md/MetadataService/usedBy(com.gooddata.project.Project,java.util.Collection,boolean,java.lang.Class%5B%5D)#java/util/stream/Collectors/toList()
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#java/util/stream/Stream/map(java.util.function.Function)
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#com/gooddata/project/Project/getId()
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#java/util/stream/Stream/collect(java.util.stream.Collector)
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#com/gooddata/util/Validate/noNullElements(java.lang.Object%5B%5D,java.lang.String)
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#java/util/stream/Collectors/joining(java.lang.CharSequence)
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#java/util/Arrays/stream(java.lang.Object%5B%5D)
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#java/lang/StringBuilder/toString()
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#java/lang/StringBuilder/StringBuilder()
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#org/springframework/web/client/RestTemplate/postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/project/ProjectService/sendInvitations(com.gooddata.project.Project,com.gooddata.project.Invitation%5B%5D)#com/gooddata/project/Invitations/Invitations(com.gooddata.project.Invitation%5B%5D)
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#java/util/stream/Stream/map(java.util.function.Function)
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#java/util/stream/Stream/collect(java.util.stream.Collector)
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#com/gooddata/projecttemplate/Template/getManifestsUris()
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#com/gooddata/projecttemplate/Template/getUri()
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#java/lang/StringBuilder/StringBuilder()
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#java/lang/StringBuilder/toString()
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#java/util/stream/Collectors/toList()
com/gooddata/projecttemplate/ProjectTemplateService/getManifests(com.gooddata.projecttemplate.Template)#java/util/List/stream()
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#com/gooddata/util/Validate/notEmpty(java.lang.CharSequence,java.lang.String)
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#com/gooddata/project/Project/getId()
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#org/springframework/web/client/RestTemplate/getForObject(java.net.URI,java.lang.Class)
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#java/net/URI/toString()
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#org/springframework/web/util/UriTemplate/expand(java.lang.Object%5B%5D)
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#com/gooddata/dataset/UploadsInfo/getDataSet(java.lang.String)
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#java/lang/StringBuilder/toString()
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#com/gooddata/GoodDataException/GoodDataException(java.lang.String)
com/gooddata/dataset/DatasetService/getDataSetInfo(com.gooddata.project.Project,java.lang.String)#com/gooddata/GoodDataException/GoodDataException(java.lang.String,java.lang.Throwable)
com/gooddata/md/report/GridElementSerializer/serialize(com.gooddata.md.report.GridElement,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/md/report/GridElementSerializer/serialize(com.gooddata.md.report.GridElement,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/databind/SerializerProvider/defaultSerializeValue(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator)
com/gooddata/md/report/GridElementSerializer/serialize(com.gooddata.md.report.GridElement,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#java/lang/Class/getName()
com/gooddata/md/report/GridElementSerializer/serialize(com.gooddata.md.report.GridElement,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#java/lang/Object/getClass()
com/gooddata/md/report/GridElementSerializer/serialize(com.gooddata.md.report.GridElement,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/core/JsonGenerator/writeString(java.lang.String)
com/gooddata/md/report/GridElementSerializer/serialize(com.gooddata.md.report.GridElement,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/fasterxml/jackson/core/JsonGenerationException/JsonGenerationException(java.lang.String,com.fasterxml.jackson.core.JsonGenerator)
com/gooddata/md/report/GridElementSerializer/serialize(com.gooddata.md.report.GridElement,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#java/lang/StringBuilder/toString()
com/gooddata/md/report/GridElementSerializer/serialize(com.gooddata.md.report.GridElement,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#java/lang/StringBuilder/StringBuilder()
com/gooddata/md/report/GridElementSerializer/serialize(com.gooddata.md.report.GridElement,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)#com/gooddata/md/report/MetricGroup/getValue()
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#java/util/Iterator/hasNext()
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#java/util/Iterator/next()
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#com/gooddata/dataset/DatasetManifest/getSource()
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#com/gooddata/dataset/DatasetManifest/getFile()
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#java/util/Collection/iterator()
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#com/gooddata/dataset/DatasetManifest/getDataSet()
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#com/gooddata/util/Validate/notEmpty(java.util.Collection,java.lang.String)
com/gooddata/dataset/DatasetService/validateUploadManifests(java.util.Collection)#org/springframework/util/StringUtils/isEmpty(java.lang.Object)
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#com/gooddata/gdc/AsyncTask/getUri()
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#com/gooddata/export/ExportException/ExportException(java.lang.String,java.lang.Throwable)
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#java/net/URI/toString()
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#com/gooddata/export/ExportService/extractProjectId(com.gooddata.md.AbstractObj)
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#org/springframework/web/util/UriTemplate/expand(java.lang.Object%5B%5D)
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#com/gooddata/export/ClientExport/ClientExport(com.gooddata.GoodDataEndpoint,java.lang.String,java.lang.String,java.lang.String)
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#com/gooddata/export/ExportService$2/ExportService$2(com.gooddata.export.ExportService,java.lang.String,java.lang.Class,java.lang.String,com.gooddata.gdc.AsyncTask,java.io.OutputStream)
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#java/lang/StringBuilder/toString()
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#com/gooddata/md/ProjectDashboard/getUri()
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#org/springframework/web/client/RestTemplate/postForObject(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Object%5B%5D)
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#com/gooddata/md/ProjectDashboard$Tab/getIdentifier()
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#com/gooddata/util/Validate/notNull(java.lang.Object,java.lang.String)
com/gooddata/export/ExportService/exportPdf(com.gooddata.md.ProjectDashboard,com.gooddata.md.ProjectDashboard$Tab,java.io.OutputStream)#com/gooddata/PollResult/PollResult(com.gooddata.AbstractService,com.gooddata.PollHandler)
