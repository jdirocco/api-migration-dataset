io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/util/Iterator/hasNext()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/newLineIfNotEmpty()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object,java.lang.String)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getAnnotations()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/declaration/AnnotationReference/getStringValue(java.lang.String)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/getDeclaredFields()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/access$000(io.tapirtest.datasource.excel.annotation.ExcelDataSourceProcessor,org.eclipse.xtend.lib.macro.declaration.FieldDeclaration,org.eclipse.xtend.lib.macro.services.GlobalTypeLookup)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/TransformationContext/newSelfTypeReference(org.eclipse.xtend.lib.macro.declaration.Type)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/append(java.lang.Object)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getSimpleName()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtend2/lib/StringConcatenationClient$TargetStringConcatenation/newLine()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/util/Iterator/next()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#org/eclipse/xtext/xbase/lib/IterableExtensions/findFirst(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor$1/appendTo(org.eclipse.xtend2.lib.StringConcatenationClient$TargetStringConcatenation)#java/lang/Iterable/iterator()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtend2/lib/StringConcatenation/toString()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#java/lang/Class/getSimpleName()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#java/util/Iterator/hasNext()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtend2/lib/StringConcatenation/StringConcatenation()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#java/util/Iterator/next()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtend/lib/macro/declaration/TypeReference/getActualTypeArguments()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtend/lib/macro/ValidationContext/addError(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/getRealType(org.eclipse.xtend.lib.macro.declaration.FieldDeclaration,org.eclipse.xtend.lib.macro.services.GlobalTypeLookup)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtend/lib/macro/declaration/ClassDeclaration/getDeclaredFields()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.Object)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtend2/lib/StringConcatenation/append(java.lang.String)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#java/util/List/isEmpty()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtend/lib/macro/declaration/ClassDeclaration/getAnnotations()
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtext/xbase/lib/IterableExtensions/exists(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#org/eclipse/xtext/xbase/lib/IterableExtensions/findFirst(java.lang.Iterable,org.eclipse.xtext.xbase.lib.Functions$Function1)
io/tapirtest/datasource/excel/annotation/ExcelDataSourceProcessor/doValidate(org.eclipse.xtend.lib.macro.declaration.ClassDeclaration,org.eclipse.xtend.lib.macro.ValidationContext)#java/lang/Iterable/iterator()
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#java/util/ArrayList/iterator()
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#io/tapirtest/datasource/excel/AbstractExcelDataSource/getMapping(org.apache.poi.ss.usermodel.Row)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#io/tapirtest/datasource/excel/AbstractExcelDataSource/isXlsFile(org.springframework.core.io.Resource)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#org/apache/poi/ss/usermodel/Sheet/getRow(int)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#java/util/Iterator/hasNext()
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#io/tapirtest/datasource/excel/AbstractExcelDataSource/isXlsxFile(org.springframework.core.io.Resource)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#org/apache/poi/xssf/usermodel/XSSFWorkbook/XSSFWorkbook(java.io.InputStream)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#java/util/Iterator/next()
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#io/tapirtest/datasource/excel/ExcelRecord/build(org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#java/util/ArrayList/add(java.lang.Object)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#org/eclipse/xtext/xbase/lib/CollectionLiterals/newArrayList()
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#org/apache/poi/hssf/usermodel/HSSFWorkbook/HSSFWorkbook(java.io.InputStream)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#org/eclipse/xtext/xbase/lib/Exceptions/sneakyThrow(java.lang.Throwable)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#org/springframework/core/io/Resource/getInputStream()
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#org/apache/poi/xssf/usermodel/XSSFWorkbook/getSheetAt(int)
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#org/apache/poi/ss/usermodel/Sheet/rowIterator()
io/tapirtest/datasource/excel/AbstractExcelDataSource/getIterator(org.springframework.core.io.Resource)#org/apache/poi/hssf/usermodel/HSSFWorkbook/getSheetAt(int)
