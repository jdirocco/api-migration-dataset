org/springframework/jms/config/AbstractListenerContainerParser/parseCommonContainerProperties(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/jms/core/JmsTemplate/doSend(javax.jms.Session,javax.jms.Destination,org.springframework.jms.core.MessageCreator)
org/springframework/jms/config/JmsListenerContainerParser/createContainer(org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.PropertyValues,org.springframework.beans.PropertyValues)
org/springframework/jms/support/converter/MessagingMessageConverter/toMessage(java.lang.Object,javax.jms.Session)
org/springframework/jms/connection/JmsTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)
org/springframework/jms/config/AbstractListenerContainerParser/parseAcknowledgeMode(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/jms/support/converter/MappingJackson2MessageConverter/getJavaTypeForMessage(javax.jms.Message)
org/springframework/jms/listener/endpoint/DefaultJmsActivationSpecFactory/determineActivationSpecClass(javax.resource.spi.ResourceAdapter)
org/springframework/jms/config/JmsListenerContainerParser/parseSpecificContainerProperties(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/jms/connection/CachingConnectionFactory/getSession(javax.jms.Connection,java.lang.Integer)
org/springframework/jms/listener/AbstractMessageListenerContainer/createConsumer(javax.jms.Session,javax.jms.Destination)
org/springframework/jms/connection/CachingConnectionFactory$CachedSessionInvocationHandler/getCachedConsumer(javax.jms.Destination,java.lang.String,java.lang.Boolean,java.lang.String,boolean)
org/springframework/jms/support/SimpleJmsHeaderMapper/fromHeaders(org.springframework.messaging.MessageHeaders,javax.jms.Message)
org/springframework/jms/connection/ConnectionFactoryUtils/doGetTransactionalSession(javax.jms.ConnectionFactory,org.springframework.jms.connection.ConnectionFactoryUtils$ResourceFactory,boolean)
org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor/afterSingletonsInstantiated()
org/springframework/jms/support/destination/JndiDestinationResolver/resolveDestinationName(javax.jms.Session,java.lang.String,boolean)
org/springframework/jms/core/JmsTemplate/executeLocal(org.springframework.jms.core.SessionCallback,boolean)
org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker/executeOngoingLoop()
org/springframework/jms/connection/JmsResourceHolder/commitAll()
org/springframework/jms/support/converter/SimpleMessageConverter/createMessageForMap(java.util.Map,javax.jms.Session)
org/springframework/jms/config/MethodJmsListenerEndpoint/createMessageListener(org.springframework.jms.listener.MessageListenerContainer)
org/springframework/jms/connection/SingleConnectionFactory/closeConnection(javax.jms.Connection)
org/springframework/jms/connection/JmsTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/jms/connection/CachedMessageProducer$Jms2MessageProducerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory/populateActivationSpecProperties(org.springframework.beans.BeanWrapper,org.springframework.jms.listener.endpoint.JmsActivationSpecConfig)
org/springframework/jms/core/JmsTemplate/execute(org.springframework.jms.core.SessionCallback,boolean)
org/springframework/jms/config/JmsListenerEndpointRegistry/createListenerContainer(org.springframework.jms.config.JmsListenerEndpoint,org.springframework.jms.config.JmsListenerContainerFactory)
org/springframework/jms/config/AbstractJmsListenerEndpoint$JcaEndpointConfigurer/setupJcaMessageContainer(org.springframework.jms.listener.endpoint.JmsMessageEndpointManager)
org/springframework/jms/listener/SimpleMessageListenerContainer/onException(javax.jms.JMSException)
org/springframework/jms/connection/TransactionAwareConnectionFactoryProxy$TransactionAwareConnectionInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/springframework/jms/support/JmsUtils/buildExceptionMessage(javax.jms.JMSException)
org/springframework/jms/remoting/JmsInvokerClientInterceptor/doExecuteRequest(javax.jms.Session,javax.jms.Queue,javax.jms.Message)
org/springframework/jms/connection/SingleConnectionFactory/initConnection()
org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor/postProcessAfterInitialization(java.lang.Object,java.lang.String)
org/springframework/jms/connection/JmsTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/jms/config/AnnotationDrivenJmsBeanDefinitionParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/jms/JmsException/getMessage()
org/springframework/jms/core/JmsTemplate/doReceive(javax.jms.Session,javax.jms.MessageConsumer)
org/springframework/jms/listener/DefaultMessageListenerContainer/scheduleNewInvokerIfAppropriate()
org/springframework/jms/config/AbstractListenerContainerParser/parseListener(org.w3c.dom.Element,org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.PropertyValues,org.springframework.beans.PropertyValues)
org/springframework/jms/connection/CachingConnectionFactory$CachedSessionInvocationHandler/physicalClose()
org/springframework/jms/support/SimpleJmsHeaderMapper/toHeaders(javax.jms.Message)
org/springframework/jms/listener/DefaultMessageListenerContainer/handleListenerSetupFailure(java.lang.Throwable,boolean)
org/springframework/jms/connection/CachingConnectionFactory$CachedSessionInvocationHandler/logicalClose(javax.jms.Session)
org/springframework/jms/config/AbstractJmsListenerContainerFactory/createListenerContainer(org.springframework.jms.config.JmsListenerEndpoint)
org/springframework/jms/listener/DefaultMessageListenerContainer/refreshConnectionUntilSuccessful()
org/springframework/jms/connection/CachingConnectionFactory$CachedSessionInvocationHandler/getCachedProducer(javax.jms.Destination)
org/springframework/jms/connection/CachingConnectionFactory$CachedSessionInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/springframework/jms/listener/adapter/MessageListenerAdapter/invokeListenerMethod(java.lang.String,java.lang.Object%5B%5D)
org/springframework/jms/core/JmsTemplate/doSend(javax.jms.MessageProducer,javax.jms.Message)
org/springframework/jms/listener/DefaultMessageListenerContainer$AsyncMessageListenerInvoker/run()
org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener/buildMessage(javax.jms.Session,java.lang.Object)
org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor/processJmsListener(org.springframework.jms.annotation.JmsListener,java.lang.reflect.Method,java.lang.Object)
org/springframework/jms/listener/endpoint/JmsActivationSpecConfig/setConcurrency(java.lang.String)
org/springframework/jms/core/JmsTemplate/doSendAndReceive(javax.jms.Session,javax.jms.Destination,org.springframework.jms.core.MessageCreator)
org/springframework/jms/config/AbstractListenerContainerParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/jms/listener/DefaultMessageListenerContainer/doShutdown()
org/springframework/jms/listener/AbstractJmsListeningContainer/resumePausedTasks()
org/springframework/jms/listener/AbstractPollingMessageListenerContainer/doReceiveAndExecute(java.lang.Object,javax.jms.Session,javax.jms.MessageConsumer,org.springframework.transaction.TransactionStatus)
org/springframework/jms/connection/SingleConnectionFactory$SharedConnectionInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
