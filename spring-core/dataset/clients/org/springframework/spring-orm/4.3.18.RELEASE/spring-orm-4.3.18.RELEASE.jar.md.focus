org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/buildDefaultPersistenceUnitInfo()
org/springframework/orm/jpa/JpaTransactionManager/doCleanupAfterCompletion(java.lang.Object)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/lookupSessionFactory()
org/springframework/orm/hibernate3/HibernateTransactionManager/afterPropertiesSet()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceContext(java.lang.String,boolean)
org/springframework/orm/jdo/JdoTransactionManager/doGetTransaction()
org/springframework/orm/hibernate3/annotation/AnnotationSessionFactoryBean/scanPackages(org.hibernate.cfg.Configuration)
org/springframework/orm/hibernate3/FilterDefinitionFactoryBean/setParameterTypes(java.util.Map)
org/springframework/orm/hibernate4/HibernateTemplate/prepareCriteria(org.hibernate.Criteria)
org/springframework/orm/jdo/support/OpenPersistenceManagerInViewFilter/lookupPersistenceManagerFactory()
org/springframework/orm/hibernate3/SessionFactoryUtils/doGetSession(org.hibernate.SessionFactory,org.hibernate.Interceptor,org.springframework.jdbc.support.SQLExceptionTranslator,boolean)
org/springframework/orm/jdo/TransactionAwarePersistenceManagerFactoryProxy$PersistenceManagerFactoryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/springframework/orm/jdo/JdoTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)
org/springframework/orm/jdo/JdoTransactionManager/afterPropertiesSet()
org/springframework/orm/hibernate3/support/BlobSerializableType/deepCopy(java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)
org/springframework/orm/hibernate5/SessionFactoryUtils/getDataSource(org.hibernate.SessionFactory)
org/springframework/orm/hibernate3/HibernateTemplate/prepareQuery(org.hibernate.Query)
org/springframework/orm/jdo/JdoTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/hibernate4/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/hibernate4/HibernateTransactionManager/doGetTransaction()
org/springframework/orm/jdo/JdoTransactionManager/closePersistenceManagerAfterFailedBegin(org.springframework.orm.jdo.JdoTransactionManager$JdoTransactionObject)
org/springframework/orm/hibernate5/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/hibernate5/SpringSessionContext/currentSession()
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor$2/doWith(java.lang.reflect.Method)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/findPersistenceMetadata(java.lang.String,java.lang.Class,org.springframework.beans.PropertyValues)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/jpa/EntityManagerFactoryUtils/doGetTransactionalEntityManager(javax.persistence.EntityManagerFactory,java.util.Map,boolean)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/invokeProxyMethod(java.lang.reflect.Method,java.lang.Object%5B%5D)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor$PersistenceElement/PersistenceAnnotationBeanPostProcessor$PersistenceElement(org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor,java.lang.reflect.Member,java.lang.reflect.AnnotatedElement,java.beans.PropertyDescriptor)
org/springframework/orm/hibernate4/HibernateTemplate/prepareQuery(org.hibernate.Query)
org/springframework/orm/hibernate3/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/jpa/JpaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/hibernate5/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/buildNativeEntityManagerFactory()
org/springframework/orm/jpa/LocalEntityManagerFactoryBean/createNativeEntityManagerFactory()
org/springframework/orm/hibernate5/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/readPersistenceUnitInfos(java.lang.String%5B%5D)
org/springframework/orm/hibernate4/HibernateJdbcException/HibernateJdbcException(org.hibernate.JDBCException)
org/springframework/orm/jdo/support/OpenPersistenceManagerInViewInterceptor/afterCompletion(org.springframework.web.context.request.WebRequest,java.lang.Exception)
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/doGetPersistenceManager(javax.jdo.PersistenceManagerFactory,boolean)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/scanPackages(java.lang.String%5B%5D)
org/springframework/orm/hibernate4/LocalSessionFactoryBean/afterPropertiesSet()
org/springframework/orm/hibernate4/SessionFactoryUtils/convertHibernateAccessException(org.hibernate.HibernateException)
org/springframework/orm/jdo/JdoTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/springframework/orm/jpa/JpaTransactionManager/doGetTransaction()
org/springframework/orm/hibernate4/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor/getPersistenceUnit(java.lang.String)
org/springframework/orm/hibernate3/LocalSessionFactoryBean/buildSessionFactory()
org/springframework/orm/jdo/support/SpringPersistenceManagerProxyBean$PersistenceManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/springframework/orm/hibernate4/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)
org/springframework/orm/jpa/JpaTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/jpa/support/OpenEntityManagerInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
org/springframework/orm/hibernate5/support/OpenSessionInViewFilter/lookupSessionFactory()
org/springframework/orm/hibernate4/HibernateTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/hibernate4/HibernateTransactionManager/afterPropertiesSet()
org/springframework/orm/hibernate5/HibernateTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/jpa/SharedEntityManagerCreator$DeferredQueryInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/getNativeEntityManagerFactory()
org/springframework/orm/jpa/LocalContainerEntityManagerFactoryBean/createNativeEntityManagerFactory()
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/createEntityManagerFactoryProxy(javax.persistence.EntityManagerFactory)
org/springframework/orm/hibernate5/LocalSessionFactoryBuilder/setJtaTransactionManager(java.lang.Object)
org/springframework/orm/hibernate4/SpringSessionContext/currentSession()
org/springframework/orm/jdo/JdoTransactionManager/doCleanupAfterCompletion(java.lang.Object)
org/springframework/orm/hibernate3/SessionFactoryUtils/getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder,org.hibernate.SessionFactory,org.springframework.jdbc.support.SQLExceptionTranslator)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/lookupSessionFactory()
org/springframework/orm/jdo/PersistenceManagerFactoryUtils/applyTransactionTimeout(javax.jdo.Query,javax.jdo.PersistenceManagerFactory)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parseJarFiles(org.w3c.dom.Element,org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/preparePersistenceUnitInfos()
org/springframework/orm/jpa/JpaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/jdo/JdoTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)
org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler/enlistInCurrentTransaction()
org/springframework/orm/jpa/SharedEntityManagerCreator$SharedEntityManagerInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)
org/springframework/orm/hibernate5/LocalSessionFactoryBean/afterPropertiesSet()
org/springframework/orm/hibernate5/HibernateTemplate/prepareCriteria(org.hibernate.Criteria)
org/springframework/orm/hibernate5/HibernateTransactionManager/doGetTransaction()
org/springframework/orm/hibernate5/HibernateTransactionManager/afterPropertiesSet()
org/springframework/orm/jpa/ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler/doJoinTransaction(boolean)
org/springframework/orm/hibernate5/HibernateJdbcException/HibernateJdbcException(org.hibernate.JDBCException)
org/springframework/orm/hibernate5/LocalSessionFactoryBuilder/scanPackages(java.lang.String%5B%5D)
org/springframework/orm/hibernate5/LocalSessionFactoryBuilder$BootstrapSessionFactoryInvocationHandler/getSessionFactory()
org/springframework/orm/hibernate3/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)
org/springframework/orm/hibernate4/HibernateTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/orm/hibernate3/support/IdTransferringMergeEventListener/entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)
org/springframework/orm/hibernate3/HibernateTransactionManager/doGetTransaction()
org/springframework/orm/hibernate4/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)
org/springframework/orm/jpa/support/PersistenceAnnotationBeanPostProcessor$LocatorDelegate/lookup(java.lang.String,java.lang.Class)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/obtainDefaultPersistenceUnitInfo()
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/determinePersistenceUnitRootUrl(org.springframework.core.io.Resource)
org/springframework/orm/jpa/persistenceunit/ClassFileTransformerAdapter/transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)
org/springframework/orm/hibernate3/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
org/springframework/orm/hibernate5/HibernateTemplate/doExecute(org.springframework.orm.hibernate5.HibernateCallback,boolean)
org/springframework/orm/jpa/persistenceunit/PersistenceUnitReader/parsePersistenceUnitInfo(org.w3c.dom.Element,java.lang.String,java.net.URL)
org/springframework/orm/hibernate3/HibernateJdbcException/HibernateJdbcException(org.hibernate.JDBCException)
org/springframework/orm/hibernate4/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)
org/springframework/orm/hibernate5/HibernateTemplate/prepareQuery(org.hibernate.Query)
org/springframework/orm/jpa/DefaultJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)
org/springframework/orm/hibernate3/HibernateTemplate/doExecute(org.springframework.orm.hibernate3.HibernateCallback,boolean,boolean)
org/springframework/orm/jdo/LocalPersistenceManagerFactoryBean/afterPropertiesSet()
org/springframework/orm/hibernate5/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)
org/springframework/orm/hibernate4/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
org/springframework/orm/hibernate3/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)
org/springframework/orm/hibernate5/support/OpenSessionInViewFilter/doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)
org/springframework/orm/jpa/ExtendedEntityManagerCreator/createProxy(javax.persistence.EntityManager,java.lang.Class,java.lang.ClassLoader,org.springframework.dao.support.PersistenceExceptionTranslator,java.lang.Boolean,boolean,boolean)
org/springframework/orm/hibernate3/HibernateInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)
org/springframework/orm/hibernate5/support/OpenSessionInViewInterceptor/preHandle(org.springframework.web.context.request.WebRequest)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/convertHibernateAccessException(org.hibernate.HibernateException)
org/springframework/orm/jpa/vendor/HibernateJpaSessionFactoryBean/getObject()
org/springframework/orm/hibernate3/SessionFactoryUtils/processDeferredClose(org.hibernate.SessionFactory)
org/springframework/orm/jpa/persistenceunit/DefaultPersistenceUnitManager/readPersistenceUnitInfos()
org/springframework/orm/hibernate3/HibernateTemplate/prepareCriteria(org.hibernate.Criteria)
org/springframework/orm/hibernate5/HibernateTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)
org/springframework/orm/jpa/JpaTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)
org/springframework/orm/jpa/vendor/HibernateJpaDialect/beginTransaction(javax.persistence.EntityManager,org.springframework.transaction.TransactionDefinition)
org/springframework/orm/hibernate3/HibernateTransactionManager/doCleanupAfterCompletion(java.lang.Object)
org/springframework/orm/jpa/AbstractEntityManagerFactoryBean/afterPropertiesSet()
