org/springframework/transaction/config/JtaTransactionManagerFactoryBean/JtaTransactionManagerFactoryBean()
org/springframework/transaction/jta/WebLogicJtaTransactionManager/loadWebLogicTransactionClasses()
org/springframework/transaction/jta/WebSphereUowTransactionManager/execute(org.springframework.transaction.TransactionDefinition,org.springframework.transaction.support.TransactionCallback)
org/springframework/transaction/interceptor/TransactionAspectSupport/commitTransactionAfterReturning(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo)
org/springframework/transaction/annotation/SpringTransactionAnnotationParser/parseTransactionAnnotation(org.springframework.core.annotation.AnnotationAttributes)
org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource/getTransactionAttribute(java.lang.reflect.Method,java.lang.Class)
org/springframework/transaction/interceptor/RuleBasedTransactionAttribute/rollbackOn(java.lang.Throwable)
org/springframework/jca/cci/connection/CciLocalTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/jca/cci/connection/SingleConnectionFactory/initConnection()
org/springframework/jca/work/SimpleTaskWorkManager/executeWork(org.springframework.core.task.TaskExecutor,javax.resource.spi.work.Work,long,boolean,javax.resource.spi.work.ExecutionContext,javax.resource.spi.work.WorkListener)
org/springframework/transaction/jta/JtaTransactionManager/doRegisterAfterCompletionWithJtaTransaction(org.springframework.transaction.jta.JtaTransactionObject,java.util.List)
org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource/computeTransactionAttribute(java.lang.reflect.Method,java.lang.Class)
org/springframework/transaction/jta/JtaTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/transaction/support/AbstractPlatformTransactionManager/handleExistingTransaction(org.springframework.transaction.TransactionDefinition,java.lang.Object,boolean)
org/springframework/jca/work/jboss/JBossWorkManagerUtils/getWorkManager(java.lang.String)
org/springframework/dao/support/DataAccessUtils/objectResult(java.util.Collection,java.lang.Class)
org/springframework/transaction/jta/WebLogicJtaTransactionManager/createTransaction(java.lang.String,int)
org/springframework/transaction/interceptor/TransactionAttributeEditor/setAsText(java.lang.String)
org/springframework/transaction/support/TransactionSynchronizationManager/doUnbindResource(java.lang.Object)
org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource/addTransactionalMethod(java.lang.Class,java.lang.String,org.springframework.transaction.interceptor.TransactionAttribute)
org/springframework/transaction/config/AnnotationDrivenBeanDefinitionParser$AopAutoProxyConfigurer/configureAutoProxyCreator(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/transaction/support/AbstractPlatformTransactionManager/getTransaction(org.springframework.transaction.TransactionDefinition)
org/springframework/transaction/interceptor/TransactionAttributeSourceEditor/setAsText(java.lang.String)
org/springframework/jca/cci/connection/CciLocalTransactionManager/doCleanupAfterCompletion(java.lang.Object)
org/springframework/jca/cci/connection/CciLocalTransactionManager/doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/transaction/jta/WebSphereUowTransactionManager$UOWActionAdapter/run()
org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter/onApplicationEvent(org.springframework.context.ApplicationEvent)
org/springframework/transaction/config/TxAdviceBeanDefinitionParser/parseAttributeSource(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/transaction/annotation/JtaTransactionAnnotationParser/parseTransactionAnnotation(org.springframework.core.annotation.AnnotationAttributes)
org/springframework/transaction/support/TransactionSynchronizationManager/bindResource(java.lang.Object,java.lang.Object)
org/springframework/jca/cci/connection/CciLocalTransactionManager/doBegin(java.lang.Object,org.springframework.transaction.TransactionDefinition)
org/springframework/transaction/interceptor/TransactionAspectSupport/completeTransactionAfterThrowing(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo,java.lang.Throwable)
org/springframework/transaction/jta/JtaTransactionManager/doCommit(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/jca/cci/connection/CciLocalTransactionManager/doRollback(org.springframework.transaction.support.DefaultTransactionStatus)
org/springframework/transaction/jta/JtaTransactionManager/findTransactionManager(javax.transaction.UserTransaction)
org/springframework/jca/work/WorkManagerTaskExecutor/execute(java.lang.Runnable,long)
org/springframework/transaction/jta/WebLogicJtaTransactionManager/doJtaResume(org.springframework.transaction.jta.JtaTransactionObject,java.lang.Object)
org/springframework/transaction/interceptor/MethodMapTransactionAttributeSource/addTransactionalMethod(java.lang.String,org.springframework.transaction.interceptor.TransactionAttribute)
org/springframework/transaction/jta/WebLogicJtaTransactionManager/doJtaBegin(org.springframework.transaction.jta.JtaTransactionObject,org.springframework.transaction.TransactionDefinition)
org/springframework/jca/endpoint/GenericMessageEndpointManager/afterPropertiesSet()
