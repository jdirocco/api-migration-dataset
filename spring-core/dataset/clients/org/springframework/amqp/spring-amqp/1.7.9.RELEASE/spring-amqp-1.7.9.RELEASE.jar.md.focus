org/springframework/amqp/support/converter/DefaultJackson2JavaTypeMapper/getClassIdType(java.lang.String)
org/springframework/amqp/support/postprocessor/AbstractCompressingPostProcessor/postProcessMessage(org.springframework.amqp.core.Message)
org/springframework/amqp/core/AnonymousQueue$Base64UrlNamingStrategy/generateName()
org/springframework/amqp/support/converter/JsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)
org/springframework/amqp/remoting/client/AmqpClientInterceptor/invoke(org.aopalliance.intercept.MethodInvocation)
org/springframework/amqp/support/converter/DefaultJavaTypeMapper/toJavaType(org.springframework.amqp.core.MessageProperties)
org/springframework/amqp/support/converter/SerializerMessageConverter/fromMessage(org.springframework.amqp.core.Message)
org/springframework/amqp/support/SimpleAmqpHeaderMapper/extractContentTypeAsString(java.util.Map)
org/springframework/amqp/support/converter/DefaultClassMapper/toClass(java.lang.String)
org/springframework/amqp/support/converter/DefaultJavaTypeMapper/getClassIdType(java.lang.String)
org/springframework/amqp/support/converter/MessagingMessageConverter/toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)
org/springframework/amqp/utils/SerializationUtils/serialize(java.lang.Object)
org/springframework/amqp/support/converter/DefaultJackson2JavaTypeMapper/toJavaType(org.springframework.amqp.core.MessageProperties)
org/springframework/amqp/support/converter/DefaultJackson2JavaTypeMapper/fromJavaType(com.fasterxml.jackson.databind.JavaType,org.springframework.amqp.core.MessageProperties)
org/springframework/amqp/support/converter/Jackson2JsonMessageConverter/fromMessage(org.springframework.amqp.core.Message)
org/springframework/amqp/support/SimpleAmqpHeaderMapper/fromHeaders(org.springframework.messaging.MessageHeaders,org.springframework.amqp.core.MessageProperties)
org/springframework/amqp/support/converter/Jackson2JsonMessageConverter/createMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)
org/springframework/amqp/support/converter/DefaultJavaTypeMapper/fromJavaType(org.codehaus.jackson.type.JavaType,org.springframework.amqp.core.MessageProperties)
org/springframework/amqp/core/MessageBuilderSupport/copyHeadersIfAbsent(java.util.Map)
org/springframework/amqp/support/SimpleAmqpHeaderMapper/toHeaders(org.springframework.amqp.core.MessageProperties)
org/springframework/amqp/support/converter/JsonMessageConverter/createMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)
org/springframework/amqp/support/converter/WhiteListDeserializingMessageConverter/checkWhiteList(java.lang.Class)
org/springframework/amqp/support/postprocessor/AbstractDecompressingPostProcessor/postProcessMessage(org.springframework.amqp.core.Message)
org/springframework/amqp/support/converter/MarshallingMessageConverter/createMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)
