org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/util/ArrayList/ArrayList(java.util.Collection)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#org/apache/commons/logging/Log/warn(java.lang.Object,java.lang.Throwable)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/util/Arrays/asList(java.lang.Object%5B%5D)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/util/List/addAll(java.util.Collection)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/util/Iterator/next()
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#com/rabbitmq/client/Connection/createChannel()
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/lang/StringBuilder/append(java.lang.Object)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/util/List/iterator()
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/lang/StringBuilder/toString()
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#com/rabbitmq/client/Connection/setId(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/util/Iterator/hasNext()
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#com/rabbitmq/client/Channel/queueDelete(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#org/springframework/amqp/rabbit/junit/BrokerRunning/getConnectionFactory()
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#java/lang/StringBuilder/StringBuilder()
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#org/springframework/amqp/rabbit/junit/BrokerRunning/closeResources(com.rabbitmq.client.Connection,com.rabbitmq.client.Channel)
org/springframework/amqp/rabbit/junit/BrokerRunning/removeTestQueues(java.lang.String%5B%5D)#com/rabbitmq/client/ConnectionFactory/newConnection()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#com/rabbitmq/client/Channel/queueDelete(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/apache/commons/logging/Log/warn(java.lang.Object)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/lang/StringBuilder/append(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#com/rabbitmq/http/client/Client/alivenessTest(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/util/Map/get(java.lang.Object)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/junit/Assert/fail(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/springframework/amqp/rabbit/junit/BrokerRunning/isDefaultQueue(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#com/rabbitmq/client/Channel/queueDeclare(java.lang.String,boolean,boolean,boolean,java.util.Map)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/lang/Integer/valueOf(int)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/springframework/amqp/rabbit/junit/BrokerRunning/fatal()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/lang/Boolean/booleanValue()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/junit/rules/TestWatcher/apply(org.junit.runners.model.Statement,org.junit.runner.Description)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#com/rabbitmq/client/Connection/setId(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/apache/commons/logging/Log/debug(java.lang.Object)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#com/rabbitmq/http/client/Client/Client(java.lang.String,java.lang.String,java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/springframework/amqp/rabbit/junit/BrokerRunning/getAdminUri()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#com/rabbitmq/client/Connection/createChannel()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/junit/Assume/assumeTrue(boolean)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/springframework/amqp/rabbit/junit/BrokerRunning/getConnectionFactory()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/lang/StringBuilder/StringBuilder()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/junit/Assume/assumeNoException(java.lang.Throwable)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/lang/Boolean/valueOf(boolean)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#org/springframework/amqp/rabbit/junit/BrokerRunning/closeResources(com.rabbitmq.client.Connection,com.rabbitmq.client.Channel)
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#com/rabbitmq/client/ConnectionFactory/newConnection()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/lang/StringBuilder/toString()
org/springframework/amqp/rabbit/junit/BrokerRunning/apply(org.junit.runners.model.Statement,org.junit.runner.Description)#java/lang/Exception/getMessage()
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/lang/StringBuilder/append(java.lang.String)
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/util/UUID/randomUUID()
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/util/UUID/getMostSignificantBits()
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/lang/StringBuilder/StringBuilder()
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/nio/ByteBuffer/array()
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/nio/ByteBuffer/wrap(byte%5B%5D)
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#org/springframework/util/Base64Utils/encodeToUrlSafeString(byte%5B%5D)
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/lang/StringBuilder/toString()
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/nio/ByteBuffer/putLong(long)
org/springframework/amqp/rabbit/junit/BrokerRunning/generateId()#java/util/UUID/getLeastSignificantBits()
