org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#java/lang/Exception/getCause()
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#com/microsoft/azure/documentdb/DocumentClientException/getStatusCode()
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#java/lang/Object/equals(java.lang.Object)
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#org/apereo/cas/cosmosdb/CosmosDbDocument/getPartitionKey()
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#java/lang/Class/cast(java.lang.Object)
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/CosmosDbServiceRegistry/createCosmosDbDocument(org.apereo.cas.services.RegisteredService)
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getId()
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#java/lang/Object/getClass()
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/CosmosDbServiceRegistry/insert(org.apereo.cas.services.RegisteredService)
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#java/lang/String/valueOf(long)
org/apereo/cas/services/CosmosDbServiceRegistry/update(org.apereo.cas.services.RegisteredService)#com/microsoft/azure/spring/data/documentdb/core/DocumentDbTemplate/upsert(java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/cosmosdb/CosmosDbObjectFactory/createDocumentDbTemplate(com.microsoft.azure.spring.data.documentdb.DocumentDbFactory,org.apereo.cas.configuration.model.support.cosmosdb.BaseCosmosDbProperties)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#com/microsoft/azure/documentdb/ConsistencyLevel/valueOf(java.lang.String)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#com/microsoft/azure/documentdb/RequestOptions/setOfferThroughput(java.lang.Integer)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/cosmosdb/CosmosDbObjectFactory/CosmosDbObjectFactory(org.springframework.context.ApplicationContext)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#com/microsoft/azure/documentdb/RequestOptions/RequestOptions()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/services/CosmosDbServiceRegistry/CosmosDbServiceRegistry(com.microsoft.azure.spring.data.documentdb.core.DocumentDbTemplate,com.microsoft.azure.spring.data.documentdb.DocumentDbFactory,java.lang.String,java.lang.String)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/configuration/model/support/cosmosdb/CosmosDbServiceRegistryProperties/getCollection()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/configuration/model/support/cosmosdb/CosmosDbServiceRegistryProperties/isDropCollection()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/configuration/model/core/services/ServiceRegistryProperties/getCosmosDb()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/cosmosdb/CosmosDbObjectFactory/createDocumentDbFactory(org.apereo.cas.configuration.model.support.cosmosdb.BaseCosmosDbProperties)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#java/lang/Integer/valueOf(int)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/configuration/model/support/cosmosdb/CosmosDbServiceRegistryProperties/getConsistencyLevel()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#java/lang/Exception/getMessage()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/configuration/CasConfigurationProperties/getServiceRegistry()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#com/microsoft/azure/documentdb/RequestOptions/setConsistencyLevel(com.microsoft.azure.documentdb.ConsistencyLevel)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/configuration/model/support/cosmosdb/CosmosDbServiceRegistryProperties/getDatabase()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/cosmosdb/CosmosDbObjectFactory/getCollectionLink(java.lang.String,java.lang.String)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#com/microsoft/azure/documentdb/DocumentClient/deleteCollection(java.lang.String,com.microsoft.azure.documentdb.RequestOptions)
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#com/microsoft/azure/spring/data/documentdb/DocumentDbFactory/getDocumentClient()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#org/apereo/cas/configuration/model/support/cosmosdb/CosmosDbServiceRegistryProperties/getThroughput()
org/apereo/cas/config/CosmosDbServiceRegistryConfiguration/cosmosDbServiceRegistry()#com/microsoft/azure/spring/data/documentdb/core/DocumentDbTemplate/createCollectionIfNotExists(java.lang.String,java.lang.String,java.lang.Integer)
