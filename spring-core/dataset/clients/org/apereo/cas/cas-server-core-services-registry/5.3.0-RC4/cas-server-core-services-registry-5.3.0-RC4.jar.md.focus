org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry/load()
org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry/getRegisteredServiceFromFile(java.io.File)
org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry/initializeRegistry(java.nio.file.Path,java.util.Collection,boolean,org.springframework.context.ApplicationEventPublisher,org.apereo.cas.services.replication.RegisteredServiceReplicationStrategy,org.apereo.cas.services.resource.RegisteredServiceResourceNamingStrategy)
org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry/save(org.apereo.cas.services.RegisteredService)
org/apereo/cas/services/AbstractServicesManager/processExpiredRegisteredService(org.apereo.cas.services.RegisteredService)
org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry/AbstractResourceBasedServiceRegistry(org.springframework.core.io.Resource,java.util.Collection,boolean,org.springframework.context.ApplicationEventPublisher,org.apereo.cas.services.replication.RegisteredServiceReplicationStrategy,org.apereo.cas.services.resource.RegisteredServiceResourceNamingStrategy)
org/apereo/cas/services/AbstractServicesManager/getRegisteredServicesFilteringPredicate(java.util.function.Predicate%5B%5D)
org/apereo/cas/services/resource/AbstractResourceBasedServiceRegistry/load(java.io.File)
org/apereo/cas/services/AbstractServicesManager/load()
org/apereo/cas/services/replication/DefaultRegisteredServiceReplicationStrategy/updateLoadedRegisteredServicesFromCache(java.util.List,org.apereo.cas.services.ServiceRegistry)
org/apereo/cas/services/resource/ModifyResourceBasedRegisteredServiceWatcher/lambda$accept$0(java.io.File,org.apereo.cas.services.RegisteredService)
org/apereo/cas/services/ServiceRegistryInitializer/initServiceRegistryIfNecessary()
org/apereo/cas/services/replication/DefaultRegisteredServiceReplicationStrategy/getRegisteredServiceFromCacheByPredicate(org.apereo.cas.services.RegisteredService,java.util.function.Predicate,org.apereo.cas.services.ServiceRegistry)
