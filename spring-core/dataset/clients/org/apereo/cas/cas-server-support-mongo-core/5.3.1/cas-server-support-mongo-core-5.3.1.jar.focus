org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider/addIncludeFilter(org.springframework.core.type.filter.TypeFilter)
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#java/util/Iterator/hasNext()
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider/findCandidateComponents(java.lang.String)
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#org/springframework/util/ClassUtils/forName(java.lang.String,java.lang.ClassLoader)
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#java/util/HashSet/HashSet()
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#java/util/Set/add(java.lang.Object)
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#java/util/HashSet/HashSet(int)
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#org/springframework/core/type/filter/AnnotationTypeFilter/AnnotationTypeFilter(java.lang.Class)
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#java/util/Iterator/next()
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#org/springframework/beans/factory/config/BeanDefinition/getBeanClassName()
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#java/util/Set/iterator()
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#java/lang/Object/getClass()
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#java/lang/Class/getClassLoader()
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#java/lang/Exception/getMessage()
org/apereo/cas/mongo/MongoDbConnectionFactory/scanForEntities(java.lang.String)#org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider/ClassPathScanningCandidateComponentProvider(boolean)
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getAuthenticationDatabaseName()
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getDatabaseName()
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/slf4j/Logger/error(java.lang.String)
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientURI/getCredentials()
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/SimpleMongoDbFactory/SimpleMongoDbFactory(com.mongodb.Mongo,java.lang.String,org.springframework.data.authentication.UserCredentials,java.lang.String)
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoCredential/getSource()
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptions(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoClientURI(java.lang.String,com.mongodb.MongoClientOptions)
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getClientUri()
org/apereo/cas/mongo/MongoDbConnectionFactory/mongoDbFactory(com.mongodb.Mongo,org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientURI/getDatabase()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/ServerAddress/ServerAddress(java.lang.String,int)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getPort()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/lang/String/split(java.lang.String)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getHost()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(java.lang.String,com.mongodb.MongoClientOptions)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/util/stream/Collectors/toList()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getClientUri()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/beans/factory/BeanCreationException/BeanCreationException(java.lang.String)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/util/List/add(java.lang.Object)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/lang/Integer/valueOf(int)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/util/Arrays/stream(java.lang.Object%5B%5D)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClient/MongoClient(java.util.List,java.util.List,com.mongodb.MongoClientOptions)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/util/stream/Stream/map(java.util.function.Function)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/util/CollectionUtils/wrap(java.lang.Object)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptions(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/util/ArrayList/ArrayList()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClient(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoCredential(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setHeartbeatConnectTimeout(int)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#java/time/Duration/toMillis()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getWriteConcern()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setMaxConnectionLifeTime(int)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setWriteConcern(com.mongodb.WriteConcern)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/destroy()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/getMaxConnectionIdleTime()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setSsl(boolean)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/getMaxConnectionLifeTime()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/getSocketTimeout()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/getHeartbeatConnectTimeout()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/getRequiredReplicaSetName()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getIdleTimeout()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/isSocketKeepAlive()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/isSslEnabled()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setRequiredReplicaSetName(java.lang.String)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/getConnectTimeout()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoClientURI(java.lang.String,com.mongodb.MongoClientOptions)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/getObject()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setSocketTimeout(int)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setSocketKeepAlive(boolean)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/isSslEnabled()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setSslSocketFactory(javax.net.ssl.SSLSocketFactory)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/getWriteConcern()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/support/Beans/newDuration(java.lang.String)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getReplicaSet()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setConnectTimeout(int)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties$MongoDbConnections/getLifetime()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setMaxConnectionIdleTime(int)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setHeartbeatSocketTimeout(int)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/MongoClientOptionsFactoryBean()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties$MongoDbConnections/getPerHost()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getTimeout()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/setConnectionsPerHost(int)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getClientUri()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/isSocketKeepAlive()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/afterPropertiesSet()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#org/apereo/cas/configuration/model/support/mongo/BaseMongoDbProperties/getConns()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/WriteConcern/valueOf(java.lang.String)
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientURI/getOptions()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/getConnectionsPerHost()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#com/mongodb/MongoClientOptions/getHeartbeatSocketTimeout()
org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoDbClientOptionsFactoryBean(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)#javax/net/ssl/SSLSocketFactory/getDefault()
