org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/authenticateDevice(java.lang.String,com.yubico.u2f.data.DeviceRegistration)#org/apereo/cas/adaptors/u2f/storage/U2FDeviceRegistration/U2FDeviceRegistration()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/authenticateDevice(java.lang.String,com.yubico.u2f.data.DeviceRegistration)#java/time/LocalDate/now()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/authenticateDevice(java.lang.String,com.yubico.u2f.data.DeviceRegistration)#org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getCipherExecutor()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/authenticateDevice(java.lang.String,com.yubico.u2f.data.DeviceRegistration)#org/apereo/cas/adaptors/u2f/storage/U2FDeviceRegistration/setRecord(java.lang.String)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/authenticateDevice(java.lang.String,com.yubico.u2f.data.DeviceRegistration)#com/yubico/u2f/data/DeviceRegistration/toJson()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/authenticateDevice(java.lang.String,com.yubico.u2f.data.DeviceRegistration)#org/apereo/cas/adaptors/u2f/storage/U2FDeviceRegistration/setUsername(java.lang.String)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/authenticateDevice(java.lang.String,com.yubico.u2f.data.DeviceRegistration)#org/apereo/cas/CipherExecutor/encode(java.lang.Object)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/authenticateDevice(java.lang.String,com.yubico.u2f.data.DeviceRegistration)#org/springframework/data/mongodb/core/MongoTemplate/save(java.lang.Object,java.lang.String)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/authenticateDevice(java.lang.String,com.yubico.u2f.data.DeviceRegistration)#org/apereo/cas/adaptors/u2f/storage/U2FDeviceRegistration/setCreatedDate(java.time.LocalDate)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#org/springframework/data/mongodb/core/query/Query/Query()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#org/springframework/data/mongodb/core/query/Criteria/lte(java.lang.Object)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#java/lang/Exception/getMessage()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#java/time/LocalDate/now()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#org/springframework/data/mongodb/core/MongoTemplate/remove(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#java/time/LocalDate/minus(long,java.time.temporal.TemporalUnit)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/clean()#org/apereo/cas/util/DateTimeUtils/toChronoUnit(java.util.concurrent.TimeUnit)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#java/util/stream/Stream/map(java.util.function.Function)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#java/util/ArrayList/ArrayList(int)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#org/springframework/data/mongodb/core/query/Query/Query()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.CriteriaDefinition)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#java/util/stream/Stream/filter(java.util.function.Predicate)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/and(java.lang.String)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#org/springframework/data/mongodb/core/MongoTemplate/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#java/lang/Exception/getMessage()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#java/time/LocalDate/now()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#java/util/List/stream()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/gte(java.lang.Object)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#java/util/stream/Collectors/toList()
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#java/time/LocalDate/minus(long,java.time.temporal.TemporalUnit)
org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/getRegisteredDevices(java.lang.String)#org/apereo/cas/util/DateTimeUtils/toChronoUnit(java.util.concurrent.TimeUnit)
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/configuration/model/support/mfa/U2FMultifactorProperties$MongoDb/isDropCollection()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/configuration/model/support/mfa/MultifactorAuthenticationProperties/getU2f()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#com/github/benmanes/caffeine/cache/Caffeine/expireAfterWrite(long,java.util.concurrent.TimeUnit)
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/configuration/model/support/mfa/U2FMultifactorProperties/getExpireRegistrationsTimeUnit()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/mongo/MongoDbConnectionFactory/createCollection(org.springframework.data.mongodb.core.MongoOperations,java.lang.String,boolean)
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/configuration/CasConfigurationProperties/getAuthn()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/mongo/MongoDbConnectionFactory/buildMongoTemplate(org.apereo.cas.configuration.model.support.mongo.BaseMongoDbProperties)
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/configuration/model/support/mfa/U2FMultifactorProperties/getMongo()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/U2FMongoDbDeviceRepository(com.github.benmanes.caffeine.cache.LoadingCache,org.springframework.data.mongodb.core.MongoTemplate,long,java.util.concurrent.TimeUnit,java.lang.String)
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/adaptors/u2f/storage/U2FMongoDbDeviceRepository/setCipherExecutor(org.apereo.cas.CipherExecutor)
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/mongo/MongoDbConnectionFactory/MongoDbConnectionFactory()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/configuration/model/support/mfa/U2FMultifactorProperties/getExpireRegistrations()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/configuration/model/support/mfa/U2FMultifactorProperties$MongoDb/getCollection()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/configuration/model/support/mfa/U2FMultifactorProperties/getExpireDevicesTimeUnit()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#org/apereo/cas/configuration/model/core/authentication/AuthenticationProperties/getMfa()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#com/github/benmanes/caffeine/cache/Caffeine/newBuilder()
org/apereo/cas/config/U2FMongoDbConfiguration/u2fDeviceRepository()#com/github/benmanes/caffeine/cache/Caffeine/build(com.github.benmanes.caffeine.cache.CacheLoader)
