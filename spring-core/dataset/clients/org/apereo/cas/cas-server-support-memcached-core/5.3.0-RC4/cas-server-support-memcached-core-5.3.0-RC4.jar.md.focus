org/apereo/cas/memcached/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org/apereo/cas/memcached/MemcachedUtils/newTranscoder(org.apereo.cas.configuration.model.support.memcached.BaseMemcachedProperties,java.util.Collection)
org/apereo/cas/memcached/kryo/CloseableKryoFactory/registerImmutableOrEmptyCollectionsWithKryo(com.esotericsoftware.kryo.Kryo)
org/apereo/cas/memcached/kryo/serial/ZonedDateTimeSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org/apereo/cas/memcached/kryo/CloseableKryoFactory/create()
org/apereo/cas/memcached/kryo/serial/RegisteredServiceSerializer/readObjectByReflection(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org/apereo/cas/memcached/kryo/CasKryoPool/CasKryoPool(java.util.Collection,boolean,boolean,boolean,boolean)
org/apereo/cas/memcached/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)
org/apereo/cas/memcached/MemcachedPooledClientConnectionFactory/create()
org/apereo/cas/memcached/kryo/CasKryoTranscoder/encode(java.lang.Object)
