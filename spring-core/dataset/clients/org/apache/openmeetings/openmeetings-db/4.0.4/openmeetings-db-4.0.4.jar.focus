org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#org/apache/openmeetings/db/entity/room/StreamClient/getBroadcastId()
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#org/apache/openmeetings/db/entity/room/StreamClient/getType()
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#org/apache/openmeetings/db/entity/basic/Client/toJson(boolean)
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#org/apache/openmeetings/db/entity/room/StreamClient/getUid()
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#org/apache/openmeetings/db/entity/room/StreamClient/getHeight()
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#com/github/openjson/JSONObject/put(java.lang.String,int)
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#org/apache/openmeetings/db/util/RoomHelper/addScreenActivities(com.github.openjson.JSONObject,org.apache.openmeetings.db.entity.room.StreamClient)
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#com/github/openjson/JSONObject/put(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#org/apache/openmeetings/db/entity/room/StreamClient/getWidth()
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#com/github/openjson/JSONObject/JSONObject()
org/apache/openmeetings/db/util/RoomHelper/videoJson(org.apache.openmeetings.db.entity.basic.Client,boolean,java.lang.String,org.apache.openmeetings.db.manager.IStreamClientManager,java.lang.String)#org/apache/openmeetings/db/manager/IStreamClientManager/get(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/apache/openjpa/persistence/FetchPlan/addFetchGroup(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#java/util/List/size()
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/apache/openjpa/persistence/OpenJPAPersistence/cast(javax.persistence.Query)
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#java/util/List/get(int)
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/apache/openjpa/persistence/OpenJPAQuery/getFetchPlan()
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/slf4j/Logger/info(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/apache/openjpa/persistence/OpenJPAPersistence/cast(javax.persistence.EntityManager)
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#java/lang/Long/longValue()
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/apache/openjpa/persistence/FetchPlan/setQueryResultCacheEnabled(boolean)
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/apache/openjpa/persistence/OpenJPAQuery/getResultList()
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/apache/openjpa/persistence/OpenJPAEntityManager/getFetchPlan()
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/apache/openjpa/persistence/OpenJPAEntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long,boolean)#org/apache/openjpa/persistence/FetchPlan/getQueryResultCacheEnabled()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation/setPassword(java.lang.String)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/wicket/util/string/Strings/isEmpty(java.lang.CharSequence)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/util/CalendarHelper/getZoneId(java.lang.String)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation/setAllowEntry(boolean)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#java/util/List/size()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation/getValidTo()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation$Valid/ordinal()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#javax/persistence/EntityManager/flush()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#java/util/List/get(int)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/user/User/getId()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#java/util/TimeZone/getDefault()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation/getValidFrom()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/util/CalendarHelper/getDateTime(java.util.Date,java.lang.String)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#java/time/LocalDateTime/isAfter(java.time.chrono.ChronoLocalDateTime)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/slf4j/Logger/warn(java.lang.String)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#java/time/ZonedDateTime/now(java.time.ZoneId)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#javax/persistence/EntityManager/detach(java.lang.Object)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getOwner()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#java/time/LocalDateTime/isBefore(java.time.chrono.ChronoLocalDateTime)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/user/User/getTimeZoneId()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation/getInvitee()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation/getValid()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation/isUsed()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/dao/room/InvitationDao/update(org.apache.openmeetings.db.entity.room.Invitation)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#java/util/TimeZone/getID()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#java/time/ZonedDateTime/toLocalDateTime()
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation/setUsed(boolean)
org/apache/openmeetings/db/dao/room/InvitationDao/getByHash(java.lang.String,boolean,boolean)#org/apache/openmeetings/db/entity/room/Invitation/getAppointment()
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setPassword(java.lang.String)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setInvitee(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/user/User/setLanguageId(long)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/util/crypt/CryptProvider/get()
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation$Valid/ordinal()
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#java/util/Date/Date()
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setHash(java.lang.String)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setUsed(boolean)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setDeleted(boolean)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/user/User/getType()
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setPasswordProtected(boolean)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setRoom(org.apache.openmeetings.db.entity.room.Room)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setValidFrom(java.util.Date)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setInvitedBy(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setValid(org.apache.openmeetings.db.entity.room.Invitation$Valid)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setAppointment(org.apache.openmeetings.db.entity.calendar.Appointment)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/Invitation()
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#java/util/UUID/randomUUID()
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setInserted(java.util.Date)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/getInvitee()
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/entity/room/Invitation/setValidTo(java.util.Date)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/commons/lang3/time/FastDateFormat/parse(java.lang.String)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#org/apache/openmeetings/util/crypt/ICrypt/hash(java.lang.String)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#java/util/Date/Date(long)
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#java/util/UUID/toString()
org/apache/openmeetings/db/dto/room/InvitationDTO/get(java.lang.Long,org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.room.RoomDao)#java/util/Date/getTime()
org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)#java/util/HashSet/HashSet(java.util.Collection)
org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#java/util/List/size()
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#org/apache/openmeetings/db/entity/server/SOAPLogin/getHash()
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#java/util/List/get(int)
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/openmeetings/db/dao/server/SOAPLoginDao/get(java.lang.String)#org/slf4j/Logger/error(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/util/LinkedHashMap/remove(java.lang.Object)
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/io/File/File(java.net.URI)
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/util/Map$Entry/getKey()
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/net/URL/toURI()
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/io/File/exists()
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/util/Map$Entry/getValue()
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/io/File/delete()
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/util/LinkedHashMap/entrySet()
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#org/apache/openmeetings/db/dao/label/LabelDao/getLabelFileName(java.util.Locale)
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/util/Iterator/next()
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/lang/Class/getResource(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/util/Set/iterator()
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/util/concurrent/ConcurrentHashMap/remove(java.lang.Object)
org/apache/openmeetings/db/dao/label/LabelDao/delete(java.util.Locale)#java/util/Locale/equals(java.lang.Object)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#org/apache/openmeetings/db/entity/server/Sessiondata/getId()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#java/util/List/isEmpty()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#java/util/List/size()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#java/util/Iterator/next()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#org/slf4j/Logger/trace(java.lang.String)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#java/util/Date/Date(long)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#java/lang/Integer/valueOf(int)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#javax/persistence/EntityManager/remove(java.lang.Object)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#java/lang/System/currentTimeMillis()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#java/util/List/iterator()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#org/apache/openmeetings/db/dao/server/SessiondataDao/getSessionToDelete(java.util.Date)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionTable(long)#javax/persistence/EntityManager/find(java.lang.Class,java.lang.Object)
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#org/dom4j/io/SAXReader/read(java.io.File)
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#org/apache/openmeetings/db/dao/label/LabelDao/getAppClass()
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#org/dom4j/Element/elementIterator(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#java/util/LinkedHashMap/clear()
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#org/dom4j/Document/getRootElement()
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#org/slf4j/Logger/error(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#org/apache/openmeetings/db/dao/label/LabelDao/getLangFile()
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#java/lang/Long/valueOf(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#org/dom4j/Element/attributeValue(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#java/util/Locale/forLanguageTag(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#org/dom4j/io/SAXReader/SAXReader()
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#java/util/Iterator/next()
org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()#java/lang/Long/longValue()
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#java/lang/Long/valueOf(long)
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#java/util/Calendar/set(int,int)
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#java/util/Calendar/getTime()
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#java/lang/StringBuilder/append(long)
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#java/util/Calendar/getInstance(java.util.TimeZone)
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#org/apache/openmeetings/db/util/TimezoneUtil/getTimeZone(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dao/room/RoomDao/getAppointedRoomsByUser(long)#org/apache/openmeetings/db/dao/user/UserDao/get(long)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#java/util/ArrayList/ArrayList()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/dto/room/RoomDTO/RoomDTO(org.apache.openmeetings.db.entity.room.Room)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getOwner()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#java/util/Calendar/setTime(java.util.Date)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getTitle()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getDescription()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getLocation()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getInserted()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/isDeleted()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#java/lang/Object/Object()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getMeetingMembers()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/util/TimezoneUtil/getTimeZone(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getIcalId()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/isConnectedEvent()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#java/util/Iterator/next()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getUpdated()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getEnd()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getReminder()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/isReminderEmailSend()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getLanguageId()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/isPasswordProtected()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/dto/user/UserDTO/UserDTO(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/MeetingMemberDTO(org.apache.openmeetings.db.entity.calendar.MeetingMember)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#java/util/List/add(java.lang.Object)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getStart()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#java/util/List/iterator()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#java/util/Calendar/getInstance(java.util.TimeZone)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getRoom()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/AppointmentDTO(org.apache.openmeetings.db.entity.calendar.Appointment)#org/apache/openmeetings/db/entity/calendar/Appointment/getId()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setFirstname(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setType(org.apache.openmeetings.db.entity.user.User$Type)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/wicket/util/string/Strings/isEmpty(java.lang.CharSequence)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/getAddress()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/lang/Long/longValue()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/getLanguageId()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/util/List/get(int)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setLanguageId(long)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setLastname(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/Address/Address()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setOwnerId(java.lang.Long)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/util/List/isEmpty()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/lang/String/length()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/util/UUID/randomUUID()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setLogin(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/getTimeZoneId()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setTimeZoneId(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/getId()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#java/util/UUID/toString()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setAddress(org.apache.openmeetings.db.entity.user.Address)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/util/OpenmeetingsVariables/getMinLoginLength()
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dao/label/LabelDao/getLocale(java.lang.Long)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/Address/setEmail(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/User()
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/openmeetings/db/dao/user/UserDao/setAdditionalParams(javax.persistence.TypedQuery,java.util.Map)
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/wicket/util/string/Strings/isEmpty(java.lang.CharSequence)
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/openmeetings/db/dao/user/UserDao/getAdditionalWhere(boolean,java.lang.Long,java.util.Map)
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#javax/persistence/EntityManager/createQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/openmeetings/util/DaoHelper/getStringParam(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/HashMap/HashMap()
org/apache/openmeetings/db/dao/user/UserDao/getUserProfileQuery(java.lang.Class,java.lang.Long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)#org/apache/openmeetings/db/dao/user/UserDao/getAdditionalJoin(boolean)
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getHash()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getType()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getId()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getOwnerId()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getSize()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getExternalId()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getHeight()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getGroupId()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getRoomId()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getWidth()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getExternalType()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getParentId()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getName()
org/apache/openmeetings/db/dto/file/FileItemDTO/FileItemDTO(org.apache.openmeetings.db.entity.file.FileItem)#java/lang/Object/Object()
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#java/util/List/isEmpty()
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#java/util/List/get(int)
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getExternal(org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/lang/Long/valueOf(long)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/util/Date/equals(java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/room/Room/setCapacity(long)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getTitle()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#javax/persistence/EntityManager/persist(java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getDescription()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/util/Set/iterator()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/util/Set/remove(java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/room/RoomDao/update(org.apache.openmeetings.db.entity.room.Room,java.lang.Long)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/isDeleted()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/calendar/AppointmentDao/get(java.lang.Long)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getMeetingMembers()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/setRoom(org.apache.openmeetings.db.entity.room.Room)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/room/IInvitationManager/processInvitation(org.apache.openmeetings.db.entity.calendar.Appointment,org.apache.openmeetings.db.entity.calendar.MeetingMember,org.apache.openmeetings.db.entity.room.Invitation$MessageType,boolean)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/get(java.lang.Long)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getOwner()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/util/Iterator/next()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getEnd()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/lang/Long/longValue()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/util/Date/Date()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/MeetingMember/getId()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/room/Room/setName(java.lang.String)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/calendar/MeetingMemberDao/getMeetingMemberIdsByAppointment(java.lang.Long)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#javax/persistence/EntityManager/merge(java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/util/Set/contains(java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/setUpdated(java.util.Date)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getLocation()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getStart()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/setInserted(java.util.Date)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/room/Room/getId()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/util/List/iterator()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/MeetingMember/setUser(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getRoom()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#java/util/HashSet/HashSet()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/getLong(java.lang.String,java.lang.Long)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/Appointment/getId()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/room/IInvitationManager/processInvitation(org.apache.openmeetings.db.entity.calendar.Appointment,org.apache.openmeetings.db.entity.calendar.MeetingMember,org.apache.openmeetings.db.entity.room.Invitation$MessageType)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/update(org.apache.openmeetings.db.entity.calendar.Appointment,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/calendar/MeetingMember/MeetingMember()
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#org/slf4j/Logger/info(java.lang.String)
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#java/util/List/size()
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#java/lang/Integer/valueOf(int)
org/apache/openmeetings/db/dao/user/UserContactDao/get(java.lang.Long,java.lang.Long)#java/util/List/get(int)
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/entity/room/StreamClient/getBroadcastId()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/entity/room/StreamClient/getType()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/entity/basic/Client/toJson(boolean)
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#java/util/Iterator/next()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#java/util/Set/iterator()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/entity/room/StreamClient/getUid()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#com/github/openjson/JSONObject/put(java.lang.String,int)
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/entity/basic/IClient$Type/name()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/entity/basic/Client/hasAnyActivity(org.apache.openmeetings.db.entity.basic.Client$Activity%5B%5D)
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#com/github/openjson/JSONObject/put(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/entity/room/StreamClient/getWidth()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#com/github/openjson/JSONObject/JSONObject()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/manager/IStreamClientManager/get(java.lang.String)
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#com/github/openjson/JSONArray/JSONArray()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/entity/room/StreamClient/getHeight()
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#org/apache/openmeetings/db/util/RoomHelper/addScreenActivities(com.github.openjson.JSONObject,org.apache.openmeetings.db.entity.room.StreamClient)
org/apache/openmeetings/db/entity/basic/Client/streamJson(java.lang.String,boolean,org.apache.openmeetings.db.manager.IStreamClientManager)#com/github/openjson/JSONArray/put(java.lang.Object)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getExternalType()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getExternalId()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setType(org.apache.openmeetings.db.entity.user.User$Type)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/wicket/util/string/Strings/isEmpty(java.lang.CharSequence)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dao/user/UserDao/getExternalUser(java.lang.String,java.lang.String)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setExternalType(java.lang.String)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getLanguageId()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getTimeZoneId()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getId()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#java/util/Set/clear()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/MeetingMember/MeetingMember()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getLastname()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getAddress()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setExternalId(java.lang.String)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dao/user/UserDao/getContact(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.String,org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/MeetingMember/setId(java.lang.Long)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/Address/getEmail()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/get(org.apache.openmeetings.db.dao.user.UserDao)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getFirstname()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/getTimeZoneId()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getType()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/getRights()
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/setTimeZoneId(java.lang.String)
org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/MeetingMember/setUser(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#com/github/openjson/JSONObject/get(java.lang.String)
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#com/github/openjson/JSONObject/keySet()
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#com/github/openjson/JSONObject/JSONObject(java.lang.String)
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#java/util/Iterator/next()
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#com/github/openjson/JSONObject/JSONObject()
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#java/util/Set/iterator()
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#com/github/openjson/JSONArray/getJSONObject(int)
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#com/github/openjson/JSONArray/length()
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dto/user/OAuthUser/getJSON(java.lang.String,java.lang.String)#com/github/openjson/JSONObject/has(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#org/apache/openmeetings/util/crypt/CryptProvider/get()
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#org/apache/openmeetings/util/crypt/ICrypt/fallback(java.lang.String,java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#java/util/List/size()
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#org/apache/openmeetings/util/crypt/ICrypt/verify(java.lang.String,java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#org/slf4j/Logger/error(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#org/apache/openmeetings/db/dao/user/UserDao/updatePassword(java.lang.Long,java.lang.String,java.lang.Long)
org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)#java/util/List/get(int)
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#org/apache/commons/lang3/math/NumberUtils/toInt(java.lang.String,int)
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#org/apache/openmeetings/util/OmFileHelper/getStreamsHibernateDir()
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#org/apache/openmeetings/db/entity/file/BaseFileItem/getHash()
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#org/apache/openmeetings/db/entity/file/BaseFileItem/isDeleted()
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#org/apache/openmeetings/db/entity/file/BaseFileItem/getType()
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#org/apache/openmeetings/util/OmFileHelper/getUploadFilesDir()
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#org/apache/openmeetings/util/OmFileHelper/getUploadWmlDir()
org/apache/openmeetings/db/entity/file/BaseFileItem/getFile(java.lang.String)#org/apache/openmeetings/db/entity/file/BaseFileItem$Type/ordinal()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/Application/exists()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/openmeetings/db/dao/label/LabelDao/getAppClass()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/springframework/web/context/support/XmlWebApplicationContext/setServletContext(javax.servlet.ServletContext)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/springframework/web/context/support/XmlWebApplicationContext/XmlWebApplicationContext()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/protocol/http/WebApplication/setName(java.lang.String)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/openmeetings/db/dao/label/LabelDao/initLanguageMap()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#javax/servlet/ServletContext/setAttribute(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/slf4j/Logger/error(java.lang.String)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/protocol/http/mock/MockServletContext/MockServletContext(org.apache.wicket.Application,java.lang.String)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/Application/get(java.lang.String)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/springframework/web/context/support/XmlWebApplicationContext/setConfigLocation(java.lang.String)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/Application/get()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/ThreadContext/setApplication(org.apache.wicket.Application)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#javax/servlet/ServletContextEvent/ServletContextEvent(javax.servlet.ServletContext)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/openmeetings/util/OMContextListener/OMContextListener()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/springframework/web/context/support/XmlWebApplicationContext/refresh()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#java/lang/Class/newInstance()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/protocol/http/WebApplication/getServletContext()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/protocol/http/WebApplication/initApplication()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/protocol/http/WebApplication/setServletContext(javax.servlet.ServletContext)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/openmeetings/util/OpenmeetingsVariables/getWicketApplicationName()
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/wicket/protocol/http/WebApplication/setConfigurationType(org.apache.wicket.RuntimeConfigurationType)
org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()#org/apache/openmeetings/util/OMContextListener/contextInitialized(javax.servlet.ServletContextEvent)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#org/apache/openmeetings/db/entity/room/Room/getName()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#java/util/List/isEmpty()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#java/util/List/get(int)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#org/apache/openmeetings/db/entity/calendar/Appointment/getRoom()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getByRoom(java.lang.Long)#org/apache/openmeetings/db/entity/room/Room/isAppointment()
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setExternalId(java.lang.String)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setHash(java.lang.String)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setId(java.lang.Long)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/FileItem()
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setParentId(java.lang.Long)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setOwnerId(java.lang.Long)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setHeight(java.lang.Integer)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setType(org.apache.openmeetings.db.entity.file.BaseFileItem$Type)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setName(java.lang.String)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setRoomId(java.lang.Long)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#java/lang/Long/longValue()
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setSize(java.lang.Long)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setExternalType(java.lang.String)
org/apache/openmeetings/db/dto/file/FileItemDTO/get()#org/apache/openmeetings/db/entity/file/FileItem/setWidth(java.lang.Integer)
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#javax/persistence/TypedQuery/getSingleResult()
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#java/lang/Long/longValue()
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#java/lang/Boolean/valueOf(boolean)
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/room/PollDao/hasPoll(java.lang.Long)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/apache/openmeetings/db/dao/user/UserDao/verifyPassword(java.lang.Long,java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/apache/openmeetings/db/entity/user/User/getGroupUsers()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#java/util/List/isEmpty()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#java/util/List/size()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/apache/openmeetings/db/entity/user/User/setLastlogin(java.util.Date)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#java/util/Date/Date()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/apache/openmeetings/db/entity/user/User/getId()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/apache/openmeetings/db/entity/user/User/getRights()
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/apache/openmeetings/db/util/AuthLevelUtil/hasLoginLevel(java.util.Set)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#java/util/List/get(int)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/apache/openmeetings/util/OmException/OmException(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/login(java.lang.String,java.lang.String)#org/apache/openmeetings/db/dao/user/UserDao/update(org.apache.openmeetings.db.entity.user.User,java.lang.Long)
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#java/lang/Long/longValue()
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#java/util/List/get(int)
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/server/LdapConfigDao/count()#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getHash()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#java/io/File/File(java.io.File,java.lang.String)
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/util/OmFileHelper/getSize(java.io.File)
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getType()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/getId()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#java/io/File/exists()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#java/util/Iterator/next()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/util/OmFileHelper/getUploadFilesDir()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/BaseFileItem$Type/ordinal()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/entity/file/FileItem/exists()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#java/util/List/iterator()
org/apache/openmeetings/db/dao/file/FileItemDao/getSize(org.apache.openmeetings.db.entity.file.FileItem)#org/apache/openmeetings/db/dao/file/FileItemDao/getByParent(java.lang.Long)
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#java/util/ArrayList/ArrayList()
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#org/apache/openmeetings/db/entity/log/ConferenceLog/getRoomId()
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#java/util/Set/size()
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#java/util/Iterator/next()
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#java/util/Set/contains(java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#java/util/List/add(java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#org/apache/openmeetings/db/entity/room/Room/isDeleted()
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#java/util/HashSet/HashSet()
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#java/util/Set/add(java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#org/apache/openmeetings/db/entity/room/Room/getId()
org/apache/openmeetings/db/dao/room/RoomDao/getRecent(java.lang.Long)#java/util/List/iterator()
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#org/asteriskjava/manager/response/ManagerResponse/toString()
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#org/slf4j/Logger/warn(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#org/asteriskjava/manager/ManagerConnection/sendEventGeneratingAction(org.asteriskjava.manager.action.EventGeneratingAction)
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#org/asteriskjava/manager/ResponseEvents/getResponse()
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#org/asteriskjava/manager/ManagerConnection/logoff()
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#org/asteriskjava/manager/ManagerConnection/login(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#org/apache/openmeetings/db/dao/room/SipDao/getConnection()
org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#org/apache/openmeetings/db/entity/server/Sessiondata/getSessionId()
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#java/lang/Long/Long(long)
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#java/lang/Long/equals(java.lang.Object)
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#java/util/List/isEmpty()
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#java/util/List/get(int)
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#org/apache/openmeetings/db/entity/server/Sessiondata/getUserId()
org/apache/openmeetings/db/dao/server/SessiondataDao/find(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#org/apache/openmeetings/db/entity/room/Room/getConfno()
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#java/lang/Long/valueOf(long)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#org/asteriskjava/manager/action/OriginateAction/setChannel(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#org/asteriskjava/manager/action/OriginateAction/setPriority(java.lang.Integer)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#org/asteriskjava/manager/action/OriginateAction/setContext(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#java/lang/Integer/valueOf(int)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#org/asteriskjava/manager/action/OriginateAction/setTimeout(java.lang.Long)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#org/asteriskjava/manager/action/OriginateAction/setExten(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/joinToConfCall(java.lang.String,org.apache.openmeetings.db.entity.room.Room)#org/asteriskjava/manager/action/OriginateAction/OriginateAction()
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#org/apache/openmeetings/db/util/DtoHelper/optEnumList(java.lang.Class,com.github.openjson.JSONArray)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#com/github/openjson/JSONObject/optLong(java.lang.String,long)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#org/apache/openmeetings/db/util/DtoHelper/optLong(com.github.openjson.JSONObject,java.lang.String)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#com/github/openjson/JSONObject/optString(java.lang.String,java.lang.String)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#java/util/Set/addAll(java.util.Collection)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#org/apache/openmeetings/db/util/DtoHelper/optInt(com.github.openjson.JSONObject,java.lang.String)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#org/apache/openmeetings/db/dto/room/RoomDTO/RoomDTO()
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#java/util/List/add(java.lang.Object)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#com/github/openjson/JSONObject/optBoolean(java.lang.String,boolean)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#com/github/openjson/JSONArray/getJSONObject(int)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#org/apache/openmeetings/db/dto/room/RoomFileDTO/get(com.github.openjson.JSONObject)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#com/github/openjson/JSONArray/length()
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#java/lang/Long/valueOf(long)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#org/apache/openmeetings/db/util/DtoHelper/optEnum(java.lang.Class,com.github.openjson.JSONObject,java.lang.String)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#com/github/openjson/JSONObject/optString(java.lang.String)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#org/apache/openmeetings/db/dto/room/RoomDTO/getFiles()
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#com/github/openjson/JSONObject/optJSONArray(java.lang.String)
org/apache/openmeetings/db/dto/room/RoomDTO/get(com.github.openjson.JSONObject)#org/apache/openmeetings/db/dto/room/RoomDTO/getHiddenElements()
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#com/github/openjson/JSONObject/JSONObject(java.lang.Object)
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#com/github/openjson/JSONObject/get(java.lang.String)
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#com/github/openjson/JSONObject/remove(java.lang.String)
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#java/util/Map$Entry/getKey()
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#com/github/openjson/JSONObject/put(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#com/github/openjson/JSONObject/toString(com.github.openjson.JSONStringer)
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#com/github/openjson/JSONObject/JSONObject(java.lang.String)
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#java/util/Iterator/next()
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#java/lang/String/equals(java.lang.Object)
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#com/github/openjson/JSONObject/JSONObject()
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#java/util/Set/iterator()
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#java/util/Map/entrySet()
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#com/github/openjson/JSONObject/opt(java.lang.String)
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#com/github/openjson/JSONObject/has(java.lang.String)
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#java/util/Map$Entry/getValue()
org/apache/openmeetings/db/dto/room/Whiteboard/toJson()#org/apache/openmeetings/util/NullStringer/NullStringer()
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#java/util/stream/Stream/map(java.util.function.Function)
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#java/util/stream/Stream/collect(java.util.stream.Collector)
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#javax/persistence/TypedQuery/setFirstResult(int)
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#javax/persistence/TypedQuery/setMaxResults(int)
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#java/util/List/parallelStream()
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#java/util/stream/Collectors/toList()
org/apache/openmeetings/db/dao/file/FileItemDao/getAllRoomFiles(java.lang.String,int,int,java.lang.Long,java.util.List)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/apache/openmeetings/db/entity/server/RemoteSessionObject/toXml()#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/entity/server/RemoteSessionObject/toXml()#org/simpleframework/xml/core/Persister/Persister()
org/apache/openmeetings/db/entity/server/RemoteSessionObject/toXml()#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/entity/server/RemoteSessionObject/toXml()#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/entity/server/RemoteSessionObject/toXml()#java/io/StringWriter/StringWriter()
org/apache/openmeetings/db/entity/server/RemoteSessionObject/toXml()#java/io/StringWriter/toString()
org/apache/openmeetings/db/entity/server/RemoteSessionObject/toXml()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/entity/server/RemoteSessionObject/toXml()#org/simpleframework/xml/Serializer/write(java.lang.Object,java.io.Writer)
org/apache/openmeetings/db/entity/server/RemoteSessionObject/toXml()#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/room/Room/isModerated()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#java/lang/Long/equals(java.lang.Object)
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/calendar/Appointment/getOwner()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#java/util/List/isEmpty()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/room/Room/getModerators()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#java/util/Iterator/next()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#java/util/Set/contains(java.lang.Object)
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/room/Room/getType()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/user/GroupUser/isModerator()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/room/Room/isAppointment()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/user/Group/getId()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/user/User/getGroupUsers()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#java/util/Set/isEmpty()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/room/RoomGroup/getGroup()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/room/Room/getGroups()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/room/RoomModerator/getUser()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/user/User/getRights()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/room/RoomModerator/isSuperModerator()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#java/util/List/iterator()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/user/User/getId()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/entity/user/GroupUser/getGroup()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#java/util/HashSet/HashSet()
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#org/apache/openmeetings/db/util/AuthLevelUtil/hasAdminLevel(java.util.Set)
org/apache/openmeetings/db/util/AuthLevelUtil/getRoomRight(org.apache.openmeetings.db.entity.user.User,org.apache.openmeetings.db.entity.room.Room,org.apache.openmeetings.db.entity.calendar.Appointment,int)#java/util/Set/add(java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/setComment(java.lang.String)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/setType(org.apache.openmeetings.db.entity.room.Room$Type)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#java/util/List/isEmpty()
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/Room()
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/setName(java.lang.String)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#java/util/List/get(int)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/getId()
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/hide(org.apache.openmeetings.db.entity.room.Room$RoomElement)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/setOwnerId(java.lang.Long)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/setAllowRecording(boolean)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/setCapacity(long)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/dao/room/RoomDao/update(org.apache.openmeetings.db.entity.room.Room,java.lang.Long)
org/apache/openmeetings/db/dao/room/RoomDao/getUserRoom(java.lang.Long,org.apache.openmeetings.db.entity.room.Room$Type,java.lang.String)#org/apache/openmeetings/db/entity/room/Room/setAllowUserQuestions(boolean)
org/apache/openmeetings/db/util/ApplicationHelper/destroyApplication()#org/apache/wicket/ThreadContext/setApplication(org.apache.wicket.Application)
org/apache/openmeetings/db/util/ApplicationHelper/destroyApplication()#org/apache/wicket/protocol/http/WebApplication/internalDestroy()
org/apache/openmeetings/db/util/ApplicationHelper/destroyApplication()#org/springframework/web/context/support/XmlWebApplicationContext/destroy()
org/apache/openmeetings/db/util/ApplicationHelper/destroyApplication()#org/apache/wicket/protocol/http/WebApplication/getServletContext()
org/apache/openmeetings/db/util/ApplicationHelper/destroyApplication()#org/apache/openmeetings/util/OpenmeetingsVariables/getWicketApplicationName()
org/apache/openmeetings/db/util/ApplicationHelper/destroyApplication()#org/apache/wicket/ThreadContext/setRequestCycle(org.apache.wicket.request.cycle.RequestCycle)
org/apache/openmeetings/db/util/ApplicationHelper/destroyApplication()#org/apache/wicket/ThreadContext/setSession(org.apache.wicket.Session)
org/apache/openmeetings/db/util/ApplicationHelper/destroyApplication()#org/springframework/web/context/support/WebApplicationContextUtils/getWebApplicationContext(javax.servlet.ServletContext)
org/apache/openmeetings/db/util/ApplicationHelper/destroyApplication()#org/apache/wicket/Application/get(java.lang.String)
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#java/lang/Long/valueOf(long)
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/Address/getCountry()
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#java/util/Locale$Builder/setRegion(java.lang.String)
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#java/lang/Long/longValue()
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#java/util/Locale$Builder/setLanguage(java.lang.String)
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dao/label/LabelDao/getLocale(java.lang.Long)
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#java/lang/Exception/getMessage()
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#java/util/Locale$Builder/build()
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/getAddress()
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#org/slf4j/Logger/error(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#java/util/Locale$Builder/Locale$Builder()
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/user/User/getLanguageId()
org/apache/openmeetings/db/util/LocaleHelper/getLocale(org.apache.openmeetings.db.entity.user.User)#java/util/Locale/getLanguage()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/util/LinkedHashMap/entrySet()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#org/dom4j/Element/addElement(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/util/Locale/toLanguageTag()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#org/apache/openmeetings/util/XmlExport/createDocument()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/util/Set/iterator()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#org/apache/openmeetings/util/XmlExport/toXml(java.io.File,org.dom4j.Document)
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#org/apache/openmeetings/util/XmlExport/createRoot(org.dom4j.Document,java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#org/apache/openmeetings/db/dao/label/LabelDao/getLangFile()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/util/Map$Entry/getKey()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/util/Iterator/next()
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#org/dom4j/Element/addAttribute(java.lang.String,java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()#java/util/Map$Entry/getValue()
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#org/apache/openmeetings/db/dao/room/SipDao/execEvent(org.asteriskjava.manager.action.EventGeneratingAction)
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#org/asteriskjava/manager/action/ConfbridgeListAction/ConfbridgeListAction(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#java/util/Collection/size()
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#java/lang/Integer/valueOf(int)
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#org/asteriskjava/manager/ResponseEvents/getEvents()
org/apache/openmeetings/db/dao/room/SipDao/countUsers(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setRoom(org.apache.openmeetings.db.entity.room.Room)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setReminderEmailSend(boolean)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#java/lang/Long/equals(java.lang.Object)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setIcalId(java.lang.String)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#java/util/Calendar/getTime()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/room/RoomDTO/get(org.apache.openmeetings.db.dao.file.BaseFileItemDao)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#java/util/List/iterator()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dao/calendar/AppointmentDao/get(java.lang.Long)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/getMeetingMembers()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setDescription(java.lang.String)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setConnectedEvent(boolean)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setPasswordProtected(boolean)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#java/util/ArrayList/ArrayList()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setOwner(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setMeetingMembers(java.util.List)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/calendar/MeetingMemberDTO/getId()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#java/util/Iterator/next()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setLanguageId(java.lang.Long)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/Appointment()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setReminder(org.apache.openmeetings.db.entity.calendar.Appointment$Reminder)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/MeetingMember/setAppointment(org.apache.openmeetings.db.entity.calendar.Appointment)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/MeetingMember/getId()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setUpdated(java.util.Date)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setEnd(java.util.Date)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#java/util/List/add(java.lang.Object)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setInserted(java.util.Date)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setId(java.lang.Long)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/dto/user/UserDTO/getId()
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setDeleted(boolean)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setTitle(java.lang.String)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setLocation(java.lang.String)
org/apache/openmeetings/db/dto/calendar/AppointmentDTO/get(org.apache.openmeetings.db.dao.user.UserDao,org.apache.openmeetings.db.dao.file.BaseFileItemDao,org.apache.openmeetings.db.dao.calendar.AppointmentDao,org.apache.openmeetings.db.entity.user.User)#org/apache/openmeetings/db/entity/calendar/Appointment/setStart(java.util.Date)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#java/util/Iterator/next()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#java/util/List/add(java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#java/util/List/iterator()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/calendar/AppointmentDao/getInRange(java.lang.Long,java.util.Date,java.util.Date)#org/apache/openmeetings/db/entity/calendar/Appointment/setConnectedEvent(boolean)
org/apache/openmeetings/db/dao/room/RoomDao/get()#org/apache/openjpa/persistence/OpenJPAPersistence/cast(javax.persistence.EntityManager)
org/apache/openmeetings/db/dao/room/RoomDao/get()#org/apache/openjpa/persistence/OpenJPAPersistence/cast(javax.persistence.Query)
org/apache/openmeetings/db/dao/room/RoomDao/get()#org/apache/openjpa/persistence/FetchPlan/setQueryResultCacheEnabled(boolean)
org/apache/openmeetings/db/dao/room/RoomDao/get()#org/apache/openjpa/persistence/FetchPlan/addFetchGroups(java.lang.String%5B%5D)
org/apache/openmeetings/db/dao/room/RoomDao/get()#org/apache/openjpa/persistence/OpenJPAQuery/getFetchPlan()
org/apache/openmeetings/db/dao/room/RoomDao/get()#org/apache/openjpa/persistence/OpenJPAQuery/getResultList()
org/apache/openmeetings/db/dao/room/RoomDao/get()#org/apache/openjpa/persistence/OpenJPAEntityManager/getFetchPlan()
org/apache/openmeetings/db/dao/room/RoomDao/get()#org/apache/openjpa/persistence/OpenJPAEntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/room/RoomDao/get()#org/apache/openjpa/persistence/FetchPlan/getQueryResultCacheEnabled()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/util/OpenmeetingsVariables/setApplicationName(java.lang.String)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadPasswdMinLength()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/commons/lang3/math/NumberUtils/toInt(java.lang.String)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadAudioBitrate()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadBaseUrl()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadTimezone()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/util/OpenmeetingsVariables/getWicketApplicationName()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#java/lang/Long/longValue()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#javax/persistence/EntityManager/merge(java.lang.Object)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadCrypt()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadDefaultLang()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/basic/Configuration/setInserted(java.util.Date)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadLoginMinLength()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/basic/Configuration/setDeleted(boolean)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/basic/Configuration/getValue()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#java/lang/String/hashCode()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/basic/Configuration/getId()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRestAllowOrigin()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadSipContext()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadDefaultGroup()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/basic/Configuration/setUser(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadMaxUpload()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/user/UserDao/get(java.lang.Long)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadLnameMinLength()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/basic/Configuration/getKey()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/util/OpenmeetingsVariables/setExtProcessTtl(int)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#javax/persistence/EntityManager/persist(java.lang.Object)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/IApplication/setXFrameOptions(java.lang.String)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/entity/basic/Configuration/setUpdated(java.util.Date)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/IApplication/setContentSecurityPolicy(java.lang.String)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#java/util/Date/Date()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadSipEnabled()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadFnameMinLength()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadGaCode()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/wicket/Application/get(java.lang.String)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/update(org.apache.openmeetings.db.entity.basic.Configuration,java.lang.Long,boolean)#org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadAudioRate()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#org/apache/openmeetings/db/manager/IStreamClientManager/list(java.lang.Long)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#java/lang/String/length()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#java/util/Iterator/next()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#java/lang/String/substring(int,int)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#java/lang/String/indexOf(java.lang.String)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#javax/persistence/EntityManager/remove(java.lang.Object)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#java/util/List/iterator()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#org/apache/openmeetings/db/entity/room/StreamClient/getSwfurl()
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/server/SessiondataDao/clearSessionByRoomId(java.lang.Long)#org/apache/openmeetings/db/dao/server/SessiondataDao/check(java.lang.String)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#java/util/Properties/getProperty(java.lang.String)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#java/lang/Long/valueOf(long)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#java/util/Properties/load(java.io.InputStream)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#org/apache/openmeetings/util/OpenmeetingsVariables/getRoomSettings()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#com/github/openjson/JSONObject/put(java.lang.String,boolean)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#org/apache/openmeetings/db/dao/basic/ConfigurationDao/getBool(java.lang.String,boolean)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#org/apache/openmeetings/util/OmFileHelper/getRootDir()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#java/io/File/File(java.io.File,java.lang.String)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#org/apache/openmeetings/util/OpenmeetingsVariables/setRoomSettings(com.github.openjson.JSONObject)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#com/github/openjson/JSONObject/put(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#org/apache/openmeetings/db/dao/basic/ConfigurationDao/getString(java.lang.String,java.lang.String)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#java/lang/String/equals(java.lang.Object)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#java/util/Properties/Properties()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#com/github/openjson/JSONObject/JSONObject()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#java/io/InputStream/close()
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#java/io/FileInputStream/FileInputStream(java.io.File)
org/apache/openmeetings/db/dao/basic/ConfigurationDao/reloadRoomSettings()#org/apache/openmeetings/db/dao/basic/ConfigurationDao/getLong(java.lang.String,java.lang.Long)
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/protocol/http/WebSession/get()
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/openmeetings/IApplication/getRootRequestMapper()
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/openmeetings/IApplication/getServletContext()
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/protocol/http/mock/MockHttpSession/MockHttpSession(javax.servlet.ServletContext)
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/ThreadContext/setRequestCycle(org.apache.wicket.request.cycle.RequestCycle)
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/ThreadContext/getRequestCycle()
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/mock/MockWebResponse/MockWebResponse()
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/ThreadContext/getSession()
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/openmeetings/IApplication/getExceptionMapperProvider()
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/request/cycle/RequestCycle/RequestCycle(org.apache.wicket.request.cycle.RequestCycleContext)
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/openmeetings/IWebSession/setLanguage(long)
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/protocol/http/mock/MockHttpServletRequest/MockHttpServletRequest(org.apache.wicket.Application,javax.servlet.http.HttpSession,javax.servlet.ServletContext)
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#java/util/function/Supplier/get()
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/protocol/http/servlet/ServletWebRequest/ServletWebRequest(javax.servlet.http.HttpServletRequest,java.lang.String)
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#java/lang/Long/longValue()
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/wicket/request/cycle/RequestCycleContext/RequestCycleContext(org.apache.wicket.request.Request,org.apache.wicket.request.Response,org.apache.wicket.request.IRequestMapper,org.apache.wicket.request.IExceptionMapper)
org/apache/openmeetings/db/util/ApplicationHelper/ensureApplication(java.lang.Long)#org/apache/openmeetings/db/util/ApplicationHelper/_ensureApplication()
org/apache/openmeetings/db/dao/user/UserDao/getAllBackupUsers()#org/apache/openjpa/persistence/OpenJPAPersistence/cast(javax.persistence.EntityManager)
org/apache/openmeetings/db/dao/user/UserDao/getAllBackupUsers()#org/apache/openjpa/persistence/OpenJPAPersistence/cast(javax.persistence.Query)
org/apache/openmeetings/db/dao/user/UserDao/getAllBackupUsers()#org/apache/openjpa/persistence/FetchPlan/setQueryResultCacheEnabled(boolean)
org/apache/openmeetings/db/dao/user/UserDao/getAllBackupUsers()#org/apache/openjpa/persistence/FetchPlan/addFetchGroups(java.lang.String%5B%5D)
org/apache/openmeetings/db/dao/user/UserDao/getAllBackupUsers()#org/apache/openjpa/persistence/OpenJPAQuery/getFetchPlan()
org/apache/openmeetings/db/dao/user/UserDao/getAllBackupUsers()#org/apache/openjpa/persistence/OpenJPAQuery/getResultList()
org/apache/openmeetings/db/dao/user/UserDao/getAllBackupUsers()#org/apache/openjpa/persistence/OpenJPAEntityManager/getFetchPlan()
org/apache/openmeetings/db/dao/user/UserDao/getAllBackupUsers()#org/apache/openjpa/persistence/OpenJPAEntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/user/UserDao/getAllBackupUsers()#org/apache/openjpa/persistence/FetchPlan/getQueryResultCacheEnabled()
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#java/util/List/isEmpty()
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openjpa/persistence/OpenJPAPersistence/cast(javax.persistence.Query)
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openjpa/persistence/FetchPlan/addFetchGroups(java.lang.String%5B%5D)
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#java/util/List/get(int)
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openjpa/persistence/OpenJPAQuery/getFetchPlan()
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/slf4j/Logger/info(java.lang.String)
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openjpa/persistence/OpenJPAPersistence/cast(javax.persistence.EntityManager)
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#java/lang/Long/longValue()
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openjpa/persistence/FetchPlan/setQueryResultCacheEnabled(boolean)
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openjpa/persistence/OpenJPAQuery/getResultList()
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openjpa/persistence/OpenJPAEntityManager/getFetchPlan()
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openjpa/persistence/OpenJPAEntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/room/RoomDao/get(java.lang.Long)#org/apache/openjpa/persistence/FetchPlan/getQueryResultCacheEnabled()
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#java/util/ArrayList/ArrayList(int)
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#org/apache/openmeetings/db/dto/basic/SearchResult/getRecords()
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#org/apache/openmeetings/db/dto/basic/SearchResult/getErrorKey()
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#java/util/Collection/size()
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#org/apache/openmeetings/db/dto/user/UserDTO/UserDTO(org.apache.openmeetings.db.entity.user.User)
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#java/util/List/add(java.lang.Object)
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#java/util/Collection/iterator()
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#org/apache/openmeetings/db/dto/basic/SearchResult/getObjectName()
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#java/lang/Object/Object()
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#java/util/Iterator/next()
org/apache/openmeetings/db/dto/user/UserSearchResult/UserSearchResult(org.apache.openmeetings.db.dto.basic.SearchResult)#org/apache/openmeetings/db/dto/basic/SearchResult/getResult()
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/dom4j/Element/addElement(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#java/io/File/File(java.net.URI)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#java/net/URL/toURI()
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/apache/openmeetings/db/entity/label/StringLabel/getValue()
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/dom4j/Element/addCDATA(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/apache/openmeetings/util/XmlExport/createRoot(org.dom4j.Document)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/apache/openmeetings/db/entity/label/StringLabel/getKey()
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/apache/openmeetings/db/dao/label/LabelDao$LabelComparator/LabelDao$LabelComparator()
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/apache/openmeetings/db/dao/label/LabelDao/getLabelFileName(java.util.Locale)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#java/util/ArrayList/ArrayList(java.util.Collection)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/apache/openmeetings/util/XmlExport/createDocument()
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#java/util/Iterator/next()
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/dom4j/Element/addAttribute(java.lang.String,java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#java/lang/Class/getResource(java.lang.String)
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#java/util/List/iterator()
org/apache/openmeetings/db/dao/label/LabelDao/storeLabels(java.util.Locale)#org/apache/openmeetings/util/XmlExport/toXml(java.io.File,org.dom4j.Document)
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/util/concurrent/ConcurrentHashMap/put(java.lang.Object,java.lang.Object)
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/util/ArrayList/ArrayList()
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/util/LinkedHashMap/entrySet()
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/util/Iterator/hasNext()
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/lang/Long/valueOf(long)
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/util/Map$Entry/getKey()
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#org/apache/openmeetings/db/dao/label/LabelDao/storeLanguages()
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/util/Set/iterator()
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/util/Iterator/next()
org/apache/openmeetings/db/dao/label/LabelDao/add(java.util.Locale)#java/lang/Long/longValue()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setFirstname(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setRights(java.util.Set)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/util/crypt/CryptProvider/get()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/updatePassword(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/util/crypt/ICrypt/randomPassword(int)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/Address/getEmail()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/util/OpenmeetingsVariables/getDefaultTimezone()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#java/util/Date/Date()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setGroupUsers(java.util.List)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/dao/user/UserDao/update(org.apache.openmeetings.db.entity.user.User,java.lang.Long)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setResethash(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#java/util/ArrayList/ArrayList()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/AsteriskSipUser/AsteriskSipUser()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/wicket/util/string/Strings/isEmpty(java.lang.CharSequence)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setActivatehash(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setLastname(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/Address/Address()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/getAddress()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#javax/persistence/Query/executeUpdate()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setExternalId(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setSipUser(org.apache.openmeetings.db.entity.user.AsteriskSipUser)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#javax/persistence/EntityManager/createNamedQuery(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#java/util/UUID/randomUUID()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/getPictureuri()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setLogin(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/slf4j/Logger/error(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setPictureuri(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setTimeZoneId(java.lang.String)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setDeleted(boolean)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#javax/persistence/Query/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/getId()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setAge(java.util.Date)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#java/util/HashSet/HashSet()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/db/entity/user/User/setAddress(org.apache.openmeetings.db.entity.user.Address)
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#java/io/File/delete()
org/apache/openmeetings/db/dao/user/UserDao/purge(org.apache.openmeetings.db.entity.user.User,java.lang.Long)#org/apache/openmeetings/util/OmFileHelper/getUserProfilePicture(java.lang.Long,java.lang.String,java.io.File)
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#javax/persistence/TypedQuery/setParameter(java.lang.String,java.lang.Object)
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#javax/persistence/TypedQuery/getResultList()
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#java/util/List/size()
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#javax/persistence/EntityManager/createNamedQuery(java.lang.String,java.lang.Class)
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/record/RecordingDao/getByExternalId(java.lang.String,java.lang.String)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#org/slf4j/Logger/debug(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#org/asteriskjava/manager/response/ManagerResponse/toString()
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#org/slf4j/Logger/warn(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#java/lang/StringBuilder/append(java.lang.String)
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#org/asteriskjava/manager/ManagerConnection/login()
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#org/asteriskjava/manager/ManagerConnection/logoff()
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#java/lang/StringBuilder/toString()
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#org/apache/openmeetings/db/dao/room/SipDao/getConnection()
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#java/lang/StringBuilder/StringBuilder()
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/openmeetings/db/dao/room/SipDao/exec(org.asteriskjava.manager.action.ManagerAction)#org/asteriskjava/manager/ManagerConnection/sendAction(org.asteriskjava.manager.action.ManagerAction)
