org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/removeFlowRule(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.FlowEntry)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualFlowRuleStore/addOrUpdateFlowRule(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.FlowEntry)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/updateLink(org.onosproject.incubator.net.virtual.VirtualLink,org.onosproject.incubator.net.tunnel.TunnelId,org.onosproject.net.Link$State)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualIntentStore/write(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.intent.IntentData)
org/onosproject/incubator/store/virtual/impl/ConsistentVirtualDeviceMastershipStore/extractNetworkIdFromTopic(java.lang.String)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualMeterStore/lambda$updateMeterState$5(org.onosproject.net.meter.Meter,org.onosproject.net.meter.MeterKey,org.onosproject.incubator.store.meter.impl.MeterData)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualMeterStore/deleteMeter(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.meter.Meter)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations%5B%5D)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualGroupStore/removeGroupEntry(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.group.Group)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelName,org.onosproject.net.Annotations%5B%5D)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/modified(org.osgi.service.component.ComponentContext)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowObjectiveStore/initNextGroupsMap()
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/bindPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,org.onosproject.net.PortNumber,org.onosproject.net.ConnectPoint)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/destroyDevicePool(org.onosproject.net.DeviceId)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/internalApply(org.onosproject.incubator.net.resource.label.LabelResourceRequest)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore$InternalMapEventListener/event(org.onosproject.store.service.MapEvent)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/activate()
org/onosproject/incubator/store/virtual/impl/ConsistentVirtualDeviceMastershipStore/getNodes(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/updatePortState(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,org.onosproject.net.PortNumber,boolean)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/applyFromDevicePool(org.onosproject.net.DeviceId,long)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/releaseToDevicePool(com.google.common.collect.Multimap)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/storeBatchInternal(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.oldbatch.FlowRuleBatchOperation)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/removePort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,org.onosproject.net.PortNumber)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualPacketStore/modified(org.osgi.service.component.ComponentContext)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/addNetwork(org.onosproject.incubator.net.virtual.TenantId)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/storeBatch(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.oldbatch.FlowRuleBatchOperation)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/getFlowEntry(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.FlowRule)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualPacketStore$PacketRequestTracker/DistributedVirtualPacketStore$PacketRequestTracker(org.onosproject.incubator.store.virtual.impl.DistributedVirtualPacketStore)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/activate()
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/releaseToGlobalPool(java.util.Set)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualGroupStore/groupMissing(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.group.Group)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/create(org.onosproject.incubator.net.resource.label.LabelResourcePool)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualPacketStore/lambda$requestPackets$1(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.packet.PacketRequest,org.onosproject.net.flow.TrafficSelector,java.util.Set)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualGroupStore/addOrUpdateGroupEntry(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.group.Group)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore$InternalSetListener/event(org.onosproject.store.service.SetEvent)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualMastershipStore/getDevices(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.cluster.NodeId)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualGroupStore/deviceInitialAuditCompleted(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,boolean)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/lambda$storeBatch$2(org.onosproject.net.flow.oldbatch.FlowRuleBatchOperation,org.onosproject.cluster.NodeId,org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,java.lang.Void,java.lang.Throwable)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/activate()
org/onosproject/incubator/store/virtual/impl/SimpleVirtualFlowRuleStore/pendingFlowRule(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.FlowEntry)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/getTableStatistics(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/addOrUpdateFlowRuleInternal(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.FlowEntry)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualMeterStore/updateMeter(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.meter.Meter)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/handleCreateOrUpdateTunnel(org.onosproject.incubator.net.tunnel.Tunnel,org.onosproject.incubator.net.tunnel.Tunnel$State)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualGroupStore/pushGroupMetrics(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,java.util.Collection)
org/onosproject/incubator/store/resource/impl/DistributedLabelResourceStore/internalRelease(org.onosproject.incubator.net.resource.label.LabelResourceRequest)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/queryTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore/deleteMeter(org.onosproject.net.meter.Meter)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/addLink(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint,org.onosproject.net.Link$State,org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualIntentStore/addPending(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.intent.IntentData)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualGroupStore/groupOperationFailed(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,org.onosproject.net.group.GroupOperation)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore/addPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,org.onosproject.net.PortNumber,org.onosproject.net.ConnectPoint)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/getFlowEntries(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId)
org/onosproject/incubator/store/virtual/impl/ConsistentVirtualDeviceMastershipStore/activate()
org/onosproject/incubator/store/virtual/impl/SimpleVirtualGroupStore/getUpdatedBucketList(org.onosproject.net.group.Group,org.onosproject.incubator.net.virtual.VirtualNetworkGroupStore$UpdateType,org.onosproject.net.group.GroupBuckets)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualFlowRuleStore/storeBatch(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.oldbatch.FlowRuleBatchOperation)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore$OnStoreBatch/handle(org.onosproject.store.cluster.messaging.ClusterMessage)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore/lambda$updateMeterState$2(org.onosproject.net.meter.Meter,org.onosproject.net.meter.MeterKey,org.onosproject.incubator.store.meter.impl.MeterData)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore$InternalTunnelChangeEventListener/event(org.onosproject.store.service.EventuallyConsistentMapEvent)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore/updateMeter(org.onosproject.net.meter.Meter)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/deleteTunnel(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/store/virtual/impl/SimpleVirtualGroupStore/storeGroupDescriptionInternal(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.group.GroupDescription)
org/onosproject/incubator/store/meter/impl/DistributedMeterStore/activate()
org/onosproject/incubator/store/virtual/impl/SimpleVirtualGroupStore/updateGroupDescription(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,org.onosproject.net.group.GroupKey,org.onosproject.incubator.net.virtual.VirtualNetworkGroupStore$UpdateType,org.onosproject.net.group.GroupBuckets,org.onosproject.net.group.GroupKey)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations%5B%5D)
org/onosproject/incubator/store/tunnel/impl/DistributedTunnelStore/queryTunnel(org.onosproject.incubator.net.tunnel.Tunnel$Type)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualNetworkStore$InternalMapListener/event(org.onosproject.store.service.MapEvent)
org/onosproject/incubator/store/virtual/impl/ConsistentVirtualDeviceMastershipStore/setStandby(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.cluster.NodeId,org.onosproject.net.DeviceId)
org/onosproject/incubator/store/virtual/impl/DistributedVirtualFlowRuleStore/activate(org.osgi.service.component.ComponentContext)
