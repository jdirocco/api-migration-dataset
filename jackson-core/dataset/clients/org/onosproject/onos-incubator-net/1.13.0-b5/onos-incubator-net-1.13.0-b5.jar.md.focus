org/onosproject/incubator/net/virtual/impl/VirtualNetworkTopologyManager/currentTopology()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapVirtualToPhysicalPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager/VirtualNetworkFlowRuleManager(org.onosproject.incubator.net.virtual.VirtualNetworkService,org.onosproject.incubator.net.virtual.NetworkId)
org/onosproject/incubator/net/dpi/impl/DpiStatisticsManager$DpiStatisticsListener/receiveDpiResult()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager$FlowOperationsProcessor/process(java.util.Set)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkMeterManager/submit(org.onosproject.net.meter.MeterRequest)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkIntentManager/VirtualNetworkIntentManager(org.onosproject.incubator.net.virtual.VirtualNetworkService,org.onosproject.incubator.net.virtual.NetworkId)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualPacketProvider/devirtualizeContext(org.onosproject.incubator.net.virtual.VirtualPacketContext)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowObjectiveManager$DefaultVirtualDevicePipeline/forward(org.onosproject.net.flowobjective.ForwardingObjective)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowObjectiveManager/getNextMappings()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager$InternalStoreDelegate/notify(org.onosproject.net.flow.oldbatch.FlowRuleBatchEvent)
org/onosproject/incubator/net/l2monitoring/cfm/impl/CfmMepManager/deleteMep(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MepId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkMeterManager/allocateMeterId(org.onosproject.net.DeviceId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowObjectiveManager/VirtualNetworkFlowObjectiveManager(org.onosproject.incubator.net.virtual.VirtualNetworkService,org.onosproject.incubator.net.virtual.NetworkId)
org/onosproject/incubator/net/l2monitoring/cfm/impl/CfmMepManager/transmitLoopback(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MepId,org.onosproject.incubator.net.l2monitoring.cfm.MepLbCreate)
org/onosproject/incubator/net/virtual/impl/intent/phase/VirtualIntentWithdrawRequest/execute()
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnel(org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkMeterManager/lambda$allocateMeterId$5(long,org.onosproject.net.DeviceId,org.onosproject.net.DeviceId,org.onosproject.store.service.AtomicCounter)
org/onosproject/incubator/net/l2monitoring/cfm/impl/CfmMepManager/getAllMeps(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager/getFlowRulesById(org.onosproject.core.ApplicationId)
org/onosproject/incubator/net/l2monitoring/soam/impl/SoamManager/getDm(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MepId,org.onosproject.incubator.net.l2monitoring.soam.SoamId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkMeterManager/VirtualNetworkMeterManager(org.onosproject.incubator.net.virtual.VirtualNetworkService,org.onosproject.incubator.net.virtual.NetworkId)
org/onosproject/incubator/net/l2monitoring/cfm/impl/DistributedMdStore/activate()
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualFlowRuleProvider/devirtualize(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.FlowRule)
org/onosproject/incubator/net/l2monitoring/cfm/impl/CfmMepManager/abortLoopback(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MepId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkGroupManager$InternalDeviceListener/event(org.onosproject.net.device.DeviceEvent)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkIntentManager$InternalBatchDelegate/lambda$execute$4(java.util.Collection)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager$InternalFlowRuleProviderService/pushFlowMetricsInternal(org.onosproject.net.DeviceId,java.lang.Iterable,boolean)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager$InternalFlowRuleProviderService/VirtualNetworkFlowRuleManager$InternalFlowRuleProviderService(org.onosproject.incubator.net.virtual.impl.VirtualNetworkFlowRuleManager)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualFlowRuleProvider$InternalFlowRuleListener/event(org.onosproject.net.flow.FlowRuleEvent)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualFlowRuleProvider/extractEgressPoints(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,org.onosproject.net.flow.TrafficTreatment)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowObjectiveManager$InternalStoreDelegate/notify(org.onosproject.net.flowobjective.ObjectiveEvent)
org/onosproject/incubator/net/l2monitoring/cfm/impl/CfmMdManager/createMaintenanceAssociation(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.MaintenanceAssociation)
org/onosproject/incubator/net/dpi/impl/DpiStatisticsManager$DpiStatisticsListener/processResultJson(java.lang.String)
org/onosproject/incubator/net/virtual/impl/intent/VirtualIntentInstallCoordinator/finish(org.onosproject.net.intent.IntentInstallationContext)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.Annotations%5B%5D)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelAdded(org.onosproject.incubator.net.tunnel.TunnelDescription)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualPacketProvider/devirtualize(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.packet.OutboundPacket)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/downTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelId)
org/onosproject/incubator/net/l2monitoring/soam/impl/SoamManager/getDmCurrentStat(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MepId,org.onosproject.incubator.net.l2monitoring.soam.SoamId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager$InternalFlowRuleProviderService/flowAdded(org.onosproject.net.flow.FlowEntry)
org/onosproject/incubator/net/virtual/impl/intent/phase/VirtualIntentCompiling/execute()
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualFlowRuleProvider/virtualizeFlowRule(org.onosproject.net.flow.FlowRule)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/borrowTunnel(org.onosproject.core.ApplicationId,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.Annotations%5B%5D)
org/onosproject/incubator/net/dpi/impl/DpiStatisticsManager/processTopn(org.onosproject.incubator.net.dpi.DpiStatistics,int,int)
org/onosproject/incubator/net/virtual/impl/intent/VirtualIntentInstallCoordinator/installIntents(java.util.Optional,java.util.Optional)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager$InternalFlowRuleProviderService/flowRemoved(org.onosproject.net.flow.FlowEntry)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager$InternalFlowRuleProviderService/flowMissing(org.onosproject.net.flow.FlowEntry)
org/onosproject/incubator/net/l2monitoring/cfm/impl/CfmMepManager/getMep(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MepId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkMeterManager/withdraw(org.onosproject.net.meter.MeterRequest,org.onosproject.net.meter.MeterId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkIntentManager$InternalStoreDelegate/releaseResources(org.onosproject.net.intent.Intent)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowObjectiveManager/getPendingFlowObjectives()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkPacketManager$InternalPacketProviderService/processPacket(org.onosproject.net.packet.PacketContext)
org/onosproject/incubator/net/l2monitoring/soam/impl/SoamManager/getDmHistoricalStats(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MepId,org.onosproject.incubator.net.l2monitoring.soam.SoamId)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualFlowRuleProvider/executeBatch(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.flow.oldbatch.FlowRuleBatchOperation)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager/getFlowRulesByGroupId(org.onosproject.core.ApplicationId,short)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelUpdated(org.onosproject.incubator.net.tunnel.TunnelDescription,org.onosproject.incubator.net.tunnel.Tunnel$State)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualFlowRuleProvider/generateRuleForSingle(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint,org.onosproject.net.flow.TrafficSelector,org.onosproject.net.flow.TrafficTreatment,org.onosproject.net.flow.FlowRule)
org/onosproject/incubator/net/l2monitoring/soam/impl/SoamManager/getAllDms(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MepId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkManager/mapPhysicalToVirtualToPort(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkMeterManager$InternalMeterProviderService/pushMeterMetrics(org.onosproject.net.DeviceId,java.util.Collection)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowObjectiveManager$DefaultVirtualDevicePipeline/lambda$forward$2(org.onosproject.net.flow.TrafficSelector,org.onosproject.net.flowobjective.ForwardingObjective,org.onosproject.net.flow.TrafficTreatment)
org/onosproject/incubator/net/l2monitoring/cfm/impl/CfmMepManager/createMep(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.Mep)
org/onosproject/incubator/net/dpi/impl/DpiStatisticsManager/getDpiStatistics(int)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager/getFlowEntriesById(org.onosproject.core.ApplicationId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkIntentManager$InternalBatchDelegate/execute(java.util.Collection)
org/onosproject/incubator/net/l2monitoring/soam/impl/SoamManager/createDm(org.onosproject.incubator.net.l2monitoring.cfm.identifier.MdId,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MaIdShort,org.onosproject.incubator.net.l2monitoring.cfm.identifier.MepId,org.onosproject.incubator.net.l2monitoring.soam.delay.DelayMeasurementCreate)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkMastershipManager/balanceRoles()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowObjectiveManager$DefaultVirtualDevicePipeline/filter(org.onosproject.net.flowobjective.FilteringObjective)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualFlowRuleProvider/extractIngressPoints(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.DeviceId,org.onosproject.net.flow.TrafficSelector)
org/onosproject/incubator/net/tunnel/impl/TunnelManager/removeTunnels(org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.TunnelEndPoint,org.onosproject.incubator.net.tunnel.Tunnel$Type,org.onosproject.net.provider.ProviderId)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualPacketProvider/virtualize(org.onosproject.net.packet.PacketContext)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager$FlowOperationsProcessor/fail(org.onosproject.net.DeviceId,java.util.Set)
org/onosproject/incubator/net/dpi/impl/DpiStatisticsManager/addDpiStatistics(org.onosproject.incubator.net.dpi.DpiStatistics)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowRuleManager$InternalFlowRuleProviderService/checkRuleLiveness(org.onosproject.net.flow.FlowEntry,org.onosproject.net.flow.FlowEntry)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualPacketProvider$InternalVirtualNetworkListener/event(org.onosproject.incubator.net.virtual.VirtualNetworkEvent)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualPacketProvider/getMappedVirtualPort(org.onosproject.net.ConnectPoint)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkGroupManager$InternalStoreDelegate/notify(org.onosproject.net.group.GroupEvent)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkGroupManager/VirtualNetworkGroupManager(org.onosproject.incubator.net.virtual.VirtualNetworkService,org.onosproject.incubator.net.virtual.NetworkId)
org/onosproject/incubator/net/virtual/impl/provider/DefaultVirtualFlowRuleProvider/generateRuleForMulti(org.onosproject.incubator.net.virtual.NetworkId,org.onosproject.net.ConnectPoint,org.onosproject.net.ConnectPoint,org.onosproject.net.flow.TrafficSelector,org.onosproject.net.flow.TrafficTreatment,org.onosproject.net.flow.FlowRule)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkPacketManager/createBuilder(org.onosproject.net.packet.PacketRequest)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkIntentManager$InternalBatchDelegate/lambda$null$2(org.onosproject.net.intent.IntentData,java.lang.Throwable)
org/onosproject/incubator/net/tunnel/impl/TunnelManager$InternalTunnelProviderService/tunnelRemoved(org.onosproject.incubator.net.tunnel.TunnelDescription)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkPacketManager/VirtualNetworkPacketManager(org.onosproject.incubator.net.virtual.VirtualNetworkService,org.onosproject.incubator.net.virtual.NetworkId)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkMastershipManager/setRole(org.onosproject.cluster.NodeId,org.onosproject.net.DeviceId,org.onosproject.net.MastershipRole)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowObjectiveManager$ObjectiveInstaller/run()
org/onosproject/incubator/net/virtual/impl/VirtualNetworkMeterManager$InternalMeterStoreDelegate/notify(org.onosproject.net.meter.MeterEvent)
org/onosproject/incubator/net/virtual/impl/VirtualNetworkFlowObjectiveManager$DefaultVirtualDevicePipeline/installObjective(org.onosproject.net.flow.FlowRule$Builder,org.onosproject.net.flowobjective.Objective)
