org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getTheme()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#java/lang/Long/valueOf(long)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getServiceId()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getEvaluationOrder()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getPublicKey()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getUsernameAttributeProvider()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#com/esotericsoftware/kryo/Kryo/writeObject(com.esotericsoftware.kryo.io.Output,java.lang.Object)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getAccessStrategy()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getDescription()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getAttributeReleasePolicy()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apache/commons/lang3/ObjectUtils/defaultIfNull(java.lang.Object,java.lang.Object)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/writeObjectByReflection(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getLogoutType()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getRequiredHandlers()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/ReturnAllowedAttributeReleasePolicy/ReturnAllowedAttributeReleasePolicy()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getLogo()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getName()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/getEmptyUrl()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getId()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#java/lang/Integer/valueOf(int)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getProxyPolicy()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredServicePublicKeyImpl/RegisteredServicePublicKeyImpl()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apache/commons/lang3/StringUtils/defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/DefaultRegisteredServiceUsernameProvider/DefaultRegisteredServiceUsernameProvider()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RefuseRegisteredServiceProxyPolicy/RefuseRegisteredServiceProxyPolicy()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/DefaultRegisteredServiceAccessStrategy/DefaultRegisteredServiceAccessStrategy()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#java/util/HashSet/HashSet(java.util.Collection)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apereo.cas.services.RegisteredService)#org/apereo/cas/services/RegisteredService/getLogoutUrl()
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#org/apereo/cas/ticket/Ticket/getId()
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#java/lang/Integer/valueOf(int)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#net/spy/memcached/MemcachedClientIF/add(java.lang.String,int,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#net/spy/memcached/MemcachedClientIF/get(java.lang.String)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#org/apereo/cas/ticket/registry/MemCacheTicketRegistry/getTimeout(org.apereo.cas.ticket.Ticket)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#org/apereo/cas/ticket/registry/MemCacheTicketRegistry/encodeTicket(org.apereo.cas.ticket.Ticket)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#java/util/concurrent/Future/get()
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/addTicket(org.apereo.cas.ticket.Ticket)#java/lang/Boolean/booleanValue()
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#org/apereo/cas/ticket/registry/MemCacheTicketRegistry/getTimeout(org.apereo.cas.ticket.Ticket)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#net/spy/memcached/MemcachedClientIF/replace(java.lang.String,int,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#org/slf4j/Logger/error(java.lang.String,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#org/apereo/cas/ticket/Ticket/getId()
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#org/slf4j/Logger/error(java.lang.String,java.lang.Object,java.lang.Object)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#org/apereo/cas/ticket/registry/MemCacheTicketRegistry/encodeTicket(org.apereo.cas.ticket.Ticket)
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#java/util/concurrent/Future/get()
org/apereo/cas/ticket/registry/MemCacheTicketRegistry/updateTicket(org.apereo.cas.ticket.Ticket)#java/lang/Boolean/booleanValue()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#java/util/Map/forEach(java.util.function.BiConsumer)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#org/apereo/cas/ticket/registry/support/kryo/serial/ZonedDateTimeTranscoder/ZonedDateTimeTranscoder()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#com/esotericsoftware/kryo/Kryo/register(java.lang.Class)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/EnumSetSerializer/EnumSetSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/guava/ImmutableMultimapSerializer/registerSerializers(com.esotericsoftware.kryo.Kryo)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/UnmodifiableCollectionsSerializer/registerSerializers(com.esotericsoftware.kryo.Kryo)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/CollectionsEmptySetSerializer/CollectionsEmptySetSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/URISerializer/URISerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#com/esotericsoftware/kryo/Kryo/setAutoReset(boolean)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#org/apereo/cas/ticket/registry/support/kryo/serial/URLSerializer/URLSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#com/esotericsoftware/kryo/Kryo/setRegistrationRequired(boolean)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/guava/ImmutableListSerializer/registerSerializers(com.esotericsoftware.kryo.Kryo)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/guava/ImmutableMapSerializer/registerSerializers(com.esotericsoftware.kryo.Kryo)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/RegisteredServiceSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/CollectionsEmptyMapSerializer/CollectionsEmptyMapSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/RegexSerializer/RegexSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#com/esotericsoftware/kryo/serializers/DefaultSerializers$ClassSerializer/DefaultSerializers$ClassSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/guava/ImmutableSetSerializer/registerSerializers(com.esotericsoftware.kryo.Kryo)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#org/apereo/cas/ticket/registry/support/kryo/serial/SimpleWebApplicationServiceSerializer/SimpleWebApplicationServiceSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#com/esotericsoftware/kryo/Kryo/register(java.lang.Class,com.esotericsoftware.kryo.Serializer)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#java/lang/Object/getClass()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#com/esotericsoftware/kryo/Kryo/setReferences(boolean)
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/EnumMapSerializer/EnumMapSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/UUIDSerializer/UUIDSerializer()
org/apereo/cas/ticket/registry/support/kryo/KryoTranscoder/initialize()#de/javakaffee/kryoserializers/CollectionsEmptyListSerializer/CollectionsEmptyListSerializer()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setLogo(java.net.URL)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#java/lang/Integer/intValue()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setLogoutUrl(java.net.URL)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/readObjectByReflection(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setAttributeReleasePolicy(org.apereo.cas.services.RegisteredServiceAttributeReleasePolicy)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setName(java.lang.String)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setLogoutType(org.apereo.cas.services.LogoutType)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#java/lang/Long/longValue()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setTheme(java.lang.String)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setRequiredHandlers(java.util.Set)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setEvaluationOrder(int)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setAccessStrategy(org.apereo.cas.services.RegisteredServiceAccessStrategy)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/RegexRegisteredService/RegexRegisteredService()
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setServiceId(java.lang.String)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#com/esotericsoftware/kryo/Kryo/readObject(com.esotericsoftware.kryo.io.Input,java.lang.Class)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setDescription(java.lang.String)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setId(long)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setProxyPolicy(org.apereo.cas.services.RegisteredServiceProxyPolicy)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setUsernameAttributeProvider(org.apereo.cas.services.RegisteredServiceUsernameAttributeProvider)
org/apereo/cas/ticket/registry/support/kryo/serial/RegisteredServiceSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#org/apereo/cas/services/AbstractRegisteredService/setPublicKey(org.apereo.cas.services.RegisteredServicePublicKey)
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/Class/getSuperclass()
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/reflect/Field/setAccessible(boolean)
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/Class/getDeclaredField(java.lang.String)
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/Class/getName()
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/StringBuilder/append(char)
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/Object/getClass()
org/apereo/cas/ticket/registry/support/kryo/FieldHelper/getField(java.lang.Object,java.lang.String)#java/lang/StringBuilder/toString()
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#net/spy/memcached/FailureMode/valueOf(java.lang.String)
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#net/spy/memcached/spring/MemcachedClientFactoryBean/setHashAlg(net.spy.memcached.HashAlgorithm)
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#org/apereo/cas/configuration/model/core/ticket/registry/TicketRegistryProperties/getMemcached()
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#net/spy/memcached/ConnectionFactoryBuilder$Locator/valueOf(java.lang.String)
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#com/google/common/base/Throwables/propagate(java.lang.Throwable)
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#org/apereo/cas/configuration/model/support/memcached/MemcachedTicketRegistryProperties/getHashAlgorithm()
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#org/apereo/cas/configuration/model/core/util/TicketProperties/getRegistry()
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#org/apereo/cas/configuration/CasConfigurationProperties/getTicket()
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#net/spy/memcached/spring/MemcachedClientFactoryBean/setServers(java.lang.String)
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#net/spy/memcached/spring/MemcachedClientFactoryBean/setFailureMode(net.spy.memcached.FailureMode)
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#org/apereo/cas/configuration/model/support/memcached/MemcachedTicketRegistryProperties/getFailureMode()
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#net/spy/memcached/spring/MemcachedClientFactoryBean/setLocatorType(net.spy.memcached.ConnectionFactoryBuilder$Locator)
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#org/apereo/cas/configuration/model/support/memcached/MemcachedTicketRegistryProperties/getServers()
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#org/apereo/cas/configuration/model/support/memcached/MemcachedTicketRegistryProperties/getLocatorType()
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#net/spy/memcached/DefaultHashAlgorithm/valueOf(java.lang.String)
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#net/spy/memcached/spring/MemcachedClientFactoryBean/MemcachedClientFactoryBean()
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#net/spy/memcached/spring/MemcachedClientFactoryBean/setTranscoder(net.spy.memcached.transcoders.Transcoder)
org/apereo/cas/config/MemcachedTicketRegistryConfiguration/memcachedClient()#org/apereo/cas/config/MemcachedTicketRegistryConfiguration/kryoTranscoder()
