org/springframework/data/mongodb/core/convert/DBObjectAccessor/get(org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver/createCompoundIndexDefinition(java.lang.String,java.lang.String,org.springframework.data.mongodb.core.index.CompoundIndex,org.springframework.data.mongodb.core.mapping.MongoPersistentEntity)
org/springframework/data/mongodb/core/convert/MongoExampleMapper/applyPropertySpecs(java.lang.String,com.mongodb.DBObject,java.lang.Class,org.springframework.data.repository.core.support.ExampleMatcherAccessor)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/read(org.springframework.data.util.TypeInformation,com.mongodb.DBObject,org.springframework.data.mongodb.core.convert.ObjectPath)
org/springframework/data/mongodb/core/convert/MongoExampleMapper/getMappedExample(org.springframework.data.domain.Example,org.springframework.data.mongodb.core.mapping.MongoPersistentEntity)
org/springframework/data/mongodb/core/convert/DefaultDbRefResolver/bulkFetch(java.util.List)
org/springframework/data/mongodb/config/MongoCredentialPropertyEditor/setAsText(java.lang.String)
org/springframework/data/mongodb/core/DefaultIndexOperations$1/lookupPersistentEntity(java.lang.Class,java.lang.String)
org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/MongoClientOptionsFactoryBean()
org/springframework/data/mongodb/core/convert/QueryMapper$MetadataBackedField/getPath(java.lang.String)
org/springframework/data/mongodb/core/mapping/BasicMongoPersistentEntity$PropertyTypeAssertionHandler/potentiallyAssertDBRefTargetType(org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/index/Index/getIndexKeys()
org/springframework/data/mongodb/core/convert/MappingMongoConverter/writeCollectionInternal(java.util.Collection,org.springframework.data.util.TypeInformation,com.mongodb.BasicDBList)
org/springframework/data/mongodb/core/convert/QueryMapper/getMappedKeyword(org.springframework.data.mongodb.core.convert.QueryMapper$Keyword,org.springframework.data.mongodb.core.mapping.MongoPersistentEntity)
org/springframework/data/mongodb/core/DefaultIndexOperations$1/doInCollection(com.mongodb.DBCollection)
org/springframework/data/mongodb/core/aggregation/SpelExpressionTransformer$LiteralNodeConversion/convert(org.springframework.data.mongodb.core.aggregation.AggregationExpressionTransformer$AggregationExpressionTransformationContext)
org/springframework/data/mongodb/core/convert/DefaultDbRefProxyHandler/populateId(org.springframework.data.mongodb.core.mapping.MongoPersistentProperty,com.mongodb.DBRef,java.lang.Object)
org/springframework/data/mongodb/core/index/GeospatialIndex/getIndexKeys()
org/springframework/data/mongodb/config/MappingMongoConverterParser/parseConverter(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/core/convert/CustomConversions/getCustomTarget(java.lang.Class,java.lang.Class,java.util.Collection)
org/springframework/data/mongodb/core/convert/ObjectPath/getPathItem(java.lang.Object,java.lang.String,java.lang.Class)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver/resolveCompoundIndexKeyFromStringDefinition(java.lang.String,java.lang.String)
org/springframework/data/mongodb/core/MongoFactoryBean/createInstance()
org/springframework/data/mongodb/config/MappingMongoConverterParser/getCustomConversions(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/core/convert/ObjectPath/toString()
org/springframework/data/mongodb/core/convert/QueryMapper/getMappedObject(com.mongodb.DBObject,org.springframework.data.mongodb.core.mapping.MongoPersistentEntity)
org/springframework/data/mongodb/gridfs/GridFsTemplate/getResources(java.lang.String)
org/springframework/data/mongodb/core/convert/QueryMapper/convertAssociation(java.lang.Object,org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/convert/ObjectPath/getPathItem(java.lang.Object,java.lang.String)
org/springframework/data/mongodb/config/ServerAddressPropertyEditor/parseServerAddress(java.lang.String)
org/springframework/data/mongodb/core/convert/DBObjectAccessor/put(org.springframework.data.mongodb.core.mapping.MongoPersistentProperty,java.lang.Object)
org/springframework/data/mongodb/repository/query/ConvertingParameterAccessor/asCollection(java.lang.Object)
org/springframework/data/mongodb/repository/support/MongoAnnotationProcessor/createConfiguration(javax.annotation.processing.RoundEnvironment)
org/springframework/data/mongodb/core/MongoTemplate/doInsertAll(java.util.Collection,org.springframework.data.mongodb.core.convert.MongoWriter)
org/springframework/data/mongodb/core/aggregation/SpelExpressionTransformer/lookupConversionFor(org.springframework.data.mongodb.core.spel.ExpressionNode)
org/springframework/data/mongodb/core/query/Criteria/getCriteriaObject()
org/springframework/data/mongodb/core/MongoTemplate/doSaveVersioned(java.lang.Object,org.springframework.data.mongodb.core.mapping.MongoPersistentEntity,java.lang.String)
org/springframework/data/mongodb/core/index/IndexInfo/indexInfoOf(com.mongodb.DBObject)
org/springframework/data/mongodb/core/aggregation/Fields/verify(java.util.List)
org/springframework/data/mongodb/core/convert/DefaultMongoTypeMapper/writeTypeRestrictions(com.mongodb.DBObject,java.util.Set)
org/springframework/data/mongodb/repository/query/MongoQueryMethod/isGeoNearQuery(java.lang.reflect.Method)
org/springframework/data/mongodb/config/MongoParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/core/MongoDbUtils/doGetDB(com.mongodb.Mongo,java.lang.String,org.springframework.data.authentication.UserCredentials,boolean,java.lang.String)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/writeInternal(java.lang.Object,com.mongodb.DBObject,org.springframework.data.mongodb.core.mapping.MongoPersistentEntity)
org/springframework/data/mongodb/core/MongoTemplate/doInsertBatch(java.lang.String,java.util.Collection,org.springframework.data.mongodb.core.convert.MongoWriter)
org/springframework/data/mongodb/config/MappingMongoConverterParser/potentiallyCreateValidatingMongoEventListener(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/core/MongoClientOptionsFactoryBean/createInstance()
org/springframework/data/mongodb/core/ReflectiveDbInvoker/authenticate(com.mongodb.Mongo,com.mongodb.DB,org.springframework.data.authentication.UserCredentials,java.lang.String)
org/springframework/data/mongodb/gridfs/AntPath/toRegex()
org/springframework/data/mongodb/core/MongoExceptionTranslator/translateExceptionIfPossible(java.lang.RuntimeException)
org/springframework/data/mongodb/core/MongoTemplate/extractIdPropertyAndValue(java.lang.Object)
org/springframework/data/mongodb/core/query/Update/addMultiFieldOperation(java.lang.String,java.lang.String,java.lang.Object)
org/springframework/data/mongodb/core/MongoTemplate$12/doInCollection(com.mongodb.DBCollection)
org/springframework/data/mongodb/core/convert/CustomConversions/CustomConversions(java.util.List)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/read(org.springframework.data.mongodb.core.mapping.MongoPersistentEntity,com.mongodb.DBObject,org.springframework.data.mongodb.core.convert.ObjectPath)
org/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond/resolveCriteria(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext,java.lang.Object)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$1/doWithPersistentProperty(org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/writeMapInternal(java.util.Map,com.mongodb.DBObject,org.springframework.data.util.TypeInformation)
org/springframework/data/mongodb/core/MongoTemplate$UnwrapAndReadDbObjectCallback/doWith(com.mongodb.DBObject)
org/springframework/data/mongodb/config/MappingMongoConverterParser/potentiallyCreateMappingContext(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.config.BeanDefinition,java.lang.String)
org/springframework/data/mongodb/core/MongoTemplate/getIdInQueryFor(java.util.Collection)
org/springframework/data/mongodb/core/convert/MongoExampleMapper/getTypesToMatch(org.springframework.data.domain.Example)
org/springframework/data/mongodb/core/aggregation/GraphLookupOperation/toDBObject(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)
org/springframework/data/mongodb/config/MongoJmxParser/createBeanDefEntry(java.lang.Class,org.springframework.beans.factory.parsing.CompositeComponentDefinition,java.lang.String,java.lang.Object,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/config/ServerAddressPropertyEditor/setAsText(java.lang.String)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver/createIndexDefinition(java.lang.String,java.lang.String,org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/convert/DefaultDbRefResolver$LazyLoadingInterceptor/proxyToString(java.lang.Object)
org/springframework/data/mongodb/core/query/Field/getFieldsObject()
org/springframework/data/mongodb/core/MongoTemplate/geoNear(org.springframework.data.mongodb.core.query.NearQuery,java.lang.Class,java.lang.String)
org/springframework/data/mongodb/core/MongoTemplate/group(org.springframework.data.mongodb.core.query.Criteria,java.lang.String,org.springframework.data.mongodb.core.mapreduce.GroupBy,java.lang.Class)
org/springframework/data/mongodb/config/MappingMongoConverterParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/config/MongoDbFactoryParser/parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/core/index/TextIndexDefinition/getIndexOptions()
org/springframework/data/mongodb/repository/query/MongoQueryCreator/from(org.springframework.data.repository.query.parser.Part,org.springframework.data.mongodb.core.mapping.MongoPersistentProperty,org.springframework.data.mongodb.core.query.Criteria,java.util.Iterator)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$3/doWithPersistentProperty(org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/repository/query/ExpressionEvaluatingParameterBinder/replacePlaceholders(java.lang.String,org.springframework.data.mongodb.repository.query.MongoParameterAccessor,org.springframework.data.mongodb.repository.query.ExpressionEvaluatingParameterBinder$BindingContext)
org/springframework/data/mongodb/repository/support/IndexEnsuringQueryCreationListener/onCreation(org.springframework.data.mongodb.repository.query.PartTreeMongoQuery)
org/springframework/data/mongodb/repository/support/SpringDataMongodbSerializer/getKeyForPath(com.querydsl.core.types.Path,com.querydsl.core.types.PathMetadata)
org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression/toDbObject(java.lang.Object,org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/createMap(java.util.Map,org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexCreator/createIndex(org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver$IndexDefinitionHolder)
org/springframework/data/mongodb/config/MongoDbFactoryParser/getMongoUri(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexCreator/checkForIndexes(org.springframework.data.mongodb.core.mapping.MongoPersistentEntity)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$2/doWithPersistentProperty(org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/convert/QueryMapper/isAssociationConversionNecessary(org.springframework.data.mongodb.core.convert.QueryMapper$Field,java.lang.Object)
org/springframework/data/mongodb/core/convert/DefaultDbRefResolver$LazyLoadingInterceptor/intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D,org.springframework.cglib.proxy.MethodProxy)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/createDBRef(java.lang.Object,org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/aggregation/AbstractAggregationExpression/unpack(java.lang.Object,org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)
org/springframework/data/mongodb/config/MappingMongoConverterParser/getInititalEntityClasses(org.w3c.dom.Element)
org/springframework/data/mongodb/core/convert/DefaultDbRefResolver/createLazyLoadingProxy(org.springframework.data.mongodb.core.mapping.MongoPersistentProperty,com.mongodb.DBRef,org.springframework.data.mongodb.core.convert.DbRefResolverCallback,org.springframework.data.mongodb.core.convert.DbRefProxyHandler)
org/springframework/data/mongodb/core/aggregation/SpelExpressionTransformer$NotOperatorNodeConversion/convert(org.springframework.data.mongodb.core.aggregation.AggregationExpressionTransformer$AggregationExpressionTransformationContext)
org/springframework/data/mongodb/core/convert/DefaultDbRefResolver/getDocumentsById(java.util.List,java.lang.String)
org/springframework/data/mongodb/core/MongoTemplate/replaceWithResourceIfNecessary(java.lang.String)
org/springframework/data/mongodb/core/MongoTemplate/convertToDbObject(org.springframework.data.mongodb.core.CollectionOptions)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/readCollectionOrArray(org.springframework.data.util.TypeInformation,com.mongodb.BasicDBList,org.springframework.data.mongodb.core.convert.ObjectPath)
org/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder$NestedFieldProjection/toDBObject(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)
org/springframework/data/mongodb/core/query/Update/fromDBObject(com.mongodb.DBObject,java.lang.String%5B%5D)
org/springframework/data/mongodb/core/query/Query/getQueryObject()
org/springframework/data/mongodb/core/convert/MappingMongoConverter/readMap(org.springframework.data.util.TypeInformation,com.mongodb.DBObject,org.springframework.data.mongodb.core.convert.ObjectPath)
org/springframework/data/mongodb/core/aggregation/ConditionalOperators$Cond/getClauses(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext,java.lang.String,java.lang.Object)
org/springframework/data/mongodb/core/convert/UpdateMapper/getMappedUpdateModifier(org.springframework.data.mongodb.core.convert.QueryMapper$Field,java.lang.Object)
org/springframework/data/mongodb/core/convert/MongoExampleMapper/updateTypeRestrictions(com.mongodb.DBObject,org.springframework.data.domain.Example)
org/springframework/data/mongodb/core/aggregation/GroupOperation/toDBObject(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)
org/springframework/data/mongodb/config/MongoClientParser/parse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/core/MongoOptionsFactoryBean/createInstance()
org/springframework/data/mongodb/core/convert/MongoExampleMapper/getMappedPropertyPath(java.lang.String,java.lang.Class)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver/createGeoSpatialIndexDefinition(java.lang.String,java.lang.String,org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/aggregation/BucketOperationSupport$OperationOutput/getOperationArguments(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)
org/springframework/data/mongodb/core/MongoTemplate/copyMapReduceOptionsToCommand(org.springframework.data.mongodb.core.query.Query,org.springframework.data.mongodb.core.mapreduce.MapReduceOptions,com.mongodb.MapReduceCommand)
org/springframework/data/mongodb/core/MongoOptionsFactoryBean/MongoOptionsFactoryBean()
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver/potentiallyCreateTextIndexDefinition(org.springframework.data.mongodb.core.mapping.MongoPersistentEntity)
org/springframework/data/mongodb/config/ReadPreferencePropertyEditor/setAsText(java.lang.String)
org/springframework/data/mongodb/core/index/IndexInfo/isIndexForFields(java.util.Collection)
org/springframework/data/mongodb/core/convert/MongoExampleMapper/orConcatenate(com.mongodb.DBObject)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/bulkReadAndConvertDBRefs(java.util.List,org.springframework.data.util.TypeInformation,org.springframework.data.mongodb.core.convert.ObjectPath,java.lang.Class)
org/springframework/data/mongodb/core/aggregation/AggregationFunctionExpressions$FunctionExpression/toDbObject(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)
org/springframework/data/mongodb/config/MongoCredentialPropertyEditor/extractCredentialsString(java.lang.String)
org/springframework/data/mongodb/core/aggregation/SortOperation/toDBObject(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)
org/springframework/data/mongodb/core/query/SerializationUtils/toFlatMap(java.lang.String,java.lang.Object,java.util.Map)
org/springframework/data/mongodb/core/convert/QueryMapper/getMappedValue(org.springframework.data.mongodb.core.convert.QueryMapper$Field,java.lang.Object)
org/springframework/data/mongodb/core/ReflectiveDBCollectionInvoker/genIndexName(com.mongodb.DBObject)
org/springframework/data/mongodb/repository/cdi/MongoRepositoryExtension/afterBeanDiscovery(javax.enterprise.inject.spi.AfterBeanDiscovery,javax.enterprise.inject.spi.BeanManager)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/bulkReadAndConvertDBRefMapIntoTarget(org.springframework.data.util.TypeInformation,java.lang.Class,java.util.Map,java.util.Map)
org/springframework/data/mongodb/config/MongoTemplateParser/parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)
org/springframework/data/mongodb/repository/cdi/MongoRepositoryExtension/processBean(javax.enterprise.inject.spi.ProcessBean)
org/springframework/data/mongodb/repository/query/ConvertingParameterAccessor$ConvertingIterator/nextConverted(org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/core/aggregation/ProjectionOperation$ProjectionOperationBuilder$OperationProjection/getOperationArguments(org.springframework.data.mongodb.core.aggregation.AggregationOperationContext)
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexResolver$4/doWithAssociation(org.springframework.data.mapping.Association)
org/springframework/data/mongodb/core/DefaultScriptOperations/getScriptNames()
org/springframework/data/mongodb/config/MongoAuditingBeanDefinitionParser/doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/convertToMongoType(java.lang.Object,org.springframework.data.util.TypeInformation)
org/springframework/data/mongodb/core/aggregation/SpelExpressionTransformer$MethodReferenceNodeConversion/convert(org.springframework.data.mongodb.core.aggregation.AggregationExpressionTransformer$AggregationExpressionTransformationContext)
org/springframework/data/mongodb/repository/query/PartTreeMongoQuery/createQuery(org.springframework.data.mongodb.repository.query.ConvertingParameterAccessor)
org/springframework/data/mongodb/core/MongoTemplate/assertUpdateableIdIfNotSet(java.lang.Object)
org/springframework/data/mongodb/core/query/NearQuery/toDBObject()
org/springframework/data/mongodb/core/index/MongoPersistentEntityIndexCreator/fetchIndexInformation(org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexResolver$IndexDefinitionHolder)
org/springframework/data/mongodb/core/convert/MappingMongoConverter/writePropertyInternal(java.lang.Object,com.mongodb.DBObject,org.springframework.data.mongodb.core.mapping.MongoPersistentProperty)
org/springframework/data/mongodb/repository/query/ExpressionEvaluatingParameterBinder/createReplacementPattern(java.util.List)
org/springframework/data/mongodb/core/MongoTemplate/mapReduce(org.springframework.data.mongodb.core.query.Query,java.lang.String,java.lang.String,java.lang.String,org.springframework.data.mongodb.core.mapreduce.MapReduceOptions,java.lang.Class)
org/springframework/data/mongodb/core/query/Criteria/getSingleCriteriaObject()
org/springframework/data/mongodb/core/MongoTemplate/insertDBObjectList(java.lang.String,java.util.List)
org/springframework/data/mongodb/core/query/Update$SortModifier/Update$SortModifier(org.springframework.data.domain.Sort)
org/springframework/data/mongodb/repository/query/MongoQueryCreator/createLikeRegexCriteriaOrThrow(org.springframework.data.repository.query.parser.Part,org.springframework.data.mongodb.core.mapping.MongoPersistentProperty,org.springframework.data.mongodb.core.query.Criteria,java.util.Iterator,boolean)
org/springframework/data/mongodb/core/MongoTemplate$QueryCursorPreparer/prepare(com.mongodb.DBCursor)
org/springframework/data/mongodb/config/AbstractMongoConfiguration/scanForEntities(java.lang.String)
org/springframework/data/mongodb/repository/query/ExpressionEvaluatingParameterBinder/getParameterValueForBinding(org.springframework.data.mongodb.repository.query.MongoParameterAccessor,org.springframework.data.mongodb.repository.query.MongoParameters,org.springframework.data.mongodb.repository.query.StringBasedMongoQuery$ParameterBinding)
